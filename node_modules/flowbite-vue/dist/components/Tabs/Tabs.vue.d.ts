import type { PropType } from 'vue';
import type { TabsVariant } from './types';
declare const _default: import("vue").DefineComponent<{
    variant: {
        type: PropType<TabsVariant>;
        default: string;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    directive: {
        type: PropType<"if" | "show">;
        default: string;
    };
}, () => void, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "click:pane")[], "update:modelValue" | "click:pane", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    variant: {
        type: PropType<TabsVariant>;
        default: string;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    directive: {
        type: PropType<"if" | "show">;
        default: string;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    "onClick:pane"?: ((...args: any[]) => any) | undefined;
}, {
    variant: TabsVariant;
    modelValue: string;
    directive: "if" | "show";
}>;
export default _default;
