import type { ToastTransition } from '../../../../components/Toast/components/ToastProvider/types';
import type { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    transition: {
        type: PropType<ToastTransition>;
        default: string;
    };
}, {
    toasts: import("vue").Ref<{
        time: number;
        type: import("../../types").ToastType;
        text: string;
        component?: import("vue").DefineComponent<{}, {}, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}> | undefined;
        componentProps?: Record<string, unknown> | undefined;
        id: string;
    }[]>;
    removeToast: (id: string) => boolean;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    transition: {
        type: PropType<ToastTransition>;
        default: string;
    };
}>>, {
    transition: ToastTransition;
}>;
export default _default;
