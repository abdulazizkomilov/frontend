const storedTheme = localStorage.getItem('theme')

const getPreferredTheme = () => {
    if (storedTheme) {
        return storedTheme
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
}

const setTheme = function (theme) {
    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.documentElement.setAttribute('data-bs-theme', 'dark')
    } else {
        document.documentElement.setAttribute('data-bs-theme', theme)
    }
}

setTheme(getPreferredTheme())

window.addEventListener('DOMContentLoaded', () => {
    var el = document.querySelector('.theme-icon-active');
    if (el != 'undefined' && el != null) {
        const showActiveTheme = theme => {
            const activeThemeIcon = document.querySelector('.theme-icon-active use')
            const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
            const svgOfActiveBtn = btnToActive.querySelector('.mode-switch use').getAttribute('href')

            document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
                element.classList.remove('active')
            })

            btnToActive.classList.add('active')
            activeThemeIcon.setAttribute('href', svgOfActiveBtn)
        }

        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
            if (storedTheme !== 'light' || storedTheme !== 'dark') {
                setTheme(getPreferredTheme())
            }
        })

        showActiveTheme(getPreferredTheme())

        document.querySelectorAll('[data-bs-theme-value]')
            .forEach(toggle => {
                toggle.addEventListener('click', () => {
                    const theme = toggle.getAttribute('data-bs-theme-value')
                    localStorage.setItem('theme', theme)
                    setTheme(theme)
                    showActiveTheme(theme)
                })
            })

    }
})


var tns = (function () {
    var win = window;

    var raf = win.requestAnimationFrame
        || win.webkitRequestAnimationFrame
        || win.mozRequestAnimationFrame
        || win.msRequestAnimationFrame
        || function (cb) { return setTimeout(cb, 16); };

    var win$1 = window;

    var caf = win$1.cancelAnimationFrame
        || win$1.mozCancelAnimationFrame
        || function (id) { clearTimeout(id); };

    function extend() {
        var obj, name, copy,
            target = arguments[0] || {},
            i = 1,
            length = arguments.length;

        for (; i < length; i++) {
            if ((obj = arguments[i]) !== null) {
                for (name in obj) {
                    copy = obj[name];

                    if (target === copy) {
                        continue;
                    } else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        return target;
    }

    function checkStorageValue(value) {
        return ['true', 'false'].indexOf(value) >= 0 ? JSON.parse(value) : value;
    }

    function setLocalStorage(storage, key, value, access) {
        if (access) {
            try { storage.setItem(key, value); } catch (e) { }
        }
        return value;
    }

    function getSlideId() {
        var id = window.tnsId;
        window.tnsId = !id ? 1 : id + 1;

        return 'tns' + window.tnsId;
    }

    function getBody() {
        var doc = document,
            body = doc.body;

        if (!body) {
            body = doc.createElement('body');
            body.fake = true;
        }

        return body;
    }

    var docElement = document.documentElement;

    function setFakeBody(body) {
        var docOverflow = '';
        if (body.fake) {
            docOverflow = docElement.style.overflow;
            //avoid crashing IE8, if background image is used
            body.style.background = '';
            //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible
            body.style.overflow = docElement.style.overflow = 'hidden';
            docElement.appendChild(body);
        }

        return docOverflow;
    }

    function resetFakeBody(body, docOverflow) {
        if (body.fake) {
            body.remove();
            docElement.style.overflow = docOverflow;
            // Trigger layout so kinetic scrolling isn't disabled in iOS6+
            // eslint-disable-next-line
            docElement.offsetHeight;
        }
    }

    // get css-calc 

    function calc() {
        var doc = document,
            body = getBody(),
            docOverflow = setFakeBody(body),
            div = doc.createElement('div'),
            result = false;

        body.appendChild(div);
        try {
            var str = '(10px * 10)',
                vals = ['calc' + str, '-moz-calc' + str, '-webkit-calc' + str],
                val;
            for (var i = 0; i < 3; i++) {
                val = vals[i];
                div.style.width = val;
                if (div.offsetWidth === 100) {
                    result = val.replace(str, '');
                    break;
                }
            }
        } catch (e) { }

        body.fake ? resetFakeBody(body, docOverflow) : div.remove();

        return result;
    }

    // get subpixel support value

    function percentageLayout() {
        // check subpixel layout supporting
        var doc = document,
            body = getBody(),
            docOverflow = setFakeBody(body),
            wrapper = doc.createElement('div'),
            outer = doc.createElement('div'),
            str = '',
            count = 70,
            perPage = 3,
            supported = false;

        wrapper.className = "tns-t-subp2";
        outer.className = "tns-t-ct";

        for (var i = 0; i < count; i++) {
            str += '<div></div>';
        }

        outer.innerHTML = str;
        wrapper.appendChild(outer);
        body.appendChild(wrapper);

        supported = Math.abs(wrapper.getBoundingClientRect().left - outer.children[count - perPage].getBoundingClientRect().left) < 2;

        body.fake ? resetFakeBody(body, docOverflow) : wrapper.remove();

        return supported;
    }

    function mediaquerySupport() {
        if (window.matchMedia || window.msMatchMedia) {
            return true;
        }

        var doc = document,
            body = getBody(),
            docOverflow = setFakeBody(body),
            div = doc.createElement('div'),
            style = doc.createElement('style'),
            rule = '@media all and (min-width:1px){.tns-mq-test{position:absolute}}',
            position;

        style.type = 'text/css';
        div.className = 'tns-mq-test';

        body.appendChild(style);
        body.appendChild(div);

        if (style.styleSheet) {
            style.styleSheet.cssText = rule;
        } else {
            style.appendChild(doc.createTextNode(rule));
        }

        position = window.getComputedStyle ? window.getComputedStyle(div).position : div.currentStyle['position'];

        body.fake ? resetFakeBody(body, docOverflow) : div.remove();

        return position === "absolute";
    }

    // create and append style sheet
    function createStyleSheet(media, nonce) {
        // Create the <style> tag
        var style = document.createElement("style");
        // style.setAttribute("type", "text/css");

        // Add a media (and/or media query) here if you'd like!
        // style.setAttribute("media", "screen")
        // style.setAttribute("media", "only screen and (max-width : 1024px)")
        if (media) { style.setAttribute("media", media); }

        // Add nonce attribute for Content Security Policy
        if (nonce) { style.setAttribute("nonce", nonce); }

        // WebKit hack :(
        // style.appendChild(document.createTextNode(""));

        // Add the <style> element to the page
        document.querySelector('head').appendChild(style);

        return style.sheet ? style.sheet : style.styleSheet;
    }

    // cross browsers addRule method
    function addCSSRule(sheet, selector, rules, index) {
        // return raf(function() {
        'insertRule' in sheet ?
            sheet.insertRule(selector + '{' + rules + '}', index) :
            sheet.addRule(selector, rules, index);
        // });
    }

    // cross browsers addRule method
    function removeCSSRule(sheet, index) {
        // return raf(function() {
        'deleteRule' in sheet ?
            sheet.deleteRule(index) :
            sheet.removeRule(index);
        // });
    }

    function getCssRulesLength(sheet) {
        var rule = ('insertRule' in sheet) ? sheet.cssRules : sheet.rules;
        return rule.length;
    }

    function toDegree(y, x) {
        return Math.atan2(y, x) * (180 / Math.PI);
    }

    function getTouchDirection(angle, range) {
        var direction = false,
            gap = Math.abs(90 - Math.abs(angle));

        if (gap >= 90 - range) {
            direction = 'horizontal';
        } else if (gap <= range) {
            direction = 'vertical';
        }

        return direction;
    }

    // https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/
    function forEach(arr, callback, scope) {
        for (var i = 0, l = arr.length; i < l; i++) {
            callback.call(scope, arr[i], i);
        }
    }

    var classListSupport = 'classList' in document.createElement('_');

    var hasClass = classListSupport ?
        function (el, str) { return el.classList.contains(str); } :
        function (el, str) { return el.className.indexOf(str) >= 0; };

    var addClass = classListSupport ?
        function (el, str) {
            if (!hasClass(el, str)) { el.classList.add(str); }
        } :
        function (el, str) {
            if (!hasClass(el, str)) { el.className += ' ' + str; }
        };

    var removeClass = classListSupport ?
        function (el, str) {
            if (hasClass(el, str)) { el.classList.remove(str); }
        } :
        function (el, str) {
            if (hasClass(el, str)) { el.className = el.className.replace(str, ''); }
        };

    function hasAttr(el, attr) {
        return el.hasAttribute(attr);
    }

    function getAttr(el, attr) {
        return el.getAttribute(attr);
    }

    function isNodeList(el) {
        // Only NodeList has the "item()" function
        return typeof el.item !== "undefined";
    }

    function setAttrs(els, attrs) {
        els = (isNodeList(els) || els instanceof Array) ? els : [els];
        if (Object.prototype.toString.call(attrs) !== '[object Object]') { return; }

        for (var i = els.length; i--;) {
            for (var key in attrs) {
                els[i].setAttribute(key, attrs[key]);
            }
        }
    }

    function removeAttrs(els, attrs) {
        els = (isNodeList(els) || els instanceof Array) ? els : [els];
        attrs = (attrs instanceof Array) ? attrs : [attrs];

        var attrLength = attrs.length;
        for (var i = els.length; i--;) {
            for (var j = attrLength; j--;) {
                els[i].removeAttribute(attrs[j]);
            }
        }
    }

    function arrayFromNodeList(nl) {
        var arr = [];
        for (var i = 0, l = nl.length; i < l; i++) {
            arr.push(nl[i]);
        }
        return arr;
    }

    function hideElement(el, forceHide) {
        if (el.style.display !== 'none') { el.style.display = 'none'; }
    }

    function showElement(el, forceHide) {
        if (el.style.display === 'none') { el.style.display = ''; }
    }

    function isVisible(el) {
        return window.getComputedStyle(el).display !== 'none';
    }

    function whichProperty(props) {
        if (typeof props === 'string') {
            var arr = [props],
                Props = props.charAt(0).toUpperCase() + props.substr(1),
                prefixes = ['Webkit', 'Moz', 'ms', 'O'];

            prefixes.forEach(function (prefix) {
                if (prefix !== 'ms' || props === 'transform') {
                    arr.push(prefix + Props);
                }
            });

            props = arr;
        }

        var el = document.createElement('fakeelement'),
            len = props.length;
        for (var i = 0; i < props.length; i++) {
            var prop = props[i];
            if (el.style[prop] !== undefined) { return prop; }
        }

        return false; // explicit for ie9-
    }

    function has3DTransforms(tf) {
        if (!tf) { return false; }
        if (!window.getComputedStyle) { return false; }

        var doc = document,
            body = getBody(),
            docOverflow = setFakeBody(body),
            el = doc.createElement('p'),
            has3d,
            cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';

        cssTF += 'transform';

        // Add it to the body to get the computed style
        body.insertBefore(el, null);

        el.style[tf] = 'translate3d(1px,1px,1px)';
        has3d = window.getComputedStyle(el).getPropertyValue(cssTF);

        body.fake ? resetFakeBody(body, docOverflow) : el.remove();

        return (has3d !== undefined && has3d.length > 0 && has3d !== "none");
    }

    // get transitionend, animationend based on transitionDuration
    // @propin: string
    // @propOut: string, first-letter uppercase
    // Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd
    function getEndProperty(propIn, propOut) {
        var endProp = false;
        if (/^Webkit/.test(propIn)) {
            endProp = 'webkit' + propOut + 'End';
        } else if (/^O/.test(propIn)) {
            endProp = 'o' + propOut + 'End';
        } else if (propIn) {
            endProp = propOut.toLowerCase() + 'end';
        }
        return endProp;
    }

    // Test via a getter in the options object to see if the passive property is accessed
    var supportsPassive = false;
    try {
        var opts = Object.defineProperty({}, 'passive', {
            get: function () {
                supportsPassive = true;
            }
        });
        window.addEventListener("test", null, opts);
    } catch (e) { }
    var passiveOption = supportsPassive ? { passive: true } : false;

    function addEvents(el, obj, preventScrolling) {
        for (var prop in obj) {
            var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 && !preventScrolling ? passiveOption : false;
            el.addEventListener(prop, obj[prop], option);
        }
    }

    function removeEvents(el, obj) {
        for (var prop in obj) {
            var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 ? passiveOption : false;
            el.removeEventListener(prop, obj[prop], option);
        }
    }

    function Events() {
        return {
            topics: {},
            on: function (eventName, fn) {
                this.topics[eventName] = this.topics[eventName] || [];
                this.topics[eventName].push(fn);
            },
            off: function (eventName, fn) {
                if (this.topics[eventName]) {
                    for (var i = 0; i < this.topics[eventName].length; i++) {
                        if (this.topics[eventName][i] === fn) {
                            this.topics[eventName].splice(i, 1);
                            break;
                        }
                    }
                }
            },
            emit: function (eventName, data) {
                data.type = eventName;
                if (this.topics[eventName]) {
                    this.topics[eventName].forEach(function (fn) {
                        fn(data, eventName);
                    });
                }
            }
        };
    }

    function jsTransform(element, attr, prefix, postfix, to, duration, callback) {
        var tick = Math.min(duration, 10),
            unit = (to.indexOf('%') >= 0) ? '%' : 'px',
            to = to.replace(unit, ''),
            from = Number(element.style[attr].replace(prefix, '').replace(postfix, '').replace(unit, '')),
            positionTick = (to - from) / duration * tick,
            running;

        setTimeout(moveElement, tick);
        function moveElement() {
            duration -= tick;
            from += positionTick;
            element.style[attr] = prefix + from + unit + postfix;
            if (duration > 0) {
                setTimeout(moveElement, tick);
            } else {
                callback();
            }
        }
    }

    // Object.keys
    if (!Object.keys) {
        Object.keys = function (object) {
            var keys = [];
            for (var name in object) {
                if (Object.prototype.hasOwnProperty.call(object, name)) {
                    keys.push(name);
                }
            }
            return keys;
        };
    }

    // ChildNode.remove
    if (!("remove" in Element.prototype)) {
        Element.prototype.remove = function () {
            if (this.parentNode) {
                this.parentNode.removeChild(this);
            }
        };
    }

    var tns = function (options) {
        options = extend({
            container: '.slider',
            mode: 'carousel',
            axis: 'horizontal',
            items: 1,
            gutter: 0,
            edgePadding: 0,
            fixedWidth: false,
            autoWidth: false,
            viewportMax: false,
            slideBy: 1,
            center: false,
            controls: true,
            controlsPosition: 'top',
            controlsText: ['prev', 'next'],
            controlsContainer: false,
            prevButton: false,
            nextButton: false,
            nav: true,
            navPosition: 'top',
            navContainer: false,
            navAsThumbnails: false,
            arrowKeys: false,
            speed: 300,
            autoplay: false,
            autoplayPosition: 'top',
            autoplayTimeout: 5000,
            autoplayDirection: 'forward',
            autoplayText: ['start', 'stop'],
            autoplayHoverPause: false,
            autoplayButton: false,
            autoplayButtonOutput: true,
            autoplayResetOnVisibility: true,
            animateIn: 'tns-fadeIn',
            animateOut: 'tns-fadeOut',
            animateNormal: 'tns-normal',
            animateDelay: false,
            loop: true,
            rewind: false,
            autoHeight: false,
            responsive: false,
            lazyload: false,
            lazyloadSelector: '.tns-lazy-img',
            touch: true,
            mouseDrag: false,
            swipeAngle: 15,
            nested: false,
            preventActionWhenRunning: false,
            preventScrollOnTouch: false,
            freezable: true,
            onInit: false,
            useLocalStorage: true,
            nonce: false
        }, options || {});

        var doc = document,
            win = window,
            KEYS = {
                ENTER: 13,
                SPACE: 32,
                LEFT: 37,
                RIGHT: 39
            },
            tnsStorage = {},
            localStorageAccess = options.useLocalStorage;

        if (localStorageAccess) {
            // check browser version and local storage access
            var browserInfo = navigator.userAgent;
            var uid = new Date;

            try {
                tnsStorage = win.localStorage;
                if (tnsStorage) {
                    tnsStorage.setItem(uid, uid);
                    localStorageAccess = tnsStorage.getItem(uid) == uid;
                    tnsStorage.removeItem(uid);
                } else {
                    localStorageAccess = false;
                }
                if (!localStorageAccess) { tnsStorage = {}; }
            } catch (e) {
                localStorageAccess = false;
            }

            if (localStorageAccess) {
                // remove storage when browser version changes
                if (tnsStorage['tnsApp'] && tnsStorage['tnsApp'] !== browserInfo) {
                    ['tC', 'tPL', 'tMQ', 'tTf', 't3D', 'tTDu', 'tTDe', 'tADu', 'tADe', 'tTE', 'tAE'].forEach(function (item) { tnsStorage.removeItem(item); });
                }
                // update browserInfo
                localStorage['tnsApp'] = browserInfo;
            }
        }

        var CALC = tnsStorage['tC'] ? checkStorageValue(tnsStorage['tC']) : setLocalStorage(tnsStorage, 'tC', calc(), localStorageAccess),
            PERCENTAGELAYOUT = tnsStorage['tPL'] ? checkStorageValue(tnsStorage['tPL']) : setLocalStorage(tnsStorage, 'tPL', percentageLayout(), localStorageAccess),
            CSSMQ = tnsStorage['tMQ'] ? checkStorageValue(tnsStorage['tMQ']) : setLocalStorage(tnsStorage, 'tMQ', mediaquerySupport(), localStorageAccess),
            TRANSFORM = tnsStorage['tTf'] ? checkStorageValue(tnsStorage['tTf']) : setLocalStorage(tnsStorage, 'tTf', whichProperty('transform'), localStorageAccess),
            HAS3DTRANSFORMS = tnsStorage['t3D'] ? checkStorageValue(tnsStorage['t3D']) : setLocalStorage(tnsStorage, 't3D', has3DTransforms(TRANSFORM), localStorageAccess),
            TRANSITIONDURATION = tnsStorage['tTDu'] ? checkStorageValue(tnsStorage['tTDu']) : setLocalStorage(tnsStorage, 'tTDu', whichProperty('transitionDuration'), localStorageAccess),
            TRANSITIONDELAY = tnsStorage['tTDe'] ? checkStorageValue(tnsStorage['tTDe']) : setLocalStorage(tnsStorage, 'tTDe', whichProperty('transitionDelay'), localStorageAccess),
            ANIMATIONDURATION = tnsStorage['tADu'] ? checkStorageValue(tnsStorage['tADu']) : setLocalStorage(tnsStorage, 'tADu', whichProperty('animationDuration'), localStorageAccess),
            ANIMATIONDELAY = tnsStorage['tADe'] ? checkStorageValue(tnsStorage['tADe']) : setLocalStorage(tnsStorage, 'tADe', whichProperty('animationDelay'), localStorageAccess),
            TRANSITIONEND = tnsStorage['tTE'] ? checkStorageValue(tnsStorage['tTE']) : setLocalStorage(tnsStorage, 'tTE', getEndProperty(TRANSITIONDURATION, 'Transition'), localStorageAccess),
            ANIMATIONEND = tnsStorage['tAE'] ? checkStorageValue(tnsStorage['tAE']) : setLocalStorage(tnsStorage, 'tAE', getEndProperty(ANIMATIONDURATION, 'Animation'), localStorageAccess);

        // get element nodes from selectors
        var supportConsoleWarn = win.console && typeof win.console.warn === "function",
            tnsList = ['container', 'controlsContainer', 'prevButton', 'nextButton', 'navContainer', 'autoplayButton'],
            optionsElements = {};

        tnsList.forEach(function (item) {
            if (typeof options[item] === 'string') {
                var str = options[item],
                    el = doc.querySelector(str);
                optionsElements[item] = str;

                if (el && el.nodeName) {
                    options[item] = el;
                } else {
                    if (supportConsoleWarn) { console.warn('Can\'t find', options[item]); }
                    return;
                }
            }
        });

        // make sure at least 1 slide
        if (options.container.children.length < 1) {
            if (supportConsoleWarn) { console.warn('No slides found in', options.container); }
            return;
        }

        // update options
        var responsive = options.responsive,
            nested = options.nested,
            carousel = options.mode === 'carousel' ? true : false;

        if (responsive) {
            // apply responsive[0] to options and remove it
            if (0 in responsive) {
                options = extend(options, responsive[0]);
                delete responsive[0];
            }

            var responsiveTem = {};
            for (var key in responsive) {
                var val = responsive[key];
                // update responsive
                // from: 300: 2
                // to:
                //   300: {
                //     items: 2
                //   }
                val = typeof val === 'number' ? { items: val } : val;
                responsiveTem[key] = val;
            }
            responsive = responsiveTem;
            responsiveTem = null;
        }

        // update options
        function updateOptions(obj) {
            for (var key in obj) {
                if (!carousel) {
                    if (key === 'slideBy') { obj[key] = 'page'; }
                    if (key === 'edgePadding') { obj[key] = false; }
                    if (key === 'autoHeight') { obj[key] = false; }
                }

                // update responsive options
                if (key === 'responsive') { updateOptions(obj[key]); }
            }
        }
        if (!carousel) { updateOptions(options); }


        // === define and set variables ===
        if (!carousel) {
            options.axis = 'horizontal';
            options.slideBy = 'page';
            options.edgePadding = false;

            var animateIn = options.animateIn,
                animateOut = options.animateOut,
                animateDelay = options.animateDelay,
                animateNormal = options.animateNormal;
        }

        var horizontal = options.axis === 'horizontal' ? true : false,
            outerWrapper = doc.createElement('div'),
            innerWrapper = doc.createElement('div'),
            middleWrapper,
            container = options.container,
            containerParent = container.parentNode,
            containerHTML = container.outerHTML,
            slideItems = container.children,
            slideCount = slideItems.length,
            breakpointZone,
            windowWidth = getWindowWidth(),
            isOn = false;
        if (responsive) { setBreakpointZone(); }
        if (carousel) { container.className += ' tns-vpfix'; }

        // fixedWidth: viewport > rightBoundary > indexMax
        var autoWidth = options.autoWidth,
            fixedWidth = getOption('fixedWidth'),
            edgePadding = getOption('edgePadding'),
            gutter = getOption('gutter'),
            viewport = getViewportWidth(),
            center = getOption('center'),
            items = !autoWidth ? Math.floor(getOption('items')) : 1,
            slideBy = getOption('slideBy'),
            viewportMax = options.viewportMax || options.fixedWidthViewportWidth,
            arrowKeys = getOption('arrowKeys'),
            speed = getOption('speed'),
            rewind = options.rewind,
            loop = rewind ? false : options.loop,
            autoHeight = getOption('autoHeight'),
            controls = getOption('controls'),
            controlsText = getOption('controlsText'),
            nav = getOption('nav'),
            touch = getOption('touch'),
            mouseDrag = getOption('mouseDrag'),
            autoplay = getOption('autoplay'),
            autoplayTimeout = getOption('autoplayTimeout'),
            autoplayText = getOption('autoplayText'),
            autoplayHoverPause = getOption('autoplayHoverPause'),
            autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),
            sheet = createStyleSheet(null, getOption('nonce')),
            lazyload = options.lazyload,
            lazyloadSelector = options.lazyloadSelector,
            slidePositions, // collection of slide positions
            slideItemsOut = [],
            cloneCount = loop ? getCloneCountForLoop() : 0,
            slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2,
            hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false,
            rightBoundary = fixedWidth ? getRightBoundary() : null,
            updateIndexBeforeTransform = (!carousel || !loop) ? true : false,
            // transform
            transformAttr = horizontal ? 'left' : 'top',
            transformPrefix = '',
            transformPostfix = '',
            // index
            getIndexMax = (function () {
                if (fixedWidth) {
                    return function () { return center && !loop ? slideCount - 1 : Math.ceil(- rightBoundary / (fixedWidth + gutter)); };
                } else if (autoWidth) {
                    return function () {
                        for (var i = 0; i < slideCountNew; i++) {
                            if (slidePositions[i] >= - rightBoundary) { return i; }
                        }
                    };
                } else {
                    return function () {
                        if (center && carousel && !loop) {
                            return slideCount - 1;
                        } else {
                            return loop || carousel ? Math.max(0, slideCountNew - Math.ceil(items)) : slideCountNew - 1;
                        }
                    };
                }
            })(),
            index = getStartIndex(getOption('startIndex')),
            indexCached = index,
            displayIndex = getCurrentSlide(),
            indexMin = 0,
            indexMax = !autoWidth ? getIndexMax() : null,
            // resize
            resizeTimer,
            preventActionWhenRunning = options.preventActionWhenRunning,
            swipeAngle = options.swipeAngle,
            moveDirectionExpected = swipeAngle ? '?' : true,
            running = false,
            onInit = options.onInit,
            events = new Events(),
            // id, class
            newContainerClasses = ' tns-slider tns-' + options.mode,
            slideId = container.id || getSlideId(),
            disable = getOption('disable'),
            disabled = false,
            freezable = options.freezable,
            freeze = freezable && !autoWidth ? getFreeze() : false,
            frozen = false,
            controlsEvents = {
                'click': onControlsClick,
                'keydown': onControlsKeydown
            },
            navEvents = {
                'click': onNavClick,
                'keydown': onNavKeydown
            },
            hoverEvents = {
                'mouseover': mouseoverPause,
                'mouseout': mouseoutRestart
            },
            visibilityEvent = { 'visibilitychange': onVisibilityChange },
            docmentKeydownEvent = { 'keydown': onDocumentKeydown },
            touchEvents = {
                'touchstart': onPanStart,
                'touchmove': onPanMove,
                'touchend': onPanEnd,
                'touchcancel': onPanEnd
            }, dragEvents = {
                'mousedown': onPanStart,
                'mousemove': onPanMove,
                'mouseup': onPanEnd,
                'mouseleave': onPanEnd
            },
            hasControls = hasOption('controls'),
            hasNav = hasOption('nav'),
            navAsThumbnails = autoWidth ? true : options.navAsThumbnails,
            hasAutoplay = hasOption('autoplay'),
            hasTouch = hasOption('touch'),
            hasMouseDrag = hasOption('mouseDrag'),
            slideActiveClass = 'tns-slide-active',
            slideClonedClass = 'tns-slide-cloned',
            imgCompleteClass = 'tns-complete',
            imgEvents = {
                'load': onImgLoaded,
                'error': onImgFailed
            },
            imgsComplete,
            liveregionCurrent,
            preventScroll = options.preventScrollOnTouch === 'force' ? true : false;

        // controls
        if (hasControls) {
            var controlsContainer = options.controlsContainer,
                controlsContainerHTML = options.controlsContainer ? options.controlsContainer.outerHTML : '',
                prevButton = options.prevButton,
                nextButton = options.nextButton,
                prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : '',
                nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : '',
                prevIsButton,
                nextIsButton;
        }

        // nav
        if (hasNav) {
            var navContainer = options.navContainer,
                navContainerHTML = options.navContainer ? options.navContainer.outerHTML : '',
                navItems,
                pages = autoWidth ? slideCount : getPages(),
                pagesCached = 0,
                navClicked = -1,
                navCurrentIndex = getCurrentNavIndex(),
                navCurrentIndexCached = navCurrentIndex,
                navActiveClass = 'tns-nav-active',
                navStr = 'Carousel Page ',
                navStrCurrent = ' (Current Slide)';
        }

        // autoplay
        if (hasAutoplay) {
            var autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,
                autoplayButton = options.autoplayButton,
                autoplayButtonHTML = options.autoplayButton ? options.autoplayButton.outerHTML : '',
                autoplayHtmlStrings = ['<span class=\'tns-visually-hidden\'>', ' animation</span>'],
                autoplayTimer,
                animating,
                autoplayHoverPaused,
                autoplayUserPaused,
                autoplayVisibilityPaused;
        }

        if (hasTouch || hasMouseDrag) {
            var initPosition = {},
                lastPosition = {},
                translateInit,
                disX,
                disY,
                panStart = false,
                rafIndex,
                getDist = horizontal ?
                    function (a, b) { return a.x - b.x; } :
                    function (a, b) { return a.y - b.y; };
        }

        // disable slider when slidecount <= items
        if (!autoWidth) { resetVariblesWhenDisable(disable || freeze); }

        if (TRANSFORM) {
            transformAttr = TRANSFORM;
            transformPrefix = 'translate';

            if (HAS3DTRANSFORMS) {
                transformPrefix += horizontal ? '3d(' : '3d(0px, ';
                transformPostfix = horizontal ? ', 0px, 0px)' : ', 0px)';
            } else {
                transformPrefix += horizontal ? 'X(' : 'Y(';
                transformPostfix = ')';
            }

        }

        if (carousel) { container.className = container.className.replace('tns-vpfix', ''); }
        initStructure();
        initSheet();
        initSliderTransform();

        // === COMMON FUNCTIONS === //
        function resetVariblesWhenDisable(condition) {
            if (condition) {
                controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;
            }
        }

        function getCurrentSlide() {
            var tem = carousel ? index - cloneCount : index;
            while (tem < 0) { tem += slideCount; }
            return tem % slideCount + 1;
        }

        function getStartIndex(ind) {
            ind = ind ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind)) : 0;
            return carousel ? ind + cloneCount : ind;
        }

        function getAbsIndex(i) {
            if (i == null) { i = index; }

            if (carousel) { i -= cloneCount; }
            while (i < 0) { i += slideCount; }

            return Math.floor(i % slideCount);
        }

        function getCurrentNavIndex() {
            var absIndex = getAbsIndex(),
                result;

            result = navAsThumbnails ? absIndex :
                fixedWidth || autoWidth ? Math.ceil((absIndex + 1) * pages / slideCount - 1) :
                    Math.floor(absIndex / items);

            // set active nav to the last one when reaches the right edge
            if (!loop && carousel && index === indexMax) { result = pages - 1; }

            return result;
        }

        function getItemsMax() {
            // fixedWidth or autoWidth while viewportMax is not available
            if (autoWidth || (fixedWidth && !viewportMax)) {
                return slideCount - 1;
                // most cases
            } else {
                var str = fixedWidth ? 'fixedWidth' : 'items',
                    arr = [];

                if (fixedWidth || options[str] < slideCount) { arr.push(options[str]); }

                if (responsive) {
                    for (var bp in responsive) {
                        var tem = responsive[bp][str];
                        if (tem && (fixedWidth || tem < slideCount)) { arr.push(tem); }
                    }
                }

                if (!arr.length) { arr.push(0); }

                return Math.ceil(fixedWidth ? viewportMax / Math.min.apply(null, arr) : Math.max.apply(null, arr));
            }
        }

        function getCloneCountForLoop() {
            var itemsMax = getItemsMax(),
                result = carousel ? Math.ceil((itemsMax * 5 - slideCount) / 2) : (itemsMax * 4 - slideCount);
            result = Math.max(itemsMax, result);

            return hasOption('edgePadding') ? result + 1 : result;
        }

        function getWindowWidth() {
            return win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;
        }

        function getInsertPosition(pos) {
            return pos === 'top' ? 'afterbegin' : 'beforeend';
        }

        function getClientWidth(el) {
            if (el == null) { return; }
            var div = doc.createElement('div'), rect, width;
            el.appendChild(div);
            rect = div.getBoundingClientRect();
            width = rect.right - rect.left;
            div.remove();
            return width || getClientWidth(el.parentNode);
        }

        function getViewportWidth() {
            var gap = edgePadding ? edgePadding * 2 - gutter : 0;
            return getClientWidth(containerParent) - gap;
        }

        function hasOption(item) {
            if (options[item]) {
                return true;
            } else {
                if (responsive) {
                    for (var bp in responsive) {
                        if (responsive[bp][item]) { return true; }
                    }
                }
                return false;
            }
        }

        // get option:
        // fixed width: viewport, fixedWidth, gutter => items
        // others: window width => all variables
        // all: items => slideBy
        function getOption(item, ww) {
            if (ww == null) { ww = windowWidth; }

            if (item === 'items' && fixedWidth) {
                return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;

            } else {
                var result = options[item];

                if (responsive) {
                    for (var bp in responsive) {
                        // bp: convert string to number
                        if (ww >= parseInt(bp)) {
                            if (item in responsive[bp]) { result = responsive[bp][item]; }
                        }
                    }
                }

                if (item === 'slideBy' && result === 'page') { result = getOption('items'); }
                if (!carousel && (item === 'slideBy' || item === 'items')) { result = Math.floor(result); }

                return result;
            }
        }

        function getSlideMarginLeft(i) {
            return CALC ?
                CALC + '(' + i * 100 + '% / ' + slideCountNew + ')' :
                i * 100 / slideCountNew + '%';
        }

        function getInnerWrapperStyles(edgePaddingTem, gutterTem, fixedWidthTem, speedTem, autoHeightBP) {
            var str = '';

            if (edgePaddingTem !== undefined) {
                var gap = edgePaddingTem;
                if (gutterTem) { gap -= gutterTem; }
                str = horizontal ?
                    'margin: 0 ' + gap + 'px 0 ' + edgePaddingTem + 'px;' :
                    'margin: ' + edgePaddingTem + 'px 0 ' + gap + 'px 0;';
            } else if (gutterTem && !fixedWidthTem) {
                var gutterTemUnit = '-' + gutterTem + 'px',
                    dir = horizontal ? gutterTemUnit + ' 0 0' : '0 ' + gutterTemUnit + ' 0';
                str = 'margin: 0 ' + dir + ';';
            }

            if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) { str += getTransitionDurationStyle(speedTem); }
            return str;
        }

        function getContainerWidth(fixedWidthTem, gutterTem, itemsTem) {
            if (fixedWidthTem) {
                return (fixedWidthTem + gutterTem) * slideCountNew + 'px';
            } else {
                return CALC ?
                    CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')' :
                    slideCountNew * 100 / itemsTem + '%';
            }
        }

        function getSlideWidthStyle(fixedWidthTem, gutterTem, itemsTem) {
            var width;

            if (fixedWidthTem) {
                width = (fixedWidthTem + gutterTem) + 'px';
            } else {
                if (!carousel) { itemsTem = Math.floor(itemsTem); }
                var dividend = carousel ? slideCountNew : itemsTem;
                width = CALC ?
                    CALC + '(100% / ' + dividend + ')' :
                    100 / dividend + '%';
            }

            width = 'width:' + width;

            // inner slider: overwrite outer slider styles
            return nested !== 'inner' ? width + ';' : width + ' !important;';
        }

        function getSlideGutterStyle(gutterTem) {
            var str = '';

            // gutter maybe interger || 0
            // so can't use 'if (gutter)'
            if (gutterTem !== false) {
                var prop = horizontal ? 'padding-' : 'margin-',
                    dir = horizontal ? 'right' : 'bottom';
                str = prop + dir + ': ' + gutterTem + 'px;';
            }

            return str;
        }

        function getCSSPrefix(name, num) {
            var prefix = name.substring(0, name.length - num).toLowerCase();
            if (prefix) { prefix = '-' + prefix + '-'; }

            return prefix;
        }

        function getTransitionDurationStyle(speed) {
            return getCSSPrefix(TRANSITIONDURATION, 18) + 'transition-duration:' + speed / 1000 + 's;';
        }

        function getAnimationDurationStyle(speed) {
            return getCSSPrefix(ANIMATIONDURATION, 17) + 'animation-duration:' + speed / 1000 + 's;';
        }

        function initStructure() {
            var classOuter = 'tns-outer',
                classInner = 'tns-inner',
                hasGutter = hasOption('gutter');

            outerWrapper.className = classOuter;
            innerWrapper.className = classInner;
            outerWrapper.id = slideId + '-ow';
            innerWrapper.id = slideId + '-iw';

            // set container properties
            if (container.id === '') { container.id = slideId; }
            newContainerClasses += PERCENTAGELAYOUT || autoWidth ? ' tns-subpixel' : ' tns-no-subpixel';
            newContainerClasses += CALC ? ' tns-calc' : ' tns-no-calc';
            if (autoWidth) { newContainerClasses += ' tns-autowidth'; }
            newContainerClasses += ' tns-' + options.axis;
            container.className += newContainerClasses;

            // add constrain layer for carousel
            if (carousel) {
                middleWrapper = doc.createElement('div');
                middleWrapper.id = slideId + '-mw';
                middleWrapper.className = 'tns-ovh';

                outerWrapper.appendChild(middleWrapper);
                middleWrapper.appendChild(innerWrapper);
            } else {
                outerWrapper.appendChild(innerWrapper);
            }

            if (autoHeight) {
                var wp = middleWrapper ? middleWrapper : innerWrapper;
                wp.className += ' tns-ah';
            }

            containerParent.insertBefore(outerWrapper, container);
            innerWrapper.appendChild(container);

            // add id, class, aria attributes
            // before clone slides
            forEach(slideItems, function (item, i) {
                addClass(item, 'tns-item');
                if (!item.id) { item.id = slideId + '-item' + i; }
                if (!carousel && animateNormal) { addClass(item, animateNormal); }
                setAttrs(item, {
                    'aria-hidden': 'true',
                    'tabindex': '-1'
                });
            });

            // ## clone slides
            // carousel: n + slides + n
            // gallery:      slides + n
            if (cloneCount) {
                var fragmentBefore = doc.createDocumentFragment(),
                    fragmentAfter = doc.createDocumentFragment();

                for (var j = cloneCount; j--;) {
                    var num = j % slideCount,
                        cloneFirst = slideItems[num].cloneNode(true);
                    addClass(cloneFirst, slideClonedClass);
                    removeAttrs(cloneFirst, 'id');
                    fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);

                    if (carousel) {
                        var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);
                        addClass(cloneLast, slideClonedClass);
                        removeAttrs(cloneLast, 'id');
                        fragmentBefore.appendChild(cloneLast);
                    }
                }

                container.insertBefore(fragmentBefore, container.firstChild);
                container.appendChild(fragmentAfter);
                slideItems = container.children;
            }

        }

        function initSliderTransform() {
            // ## images loaded/failed
            if (hasOption('autoHeight') || autoWidth || !horizontal) {
                var imgs = container.querySelectorAll('img');

                // add img load event listener
                forEach(imgs, function (img) {
                    var src = img.src;

                    if (!lazyload) {
                        // not data img
                        if (src && src.indexOf('data:image') < 0) {
                            img.src = '';
                            addEvents(img, imgEvents);
                            addClass(img, 'loading');

                            img.src = src;
                            // data img
                        } else {
                            imgLoaded(img);
                        }
                    }
                });

                // set imgsComplete
                raf(function () { imgsLoadedCheck(arrayFromNodeList(imgs), function () { imgsComplete = true; }); });

                // reset imgs for auto height: check visible imgs only
                if (hasOption('autoHeight')) { imgs = getImageArray(index, Math.min(index + items - 1, slideCountNew - 1)); }

                lazyload ? initSliderTransformStyleCheck() : raf(function () { imgsLoadedCheck(arrayFromNodeList(imgs), initSliderTransformStyleCheck); });

            } else {
                // set container transform property
                if (carousel) { doContainerTransformSilent(); }

                // update slider tools and events
                initTools();
                initEvents();
            }
        }

        function initSliderTransformStyleCheck() {
            if (autoWidth && slideCount > 1) {
                // check styles application
                var num = loop ? index : slideCount - 1;

                (function stylesApplicationCheck() {
                    var left = slideItems[num].getBoundingClientRect().left;
                    var right = slideItems[num - 1].getBoundingClientRect().right;

                    (Math.abs(left - right) <= 1) ?
                        initSliderTransformCore() :
                        setTimeout(function () { stylesApplicationCheck(); }, 16);
                })();

            } else {
                initSliderTransformCore();
            }
        }


        function initSliderTransformCore() {
            // run Fn()s which are rely on image loading
            if (!horizontal || autoWidth) {
                setSlidePositions();

                if (autoWidth) {
                    rightBoundary = getRightBoundary();
                    if (freezable) { freeze = getFreeze(); }
                    indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=
                    resetVariblesWhenDisable(disable || freeze);
                } else {
                    updateContentWrapperHeight();
                }
            }

            // set container transform property
            if (carousel) { doContainerTransformSilent(); }

            // update slider tools and events
            initTools();
            initEvents();
        }

        function initSheet() {
            // gallery:
            // set animation classes and left value for gallery slider
            if (!carousel) {
                for (var i = index, l = index + Math.min(slideCount, items); i < l; i++) {
                    var item = slideItems[i];
                    item.style.left = (i - index) * 100 / items + '%';
                    addClass(item, animateIn);
                    removeClass(item, animateNormal);
                }
            }

            // #### LAYOUT

            // ## INLINE-BLOCK VS FLOAT

            // ## PercentageLayout:
            // slides: inline-block
            // remove blank space between slides by set font-size: 0

            // ## Non PercentageLayout:
            // slides: float
            //         margin-right: -100%
            //         margin-left: ~

            // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing
            if (horizontal) {
                if (PERCENTAGELAYOUT || autoWidth) {
                    addCSSRule(sheet, '#' + slideId + ' > .tns-item', 'font-size:' + win.getComputedStyle(slideItems[0]).fontSize + ';', getCssRulesLength(sheet));
                    addCSSRule(sheet, '#' + slideId, 'font-size:0;', getCssRulesLength(sheet));
                } else if (carousel) {
                    forEach(slideItems, function (slide, i) {
                        slide.style.marginLeft = getSlideMarginLeft(i);
                    });
                }
            }


            // ## BASIC STYLES
            if (CSSMQ) {
                // middle wrapper style
                if (TRANSITIONDURATION) {
                    var str = middleWrapper && options.autoHeight ? getTransitionDurationStyle(options.speed) : '';
                    addCSSRule(sheet, '#' + slideId + '-mw', str, getCssRulesLength(sheet));
                }

                // inner wrapper styles
                str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth, options.speed, options.autoHeight);
                addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet));

                // container styles
                if (carousel) {
                    str = horizontal && !autoWidth ? 'width:' + getContainerWidth(options.fixedWidth, options.gutter, options.items) + ';' : '';
                    if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }
                    addCSSRule(sheet, '#' + slideId, str, getCssRulesLength(sheet));
                }

                // slide styles
                str = horizontal && !autoWidth ? getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) : '';
                if (options.gutter) { str += getSlideGutterStyle(options.gutter); }
                // set gallery items transition-duration
                if (!carousel) {
                    if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }
                    if (ANIMATIONDURATION) { str += getAnimationDurationStyle(speed); }
                }
                if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }

                // non CSS mediaqueries: IE8
                // ## update inner wrapper, container, slides if needed
                // set inline styles for inner wrapper & container
                // insert stylesheet (one line) for slides only (since slides are many)
            } else {
                // middle wrapper styles
                update_carousel_transition_duration();

                // inner wrapper styles
                innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, autoHeight);

                // container styles
                if (carousel && horizontal && !autoWidth) {
                    container.style.width = getContainerWidth(fixedWidth, gutter, items);
                }

                // slide styles
                var str = horizontal && !autoWidth ? getSlideWidthStyle(fixedWidth, gutter, items) : '';
                if (gutter) { str += getSlideGutterStyle(gutter); }

                // append to the last line
                if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }
            }

            // ## MEDIAQUERIES
            if (responsive && CSSMQ) {
                for (var bp in responsive) {
                    // bp: convert string to number
                    bp = parseInt(bp);

                    var opts = responsive[bp],
                        str = '',
                        middleWrapperStr = '',
                        innerWrapperStr = '',
                        containerStr = '',
                        slideStr = '',
                        itemsBP = !autoWidth ? getOption('items', bp) : null,
                        fixedWidthBP = getOption('fixedWidth', bp),
                        speedBP = getOption('speed', bp),
                        edgePaddingBP = getOption('edgePadding', bp),
                        autoHeightBP = getOption('autoHeight', bp),
                        gutterBP = getOption('gutter', bp);

                    // middle wrapper string
                    if (TRANSITIONDURATION && middleWrapper && getOption('autoHeight', bp) && 'speed' in opts) {
                        middleWrapperStr = '#' + slideId + '-mw{' + getTransitionDurationStyle(speedBP) + '}';
                    }

                    // inner wrapper string
                    if ('edgePadding' in opts || 'gutter' in opts) {
                        innerWrapperStr = '#' + slideId + '-iw{' + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP, speedBP, autoHeightBP) + '}';
                    }

                    // container string
                    if (carousel && horizontal && !autoWidth && ('fixedWidth' in opts || 'items' in opts || (fixedWidth && 'gutter' in opts))) {
                        containerStr = 'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + ';';
                    }
                    if (TRANSITIONDURATION && 'speed' in opts) {
                        containerStr += getTransitionDurationStyle(speedBP);
                    }
                    if (containerStr) {
                        containerStr = '#' + slideId + '{' + containerStr + '}';
                    }

                    // slide string
                    if ('fixedWidth' in opts || (fixedWidth && 'gutter' in opts) || !carousel && 'items' in opts) {
                        slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);
                    }
                    if ('gutter' in opts) {
                        slideStr += getSlideGutterStyle(gutterBP);
                    }
                    // set gallery items transition-duration
                    if (!carousel && 'speed' in opts) {
                        if (TRANSITIONDURATION) { slideStr += getTransitionDurationStyle(speedBP); }
                        if (ANIMATIONDURATION) { slideStr += getAnimationDurationStyle(speedBP); }
                    }
                    if (slideStr) { slideStr = '#' + slideId + ' > .tns-item{' + slideStr + '}'; }

                    // add up
                    str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;

                    if (str) {
                        sheet.insertRule('@media (min-width: ' + bp / 16 + 'em) {' + str + '}', sheet.cssRules.length);
                    }
                }
            }
        }

        function initTools() {
            // == slides ==
            updateSlideStatus();

            // == live region ==
            outerWrapper.insertAdjacentHTML('afterbegin', '<div class="tns-liveregion tns-visually-hidden" aria-live="polite" aria-atomic="true">slide <span class="current">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');
            liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current');

            // == autoplayInit ==
            if (hasAutoplay) {
                var txt = autoplay ? 'stop' : 'start';
                if (autoplayButton) {
                    setAttrs(autoplayButton, { 'data-action': txt });
                } else if (options.autoplayButtonOutput) {
                    outerWrapper.insertAdjacentHTML(getInsertPosition(options.autoplayPosition), '<button type="button" data-action="' + txt + '">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + '</button>');
                    autoplayButton = outerWrapper.querySelector('[data-action]');
                }

                // add event
                if (autoplayButton) {
                    addEvents(autoplayButton, { 'click': toggleAutoplay });
                }

                if (autoplay) {
                    startAutoplay();
                    if (autoplayHoverPause) { addEvents(container, hoverEvents); }
                    if (autoplayResetOnVisibility) { addEvents(container, visibilityEvent); }
                }
            }

            // == navInit ==
            if (hasNav) {
                var initIndex = !carousel ? 0 : cloneCount;
                // customized nav
                // will not hide the navs in case they're thumbnails
                if (navContainer) {
                    setAttrs(navContainer, { 'aria-label': 'Carousel Pagination' });
                    navItems = navContainer.children;
                    forEach(navItems, function (item, i) {
                        setAttrs(item, {
                            'data-nav': i,
                            'tabindex': '-1',
                            'aria-label': navStr + (i + 1),
                            'aria-controls': slideId,
                        });
                    });

                    // generated nav
                } else {
                    var navHtml = '',
                        hiddenStr = navAsThumbnails ? '' : 'style="display:none"';
                    for (var i = 0; i < slideCount; i++) {
                        // hide nav items by default
                        navHtml += '<button type="button" data-nav="' + i + '" tabindex="-1" aria-controls="' + slideId + '" ' + hiddenStr + ' aria-label="' + navStr + (i + 1) + '"></button>';
                    }
                    navHtml = '<div class="tns-nav" aria-label="Carousel Pagination">' + navHtml + '</div>';
                    outerWrapper.insertAdjacentHTML(getInsertPosition(options.navPosition), navHtml);

                    navContainer = outerWrapper.querySelector('.tns-nav');
                    navItems = navContainer.children;
                }

                updateNavVisibility();

                // add transition
                if (TRANSITIONDURATION) {
                    var prefix = TRANSITIONDURATION.substring(0, TRANSITIONDURATION.length - 18).toLowerCase(),
                        str = 'transition: all ' + speed / 1000 + 's';

                    if (prefix) {
                        str = '-' + prefix + '-' + str;
                    }

                    addCSSRule(sheet, '[aria-controls^=' + slideId + '-item]', str, getCssRulesLength(sheet));
                }

                setAttrs(navItems[navCurrentIndex], { 'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent });
                removeAttrs(navItems[navCurrentIndex], 'tabindex');
                addClass(navItems[navCurrentIndex], navActiveClass);

                // add events
                addEvents(navContainer, navEvents);
            }



            // == controlsInit ==
            if (hasControls) {
                if (!controlsContainer && (!prevButton || !nextButton)) {
                    outerWrapper.insertAdjacentHTML(getInsertPosition(options.controlsPosition), '<div class="tns-controls" aria-label="Carousel Navigation" tabindex="0"><button type="button" data-controls="prev" tabindex="-1" aria-controls="' + slideId + '">' + controlsText[0] + '</button><button type="button" data-controls="next" tabindex="-1" aria-controls="' + slideId + '">' + controlsText[1] + '</button></div>');

                    controlsContainer = outerWrapper.querySelector('.tns-controls');
                }

                if (!prevButton || !nextButton) {
                    prevButton = controlsContainer.children[0];
                    nextButton = controlsContainer.children[1];
                }

                if (options.controlsContainer) {
                    setAttrs(controlsContainer, {
                        'aria-label': 'Carousel Navigation',
                        'tabindex': '0'
                    });
                }

                if (options.controlsContainer || (options.prevButton && options.nextButton)) {
                    setAttrs([prevButton, nextButton], {
                        'aria-controls': slideId,
                        'tabindex': '-1',
                    });
                }

                if (options.controlsContainer || (options.prevButton && options.nextButton)) {
                    setAttrs(prevButton, { 'data-controls': 'prev' });
                    setAttrs(nextButton, { 'data-controls': 'next' });
                }

                prevIsButton = isButton(prevButton);
                nextIsButton = isButton(nextButton);

                updateControlsStatus();

                // add events
                if (controlsContainer) {
                    addEvents(controlsContainer, controlsEvents);
                } else {
                    addEvents(prevButton, controlsEvents);
                    addEvents(nextButton, controlsEvents);
                }
            }

            // hide tools if needed
            disableUI();
        }

        function initEvents() {
            // add events
            if (carousel && TRANSITIONEND) {
                var eve = {};
                eve[TRANSITIONEND] = onTransitionEnd;
                addEvents(container, eve);
            }

            if (touch) { addEvents(container, touchEvents, options.preventScrollOnTouch); }
            if (mouseDrag) { addEvents(container, dragEvents); }
            if (arrowKeys) { addEvents(doc, docmentKeydownEvent); }

            if (nested === 'inner') {
                events.on('outerResized', function () {
                    resizeTasks();
                    events.emit('innerLoaded', info());
                });
            } else if (responsive || fixedWidth || autoWidth || autoHeight || !horizontal) {
                addEvents(win, { 'resize': onResize });
            }

            if (autoHeight) {
                if (nested === 'outer') {
                    events.on('innerLoaded', doAutoHeight);
                } else if (!disable) { doAutoHeight(); }
            }

            doLazyLoad();
            if (disable) { disableSlider(); } else if (freeze) { freezeSlider(); }

            events.on('indexChanged', additionalUpdates);
            if (nested === 'inner') { events.emit('innerLoaded', info()); }
            if (typeof onInit === 'function') { onInit(info()); }
            isOn = true;
        }

        function destroy() {
            // sheet
            sheet.disabled = true;
            if (sheet.ownerNode) { sheet.ownerNode.remove(); }

            // remove win event listeners
            removeEvents(win, { 'resize': onResize });

            // arrowKeys, controls, nav
            if (arrowKeys) { removeEvents(doc, docmentKeydownEvent); }
            if (controlsContainer) { removeEvents(controlsContainer, controlsEvents); }
            if (navContainer) { removeEvents(navContainer, navEvents); }

            // autoplay
            removeEvents(container, hoverEvents);
            removeEvents(container, visibilityEvent);
            if (autoplayButton) { removeEvents(autoplayButton, { 'click': toggleAutoplay }); }
            if (autoplay) { clearInterval(autoplayTimer); }

            // container
            if (carousel && TRANSITIONEND) {
                var eve = {};
                eve[TRANSITIONEND] = onTransitionEnd;
                removeEvents(container, eve);
            }
            if (touch) { removeEvents(container, touchEvents); }
            if (mouseDrag) { removeEvents(container, dragEvents); }

            // cache Object values in options && reset HTML
            var htmlList = [containerHTML, controlsContainerHTML, prevButtonHTML, nextButtonHTML, navContainerHTML, autoplayButtonHTML];

            tnsList.forEach(function (item, i) {
                var el = item === 'container' ? outerWrapper : options[item];

                if (typeof el === 'object' && el) {
                    var prevEl = el.previousElementSibling ? el.previousElementSibling : false,
                        parentEl = el.parentNode;
                    el.outerHTML = htmlList[i];
                    options[item] = prevEl ? prevEl.nextElementSibling : parentEl.firstElementChild;
                }
            });


            // reset variables
            tnsList = animateIn = animateOut = animateDelay = animateNormal = horizontal = outerWrapper = innerWrapper = container = containerParent = containerHTML = slideItems = slideCount = breakpointZone = windowWidth = autoWidth = fixedWidth = edgePadding = gutter = viewport = items = slideBy = viewportMax = arrowKeys = speed = rewind = loop = autoHeight = sheet = lazyload = slidePositions = slideItemsOut = cloneCount = slideCountNew = hasRightDeadZone = rightBoundary = updateIndexBeforeTransform = transformAttr = transformPrefix = transformPostfix = getIndexMax = index = indexCached = indexMin = indexMax = resizeTimer = swipeAngle = moveDirectionExpected = running = onInit = events = newContainerClasses = slideId = disable = disabled = freezable = freeze = frozen = controlsEvents = navEvents = hoverEvents = visibilityEvent = docmentKeydownEvent = touchEvents = dragEvents = hasControls = hasNav = navAsThumbnails = hasAutoplay = hasTouch = hasMouseDrag = slideActiveClass = imgCompleteClass = imgEvents = imgsComplete = controls = controlsText = controlsContainer = controlsContainerHTML = prevButton = nextButton = prevIsButton = nextIsButton = nav = navContainer = navContainerHTML = navItems = pages = pagesCached = navClicked = navCurrentIndex = navCurrentIndexCached = navActiveClass = navStr = navStrCurrent = autoplay = autoplayTimeout = autoplayDirection = autoplayText = autoplayHoverPause = autoplayButton = autoplayButtonHTML = autoplayResetOnVisibility = autoplayHtmlStrings = autoplayTimer = animating = autoplayHoverPaused = autoplayUserPaused = autoplayVisibilityPaused = initPosition = lastPosition = translateInit = disX = disY = panStart = rafIndex = getDist = touch = mouseDrag = null;
            // check variables
            // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });

            for (var a in this) {
                if (a !== 'rebuild') { this[a] = null; }
            }
            isOn = false;
        }

        // === ON RESIZE ===
        // responsive || fixedWidth || autoWidth || !horizontal
        function onResize(e) {
            raf(function () { resizeTasks(getEvent(e)); });
        }

        function resizeTasks(e) {
            if (!isOn) { return; }
            if (nested === 'outer') { events.emit('outerResized', info(e)); }
            windowWidth = getWindowWidth();
            var bpChanged,
                breakpointZoneTem = breakpointZone,
                needContainerTransform = false;

            if (responsive) {
                setBreakpointZone();
                bpChanged = breakpointZoneTem !== breakpointZone;
                // if (hasRightDeadZone) { needContainerTransform = true; } // *?
                if (bpChanged) { events.emit('newBreakpointStart', info(e)); }
            }

            var indChanged,
                itemsChanged,
                itemsTem = items,
                disableTem = disable,
                freezeTem = freeze,
                arrowKeysTem = arrowKeys,
                controlsTem = controls,
                navTem = nav,
                touchTem = touch,
                mouseDragTem = mouseDrag,
                autoplayTem = autoplay,
                autoplayHoverPauseTem = autoplayHoverPause,
                autoplayResetOnVisibilityTem = autoplayResetOnVisibility,
                indexTem = index;

            if (bpChanged) {
                var fixedWidthTem = fixedWidth,
                    autoHeightTem = autoHeight,
                    controlsTextTem = controlsText,
                    centerTem = center,
                    autoplayTextTem = autoplayText;

                if (!CSSMQ) {
                    var gutterTem = gutter,
                        edgePaddingTem = edgePadding;
                }
            }

            // get option:
            // fixed width: viewport, fixedWidth, gutter => items
            // others: window width => all variables
            // all: items => slideBy
            arrowKeys = getOption('arrowKeys');
            controls = getOption('controls');
            nav = getOption('nav');
            touch = getOption('touch');
            center = getOption('center');
            mouseDrag = getOption('mouseDrag');
            autoplay = getOption('autoplay');
            autoplayHoverPause = getOption('autoplayHoverPause');
            autoplayResetOnVisibility = getOption('autoplayResetOnVisibility');

            if (bpChanged) {
                disable = getOption('disable');
                fixedWidth = getOption('fixedWidth');
                speed = getOption('speed');
                autoHeight = getOption('autoHeight');
                controlsText = getOption('controlsText');
                autoplayText = getOption('autoplayText');
                autoplayTimeout = getOption('autoplayTimeout');

                if (!CSSMQ) {
                    edgePadding = getOption('edgePadding');
                    gutter = getOption('gutter');
                }
            }
            // update options
            resetVariblesWhenDisable(disable);

            viewport = getViewportWidth(); // <= edgePadding, gutter
            if ((!horizontal || autoWidth) && !disable) {
                setSlidePositions();
                if (!horizontal) {
                    updateContentWrapperHeight(); // <= setSlidePositions
                    needContainerTransform = true;
                }
            }
            if (fixedWidth || autoWidth) {
                rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter
                // fixedWidth: <= viewport, fixedWidth, gutter
                indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions
                // fixedWidth: <= rightBoundary, fixedWidth, gutter
            }

            if (bpChanged || fixedWidth) {
                items = getOption('items');
                slideBy = getOption('slideBy');
                itemsChanged = items !== itemsTem;

                if (itemsChanged) {
                    if (!fixedWidth && !autoWidth) { indexMax = getIndexMax(); } // <= items
                    // check index before transform in case
                    // slider reach the right edge then items become bigger
                    updateIndex();
                }
            }

            if (bpChanged) {
                if (disable !== disableTem) {
                    if (disable) {
                        disableSlider();
                    } else {
                        enableSlider(); // <= slidePositions, rightBoundary, indexMax
                    }
                }
            }

            if (freezable && (bpChanged || fixedWidth || autoWidth)) {
                freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary
                // <= fixedWidth: fixedWidth, gutter, rightBoundary
                // <= others: items

                if (freeze !== freezeTem) {
                    if (freeze) {
                        doContainerTransform(getContainerTransformValue(getStartIndex(0)));
                        freezeSlider();
                    } else {
                        unfreezeSlider();
                        needContainerTransform = true;
                    }
                }
            }

            resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility
            if (!autoplay) { autoplayHoverPause = autoplayResetOnVisibility = false; }

            if (arrowKeys !== arrowKeysTem) {
                arrowKeys ?
                    addEvents(doc, docmentKeydownEvent) :
                    removeEvents(doc, docmentKeydownEvent);
            }
            if (controls !== controlsTem) {
                if (controls) {
                    if (controlsContainer) {
                        showElement(controlsContainer);
                    } else {
                        if (prevButton) { showElement(prevButton); }
                        if (nextButton) { showElement(nextButton); }
                    }
                } else {
                    if (controlsContainer) {
                        hideElement(controlsContainer);
                    } else {
                        if (prevButton) { hideElement(prevButton); }
                        if (nextButton) { hideElement(nextButton); }
                    }
                }
            }
            if (nav !== navTem) {
                if (nav) {
                    showElement(navContainer);
                    updateNavVisibility();
                } else {
                    hideElement(navContainer);
                }
            }
            if (touch !== touchTem) {
                touch ?
                    addEvents(container, touchEvents, options.preventScrollOnTouch) :
                    removeEvents(container, touchEvents);
            }
            if (mouseDrag !== mouseDragTem) {
                mouseDrag ?
                    addEvents(container, dragEvents) :
                    removeEvents(container, dragEvents);
            }
            if (autoplay !== autoplayTem) {
                if (autoplay) {
                    if (autoplayButton) { showElement(autoplayButton); }
                    if (!animating && !autoplayUserPaused) { startAutoplay(); }
                } else {
                    if (autoplayButton) { hideElement(autoplayButton); }
                    if (animating) { stopAutoplay(); }
                }
            }
            if (autoplayHoverPause !== autoplayHoverPauseTem) {
                autoplayHoverPause ?
                    addEvents(container, hoverEvents) :
                    removeEvents(container, hoverEvents);
            }
            if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {
                autoplayResetOnVisibility ?
                    addEvents(doc, visibilityEvent) :
                    removeEvents(doc, visibilityEvent);
            }

            if (bpChanged) {
                if (fixedWidth !== fixedWidthTem || center !== centerTem) { needContainerTransform = true; }

                if (autoHeight !== autoHeightTem) {
                    if (!autoHeight) { innerWrapper.style.height = ''; }
                }

                if (controls && controlsText !== controlsTextTem) {
                    prevButton.innerHTML = controlsText[0];
                    nextButton.innerHTML = controlsText[1];
                }

                if (autoplayButton && autoplayText !== autoplayTextTem) {
                    var i = autoplay ? 1 : 0,
                        html = autoplayButton.innerHTML,
                        len = html.length - autoplayTextTem[i].length;
                    if (html.substring(len) === autoplayTextTem[i]) {
                        autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];
                    }
                }
            } else {
                if (center && (fixedWidth || autoWidth)) { needContainerTransform = true; }
            }

            if (itemsChanged || fixedWidth && !autoWidth) {
                pages = getPages();
                updateNavVisibility();
            }

            indChanged = index !== indexTem;
            if (indChanged) {
                events.emit('indexChanged', info());
                needContainerTransform = true;
            } else if (itemsChanged) {
                if (!indChanged) { additionalUpdates(); }
            } else if (fixedWidth || autoWidth) {
                doLazyLoad();
                updateSlideStatus();
                updateLiveRegion();
            }

            if (itemsChanged && !carousel) { updateGallerySlidePositions(); }

            if (!disable && !freeze) {
                // non-mediaqueries: IE8
                if (bpChanged && !CSSMQ) {
                    // middle wrapper styles

                    // inner wrapper styles
                    if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {
                        innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, speed, autoHeight);
                    }

                    if (horizontal) {
                        // container styles
                        if (carousel) {
                            container.style.width = getContainerWidth(fixedWidth, gutter, items);
                        }

                        // slide styles
                        var str = getSlideWidthStyle(fixedWidth, gutter, items) +
                            getSlideGutterStyle(gutter);

                        // remove the last line and
                        // add new styles
                        removeCSSRule(sheet, getCssRulesLength(sheet) - 1);
                        addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet));
                    }
                }

                // auto height
                if (autoHeight) { doAutoHeight(); }

                if (needContainerTransform) {
                    doContainerTransformSilent();
                    indexCached = index;
                }
            }

            if (bpChanged) { events.emit('newBreakpointEnd', info(e)); }
        }





        // === INITIALIZATION FUNCTIONS === //
        function getFreeze() {
            if (!fixedWidth && !autoWidth) {
                var a = center ? items - (items - 1) / 2 : items;
                return slideCount <= a;
            }

            var width = fixedWidth ? (fixedWidth + gutter) * slideCount : slidePositions[slideCount],
                vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;

            if (center) {
                vp -= fixedWidth ? (viewport - fixedWidth) / 2 : (viewport - (slidePositions[index + 1] - slidePositions[index] - gutter)) / 2;
            }

            return width <= vp;
        }

        function setBreakpointZone() {
            breakpointZone = 0;
            for (var bp in responsive) {
                bp = parseInt(bp); // convert string to number
                if (windowWidth >= bp) { breakpointZone = bp; }
            }
        }

        // (slideBy, indexMin, indexMax) => index
        var updateIndex = (function () {
            return loop ?
                carousel ?
                    // loop + carousel
                    function () {
                        var leftEdge = indexMin,
                            rightEdge = indexMax;

                        leftEdge += slideBy;
                        rightEdge -= slideBy;

                        // adjust edges when has edge paddings
                        // or fixed-width slider with extra space on the right side
                        if (edgePadding) {
                            leftEdge += 1;
                            rightEdge -= 1;
                        } else if (fixedWidth) {
                            if ((viewport + gutter) % (fixedWidth + gutter)) { rightEdge -= 1; }
                        }

                        if (cloneCount) {
                            if (index > rightEdge) {
                                index -= slideCount;
                            } else if (index < leftEdge) {
                                index += slideCount;
                            }
                        }
                    } :
                    // loop + gallery
                    function () {
                        if (index > indexMax) {
                            while (index >= indexMin + slideCount) { index -= slideCount; }
                        } else if (index < indexMin) {
                            while (index <= indexMax - slideCount) { index += slideCount; }
                        }
                    } :
                // non-loop
                function () {
                    index = Math.max(indexMin, Math.min(indexMax, index));
                };
        })();

        function disableUI() {
            if (!autoplay && autoplayButton) { hideElement(autoplayButton); }
            if (!nav && navContainer) { hideElement(navContainer); }
            if (!controls) {
                if (controlsContainer) {
                    hideElement(controlsContainer);
                } else {
                    if (prevButton) { hideElement(prevButton); }
                    if (nextButton) { hideElement(nextButton); }
                }
            }
        }

        function enableUI() {
            if (autoplay && autoplayButton) { showElement(autoplayButton); }
            if (nav && navContainer) { showElement(navContainer); }
            if (controls) {
                if (controlsContainer) {
                    showElement(controlsContainer);
                } else {
                    if (prevButton) { showElement(prevButton); }
                    if (nextButton) { showElement(nextButton); }
                }
            }
        }

        function freezeSlider() {
            if (frozen) { return; }

            // remove edge padding from inner wrapper
            if (edgePadding) { innerWrapper.style.margin = '0px'; }

            // add class tns-transparent to cloned slides
            if (cloneCount) {
                var str = 'tns-transparent';
                for (var i = cloneCount; i--;) {
                    if (carousel) { addClass(slideItems[i], str); }
                    addClass(slideItems[slideCountNew - i - 1], str);
                }
            }

            // update tools
            disableUI();

            frozen = true;
        }

        function unfreezeSlider() {
            if (!frozen) { return; }

            // restore edge padding for inner wrapper
            // for mordern browsers
            if (edgePadding && CSSMQ) { innerWrapper.style.margin = ''; }

            // remove class tns-transparent to cloned slides
            if (cloneCount) {
                var str = 'tns-transparent';
                for (var i = cloneCount; i--;) {
                    if (carousel) { removeClass(slideItems[i], str); }
                    removeClass(slideItems[slideCountNew - i - 1], str);
                }
            }

            // update tools
            enableUI();

            frozen = false;
        }

        function disableSlider() {
            if (disabled) { return; }

            sheet.disabled = true;
            container.className = container.className.replace(newContainerClasses.substring(1), '');
            removeAttrs(container, ['style']);
            if (loop) {
                for (var j = cloneCount; j--;) {
                    if (carousel) { hideElement(slideItems[j]); }
                    hideElement(slideItems[slideCountNew - j - 1]);
                }
            }

            // vertical slider
            if (!horizontal || !carousel) { removeAttrs(innerWrapper, ['style']); }

            // gallery
            if (!carousel) {
                for (var i = index, l = index + slideCount; i < l; i++) {
                    var item = slideItems[i];
                    removeAttrs(item, ['style']);
                    removeClass(item, animateIn);
                    removeClass(item, animateNormal);
                }
            }

            // update tools
            disableUI();

            disabled = true;
        }

        function enableSlider() {
            if (!disabled) { return; }

            sheet.disabled = false;
            container.className += newContainerClasses;
            doContainerTransformSilent();

            if (loop) {
                for (var j = cloneCount; j--;) {
                    if (carousel) { showElement(slideItems[j]); }
                    showElement(slideItems[slideCountNew - j - 1]);
                }
            }

            // gallery
            if (!carousel) {
                for (var i = index, l = index + slideCount; i < l; i++) {
                    var item = slideItems[i],
                        classN = i < index + items ? animateIn : animateNormal;
                    item.style.left = (i - index) * 100 / items + '%';
                    addClass(item, classN);
                }
            }

            // update tools
            enableUI();

            disabled = false;
        }

        function updateLiveRegion() {
            var str = getLiveRegionStr();
            if (liveregionCurrent.innerHTML !== str) { liveregionCurrent.innerHTML = str; }
        }

        function getLiveRegionStr() {
            var arr = getVisibleSlideRange(),
                start = arr[0] + 1,
                end = arr[1] + 1;
            return start === end ? start + '' : start + ' to ' + end;
        }

        function getVisibleSlideRange(val) {
            if (val == null) { val = getContainerTransformValue(); }
            var start = index, end, rangestart, rangeend;

            // get range start, range end for autoWidth and fixedWidth
            if (center || edgePadding) {
                if (autoWidth || fixedWidth) {
                    rangestart = - (parseFloat(val) + edgePadding);
                    rangeend = rangestart + viewport + edgePadding * 2;
                }
            } else {
                if (autoWidth) {
                    rangestart = slidePositions[index];
                    rangeend = rangestart + viewport;
                }
            }

            // get start, end
            // - check auto width
            if (autoWidth) {
                slidePositions.forEach(function (point, i) {
                    if (i < slideCountNew) {
                        if ((center || edgePadding) && point <= rangestart + 0.5) { start = i; }
                        if (rangeend - point >= 0.5) { end = i; }
                    }
                });

                // - check percentage width, fixed width
            } else {

                if (fixedWidth) {
                    var cell = fixedWidth + gutter;
                    if (center || edgePadding) {
                        start = Math.floor(rangestart / cell);
                        end = Math.ceil(rangeend / cell - 1);
                    } else {
                        end = start + Math.ceil(viewport / cell) - 1;
                    }

                } else {
                    if (center || edgePadding) {
                        var a = items - 1;
                        if (center) {
                            start -= a / 2;
                            end = index + a / 2;
                        } else {
                            end = index + a;
                        }

                        if (edgePadding) {
                            var b = edgePadding * items / viewport;
                            start -= b;
                            end += b;
                        }

                        start = Math.floor(start);
                        end = Math.ceil(end);
                    } else {
                        end = start + items - 1;
                    }
                }

                start = Math.max(start, 0);
                end = Math.min(end, slideCountNew - 1);
            }

            return [start, end];
        }

        function doLazyLoad() {
            if (lazyload && !disable) {
                var arg = getVisibleSlideRange();
                arg.push(lazyloadSelector);

                getImageArray.apply(null, arg).forEach(function (img) {
                    if (!hasClass(img, imgCompleteClass)) {
                        // stop propagation transitionend event to container
                        var eve = {};
                        eve[TRANSITIONEND] = function (e) { e.stopPropagation(); };
                        addEvents(img, eve);

                        addEvents(img, imgEvents);

                        // update src
                        img.src = getAttr(img, 'data-src');

                        // update srcset
                        var srcset = getAttr(img, 'data-srcset');
                        if (srcset) { img.srcset = srcset; }

                        addClass(img, 'loading');
                    }
                });
            }
        }

        function onImgLoaded(e) {
            imgLoaded(getTarget(e));
        }

        function onImgFailed(e) {
            imgFailed(getTarget(e));
        }

        function imgLoaded(img) {
            addClass(img, 'loaded');
            imgCompleted(img);
        }

        function imgFailed(img) {
            addClass(img, 'failed');
            imgCompleted(img);
        }

        function imgCompleted(img) {
            addClass(img, imgCompleteClass);
            removeClass(img, 'loading');
            removeEvents(img, imgEvents);
        }

        function getImageArray(start, end, imgSelector) {
            var imgs = [];
            if (!imgSelector) { imgSelector = 'img'; }

            while (start <= end) {
                forEach(slideItems[start].querySelectorAll(imgSelector), function (img) { imgs.push(img); });
                start++;
            }

            return imgs;
        }

        // check if all visible images are loaded
        // and update container height if it's done
        function doAutoHeight() {
            var imgs = getImageArray.apply(null, getVisibleSlideRange());
            raf(function () { imgsLoadedCheck(imgs, updateInnerWrapperHeight); });
        }

        function imgsLoadedCheck(imgs, cb) {
            // execute callback function if all images are complete
            if (imgsComplete) { return cb(); }

            // check image classes
            imgs.forEach(function (img, index) {
                if (!lazyload && img.complete) { imgCompleted(img); } // Check image.complete
                if (hasClass(img, imgCompleteClass)) { imgs.splice(index, 1); }
            });

            // execute callback function if selected images are all complete
            if (!imgs.length) { return cb(); }

            // otherwise execute this functiona again
            raf(function () { imgsLoadedCheck(imgs, cb); });
        }

        function additionalUpdates() {
            doLazyLoad();
            updateSlideStatus();
            updateLiveRegion();
            updateControlsStatus();
            updateNavStatus();
        }


        function update_carousel_transition_duration() {
            if (carousel && autoHeight) {
                middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';
            }
        }

        function getMaxSlideHeight(slideStart, slideRange) {
            var heights = [];
            for (var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew); i < l; i++) {
                heights.push(slideItems[i].offsetHeight);
            }

            return Math.max.apply(null, heights);
        }

        // update inner wrapper height
        // 1. get the max-height of the visible slides
        // 2. set transitionDuration to speed
        // 3. update inner wrapper height to max-height
        // 4. set transitionDuration to 0s after transition done
        function updateInnerWrapperHeight() {
            var maxHeight = autoHeight ? getMaxSlideHeight(index, items) : getMaxSlideHeight(cloneCount, slideCount),
                wp = middleWrapper ? middleWrapper : innerWrapper;

            if (wp.style.height !== maxHeight) { wp.style.height = maxHeight + 'px'; }
        }

        // get the distance from the top edge of the first slide to each slide
        // (init) => slidePositions
        function setSlidePositions() {
            slidePositions = [0];
            var attr = horizontal ? 'left' : 'top',
                attr2 = horizontal ? 'right' : 'bottom',
                base = slideItems[0].getBoundingClientRect()[attr];

            forEach(slideItems, function (item, i) {
                // skip the first slide
                if (i) { slidePositions.push(item.getBoundingClientRect()[attr] - base); }
                // add the end edge
                if (i === slideCountNew - 1) { slidePositions.push(item.getBoundingClientRect()[attr2] - base); }
            });
        }

        // update slide
        function updateSlideStatus() {
            var range = getVisibleSlideRange(),
                start = range[0],
                end = range[1];

            forEach(slideItems, function (item, i) {
                // show slides
                if (i >= start && i <= end) {
                    if (hasAttr(item, 'aria-hidden')) {
                        removeAttrs(item, ['aria-hidden', 'tabindex']);
                        addClass(item, slideActiveClass);
                    }
                    // hide slides
                } else {
                    if (!hasAttr(item, 'aria-hidden')) {
                        setAttrs(item, {
                            'aria-hidden': 'true',
                            'tabindex': '-1'
                        });
                        removeClass(item, slideActiveClass);
                    }
                }
            });
        }

        // gallery: update slide position
        function updateGallerySlidePositions() {
            var l = index + Math.min(slideCount, items);
            for (var i = slideCountNew; i--;) {
                var item = slideItems[i];

                if (i >= index && i < l) {
                    // add transitions to visible slides when adjusting their positions
                    addClass(item, 'tns-moving');

                    item.style.left = (i - index) * 100 / items + '%';
                    addClass(item, animateIn);
                    removeClass(item, animateNormal);
                } else if (item.style.left) {
                    item.style.left = '';
                    addClass(item, animateNormal);
                    removeClass(item, animateIn);
                }

                // remove outlet animation
                removeClass(item, animateOut);
            }

            // removing '.tns-moving'
            setTimeout(function () {
                forEach(slideItems, function (el) {
                    removeClass(el, 'tns-moving');
                });
            }, 300);
        }

        // set tabindex on Nav
        function updateNavStatus() {
            // get current nav
            if (nav) {
                navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();
                navClicked = -1;

                if (navCurrentIndex !== navCurrentIndexCached) {
                    var navPrev = navItems[navCurrentIndexCached],
                        navCurrent = navItems[navCurrentIndex];

                    setAttrs(navPrev, {
                        'tabindex': '-1',
                        'aria-label': navStr + (navCurrentIndexCached + 1)
                    });
                    removeClass(navPrev, navActiveClass);

                    setAttrs(navCurrent, { 'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent });
                    removeAttrs(navCurrent, 'tabindex');
                    addClass(navCurrent, navActiveClass);

                    navCurrentIndexCached = navCurrentIndex;
                }
            }
        }

        function getLowerCaseNodeName(el) {
            return el.nodeName.toLowerCase();
        }

        function isButton(el) {
            return getLowerCaseNodeName(el) === 'button';
        }

        function isAriaDisabled(el) {
            return el.getAttribute('aria-disabled') === 'true';
        }

        function disEnableElement(isButton, el, val) {
            if (isButton) {
                el.disabled = val;
            } else {
                el.setAttribute('aria-disabled', val.toString());
            }
        }

        // set 'disabled' to true on controls when reach the edges
        function updateControlsStatus() {
            if (!controls || rewind || loop) { return; }

            var prevDisabled = (prevIsButton) ? prevButton.disabled : isAriaDisabled(prevButton),
                nextDisabled = (nextIsButton) ? nextButton.disabled : isAriaDisabled(nextButton),
                disablePrev = (index <= indexMin) ? true : false,
                disableNext = (!rewind && index >= indexMax) ? true : false;

            if (disablePrev && !prevDisabled) {
                disEnableElement(prevIsButton, prevButton, true);
            }
            if (!disablePrev && prevDisabled) {
                disEnableElement(prevIsButton, prevButton, false);
            }
            if (disableNext && !nextDisabled) {
                disEnableElement(nextIsButton, nextButton, true);
            }
            if (!disableNext && nextDisabled) {
                disEnableElement(nextIsButton, nextButton, false);
            }
        }

        // set duration
        function resetDuration(el, str) {
            if (TRANSITIONDURATION) { el.style[TRANSITIONDURATION] = str; }
        }

        function getSliderWidth() {
            return fixedWidth ? (fixedWidth + gutter) * slideCountNew : slidePositions[slideCountNew];
        }

        function getCenterGap(num) {
            if (num == null) { num = index; }

            var gap = edgePadding ? gutter : 0;
            return autoWidth ? ((viewport - gap) - (slidePositions[num + 1] - slidePositions[num] - gutter)) / 2 :
                fixedWidth ? (viewport - fixedWidth) / 2 :
                    (items - 1) / 2;
        }

        function getRightBoundary() {
            var gap = edgePadding ? gutter : 0,
                result = (viewport + gap) - getSliderWidth();

            if (center && !loop) {
                result = fixedWidth ? - (fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap() :
                    getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];
            }
            if (result > 0) { result = 0; }

            return result;
        }

        function getContainerTransformValue(num) {
            if (num == null) { num = index; }

            var val;
            if (horizontal && !autoWidth) {
                if (fixedWidth) {
                    val = - (fixedWidth + gutter) * num;
                    if (center) { val += getCenterGap(); }
                } else {
                    var denominator = TRANSFORM ? slideCountNew : items;
                    if (center) { num -= getCenterGap(); }
                    val = - num * 100 / denominator;
                }
            } else {
                val = - slidePositions[num];
                if (center && autoWidth) {
                    val += getCenterGap();
                }
            }

            if (hasRightDeadZone) { val = Math.max(val, rightBoundary); }

            val += (horizontal && !autoWidth && !fixedWidth) ? '%' : 'px';

            return val;
        }

        function doContainerTransformSilent(val) {
            resetDuration(container, '0s');
            doContainerTransform(val);
        }

        function doContainerTransform(val) {
            if (val == null) { val = getContainerTransformValue(); }
            container.style[transformAttr] = transformPrefix + val + transformPostfix;
        }

        function animateSlide(number, classOut, classIn, isOut) {
            var l = number + items;
            if (!loop) { l = Math.min(l, slideCountNew); }

            for (var i = number; i < l; i++) {
                var item = slideItems[i];

                // set item positions
                if (!isOut) { item.style.left = (i - index) * 100 / items + '%'; }

                if (animateDelay && TRANSITIONDELAY) {
                    item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + 's';
                }
                removeClass(item, classOut);
                addClass(item, classIn);

                if (isOut) { slideItemsOut.push(item); }
            }
        }

        // make transfer after click/drag:
        // 1. change 'transform' property for mordern browsers
        // 2. change 'left' property for legacy browsers
        var transformCore = (function () {
            return carousel ?
                function () {
                    resetDuration(container, '');
                    if (TRANSITIONDURATION || !speed) {
                        // for morden browsers with non-zero duration or
                        // zero duration for all browsers
                        doContainerTransform();
                        // run fallback function manually
                        // when duration is 0 / container is hidden
                        if (!speed || !isVisible(container)) { onTransitionEnd(); }

                    } else {
                        // for old browser with non-zero duration
                        jsTransform(container, transformAttr, transformPrefix, transformPostfix, getContainerTransformValue(), speed, onTransitionEnd);
                    }

                    if (!horizontal) { updateContentWrapperHeight(); }
                } :
                function () {
                    slideItemsOut = [];

                    var eve = {};
                    eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;
                    removeEvents(slideItems[indexCached], eve);
                    addEvents(slideItems[index], eve);

                    animateSlide(indexCached, animateIn, animateOut, true);
                    animateSlide(index, animateNormal, animateIn);

                    // run fallback function manually
                    // when transition or animation not supported / duration is 0
                    if (!TRANSITIONEND || !ANIMATIONEND || !speed || !isVisible(container)) { onTransitionEnd(); }
                };
        })();

        function render(e, sliderMoved) {
            if (updateIndexBeforeTransform) { updateIndex(); }

            // render when slider was moved (touch or drag) even though index may not change
            if (index !== indexCached || sliderMoved) {
                // events
                events.emit('indexChanged', info());
                events.emit('transitionStart', info());
                if (autoHeight) { doAutoHeight(); }

                // pause autoplay when click or keydown from user
                if (animating && e && ['click', 'keydown'].indexOf(e.type) >= 0) { stopAutoplay(); }

                running = true;
                transformCore();
            }
        }

        /*
         * Transfer prefixed properties to the same format
         * CSS: -Webkit-Transform => webkittransform
         * JS: WebkitTransform => webkittransform
         * @param {string} str - property
         *
         */
        function strTrans(str) {
            return str.toLowerCase().replace(/-/g, '');
        }

        // AFTER TRANSFORM
        // Things need to be done after a transfer:
        // 1. check index
        // 2. add classes to visible slide
        // 3. disable controls buttons when reach the first/last slide in non-loop slider
        // 4. update nav status
        // 5. lazyload images
        // 6. update container height
        function onTransitionEnd(event) {
            // check running on gallery mode
            // make sure trantionend/animationend events run only once
            if (carousel || running) {
                events.emit('transitionEnd', info(event));

                if (!carousel && slideItemsOut.length > 0) {
                    for (var i = 0; i < slideItemsOut.length; i++) {
                        var item = slideItemsOut[i];
                        // set item positions
                        item.style.left = '';

                        if (ANIMATIONDELAY && TRANSITIONDELAY) {
                            item.style[ANIMATIONDELAY] = '';
                            item.style[TRANSITIONDELAY] = '';
                        }
                        removeClass(item, animateOut);
                        addClass(item, animateNormal);
                    }
                }

                /* update slides, nav, controls after checking ...
                 * => legacy browsers who don't support 'event'
                 *    have to check event first, otherwise event.target will cause an error
                 * => or 'gallery' mode:
                 *   + event target is slide item
                 * => or 'carousel' mode:
                 *   + event target is container,
                 *   + event.property is the same with transform attribute
                 */
                if (!event ||
                    !carousel && event.target.parentNode === container ||
                    event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {

                    if (!updateIndexBeforeTransform) {
                        var indexTem = index;
                        updateIndex();
                        if (index !== indexTem) {
                            events.emit('indexChanged', info());

                            doContainerTransformSilent();
                        }
                    }

                    if (nested === 'inner') { events.emit('innerLoaded', info()); }
                    running = false;
                    indexCached = index;
                }
            }

        }

        // # ACTIONS
        function goTo(targetIndex, e) {
            if (freeze) { return; }

            // prev slideBy
            if (targetIndex === 'prev') {
                onControlsClick(e, -1);

                // next slideBy
            } else if (targetIndex === 'next') {
                onControlsClick(e, 1);

                // go to exact slide
            } else {
                if (running) {
                    if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }
                }

                var absIndex = getAbsIndex(),
                    indexGap = 0;

                if (targetIndex === 'first') {
                    indexGap = - absIndex;
                } else if (targetIndex === 'last') {
                    indexGap = carousel ? slideCount - items - absIndex : slideCount - 1 - absIndex;
                } else {
                    if (typeof targetIndex !== 'number') { targetIndex = parseInt(targetIndex); }

                    if (!isNaN(targetIndex)) {
                        // from directly called goTo function
                        if (!e) { targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex)); }

                        indexGap = targetIndex - absIndex;
                    }
                }

                // gallery: make sure new page won't overlap with current page
                if (!carousel && indexGap && Math.abs(indexGap) < items) {
                    var factor = indexGap > 0 ? 1 : -1;
                    indexGap += (index + indexGap - slideCount) >= indexMin ? slideCount * factor : slideCount * 2 * factor * -1;
                }

                index += indexGap;

                // make sure index is in range
                if (carousel && loop) {
                    if (index < indexMin) { index += slideCount; }
                    if (index > indexMax) { index -= slideCount; }
                }

                // if index is changed, start rendering
                if (getAbsIndex(index) !== getAbsIndex(indexCached)) {
                    render(e);
                }

            }
        }

        // on controls click
        function onControlsClick(e, dir) {
            if (running) {
                if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }
            }
            var passEventObject;

            if (!dir) {
                e = getEvent(e);
                var target = getTarget(e);

                while (target !== controlsContainer && [prevButton, nextButton].indexOf(target) < 0) { target = target.parentNode; }

                var targetIn = [prevButton, nextButton].indexOf(target);
                if (targetIn >= 0) {
                    passEventObject = true;
                    dir = targetIn === 0 ? -1 : 1;
                }
            }

            if (rewind) {
                if (index === indexMin && dir === -1) {
                    goTo('last', e);
                    return;
                } else if (index === indexMax && dir === 1) {
                    goTo('first', e);
                    return;
                }
            }

            if (dir) {
                index += slideBy * dir;
                if (autoWidth) { index = Math.floor(index); }
                // pass e when click control buttons or keydown
                render((passEventObject || (e && e.type === 'keydown')) ? e : null);
            }
        }

        // on nav click
        function onNavClick(e) {
            if (running) {
                if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }
            }

            e = getEvent(e);
            var target = getTarget(e), navIndex;

            // find the clicked nav item
            while (target !== navContainer && !hasAttr(target, 'data-nav')) { target = target.parentNode; }
            if (hasAttr(target, 'data-nav')) {
                var navIndex = navClicked = Number(getAttr(target, 'data-nav')),
                    targetIndexBase = fixedWidth || autoWidth ? navIndex * slideCount / pages : navIndex * items,
                    targetIndex = navAsThumbnails ? navIndex : Math.min(Math.ceil(targetIndexBase), slideCount - 1);
                goTo(targetIndex, e);

                if (navCurrentIndex === navIndex) {
                    if (animating) { stopAutoplay(); }
                    navClicked = -1; // reset navClicked
                }
            }
        }

        // autoplay functions
        function setAutoplayTimer() {
            autoplayTimer = setInterval(function () {
                onControlsClick(null, autoplayDirection);
            }, autoplayTimeout);

            animating = true;
        }

        function stopAutoplayTimer() {
            clearInterval(autoplayTimer);
            animating = false;
        }

        function updateAutoplayButton(action, txt) {
            setAttrs(autoplayButton, { 'data-action': action });
            autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;
        }

        function startAutoplay() {
            setAutoplayTimer();
            if (autoplayButton) { updateAutoplayButton('stop', autoplayText[1]); }
        }

        function stopAutoplay() {
            stopAutoplayTimer();
            if (autoplayButton) { updateAutoplayButton('start', autoplayText[0]); }
        }

        // programaitcally play/pause the slider
        function play() {
            if (autoplay && !animating) {
                startAutoplay();
                autoplayUserPaused = false;
            }
        }
        function pause() {
            if (animating) {
                stopAutoplay();
                autoplayUserPaused = true;
            }
        }

        function toggleAutoplay() {
            if (animating) {
                stopAutoplay();
                autoplayUserPaused = true;
            } else {
                startAutoplay();
                autoplayUserPaused = false;
            }
        }

        function onVisibilityChange() {
            if (doc.hidden) {
                if (animating) {
                    stopAutoplayTimer();
                    autoplayVisibilityPaused = true;
                }
            } else if (autoplayVisibilityPaused) {
                setAutoplayTimer();
                autoplayVisibilityPaused = false;
            }
        }

        function mouseoverPause() {
            if (animating) {
                stopAutoplayTimer();
                autoplayHoverPaused = true;
            }
        }

        function mouseoutRestart() {
            if (autoplayHoverPaused) {
                setAutoplayTimer();
                autoplayHoverPaused = false;
            }
        }

        // keydown events on document
        function onDocumentKeydown(e) {
            e = getEvent(e);
            var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);

            if (keyIndex >= 0) {
                onControlsClick(e, keyIndex === 0 ? -1 : 1);
            }
        }

        // on key control
        function onControlsKeydown(e) {
            e = getEvent(e);
            var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);

            if (keyIndex >= 0) {
                if (keyIndex === 0) {
                    if (!prevButton.disabled) { onControlsClick(e, -1); }
                } else if (!nextButton.disabled) {
                    onControlsClick(e, 1);
                }
            }
        }

        // set focus
        function setFocus(el) {
            el.focus();
        }

        // on key nav
        function onNavKeydown(e) {
            e = getEvent(e);
            var curElement = doc.activeElement;
            if (!hasAttr(curElement, 'data-nav')) { return; }

            // var code = e.keyCode,
            var keyIndex = [KEYS.LEFT, KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE].indexOf(e.keyCode),
                navIndex = Number(getAttr(curElement, 'data-nav'));

            if (keyIndex >= 0) {
                if (keyIndex === 0) {
                    if (navIndex > 0) { setFocus(navItems[navIndex - 1]); }
                } else if (keyIndex === 1) {
                    if (navIndex < pages - 1) { setFocus(navItems[navIndex + 1]); }
                } else {
                    navClicked = navIndex;
                    goTo(navIndex, e);
                }
            }
        }

        function getEvent(e) {
            e = e || win.event;
            return isTouchEvent(e) ? e.changedTouches[0] : e;
        }
        function getTarget(e) {
            return e.target || win.event.srcElement;
        }

        function isTouchEvent(e) {
            return e.type.indexOf('touch') >= 0;
        }

        function preventDefaultBehavior(e) {
            e.preventDefault ? e.preventDefault() : e.returnValue = false;
        }

        function getMoveDirectionExpected() {
            return getTouchDirection(toDegree(lastPosition.y - initPosition.y, lastPosition.x - initPosition.x), swipeAngle) === options.axis;
        }

        function onPanStart(e) {
            if (running) {
                if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }
            }

            if (autoplay && animating) { stopAutoplayTimer(); }

            panStart = true;
            if (rafIndex) {
                caf(rafIndex);
                rafIndex = null;
            }

            var $ = getEvent(e);
            events.emit(isTouchEvent(e) ? 'touchStart' : 'dragStart', info(e));

            if (!isTouchEvent(e) && ['img', 'a'].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0) {
                preventDefaultBehavior(e);
            }

            lastPosition.x = initPosition.x = $.clientX;
            lastPosition.y = initPosition.y = $.clientY;
            if (carousel) {
                translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, ''));
                resetDuration(container, '0s');
            }
        }

        function onPanMove(e) {
            if (panStart) {
                var $ = getEvent(e);
                lastPosition.x = $.clientX;
                lastPosition.y = $.clientY;

                if (carousel) {
                    if (!rafIndex) { rafIndex = raf(function () { panUpdate(e); }); }
                } else {
                    if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }
                    if (moveDirectionExpected) { preventScroll = true; }
                }

                if ((typeof e.cancelable !== 'boolean' || e.cancelable) && preventScroll) {
                    e.preventDefault();
                }
            }
        }

        function panUpdate(e) {
            if (!moveDirectionExpected) {
                panStart = false;
                return;
            }
            caf(rafIndex);
            if (panStart) { rafIndex = raf(function () { panUpdate(e); }); }

            if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }
            if (moveDirectionExpected) {
                if (!preventScroll && isTouchEvent(e)) { preventScroll = true; }

                try {
                    if (e.type) { events.emit(isTouchEvent(e) ? 'touchMove' : 'dragMove', info(e)); }
                } catch (err) { }

                var x = translateInit,
                    dist = getDist(lastPosition, initPosition);
                if (!horizontal || fixedWidth || autoWidth) {
                    x += dist;
                    x += 'px';
                } else {
                    var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew) : dist * 100 / (viewport + gutter);
                    x += percentageX;
                    x += '%';
                }

                container.style[transformAttr] = transformPrefix + x + transformPostfix;
            }
        }

        function onPanEnd(e) {
            if (panStart) {
                if (rafIndex) {
                    caf(rafIndex);
                    rafIndex = null;
                }
                if (carousel) { resetDuration(container, ''); }
                panStart = false;

                var $ = getEvent(e);
                lastPosition.x = $.clientX;
                lastPosition.y = $.clientY;
                var dist = getDist(lastPosition, initPosition);

                if (Math.abs(dist)) {
                    // drag vs click
                    if (!isTouchEvent(e)) {
                        // prevent "click"
                        var target = getTarget(e);
                        addEvents(target, {
                            'click': function preventClick(e) {
                                preventDefaultBehavior(e);
                                removeEvents(target, { 'click': preventClick });
                            }
                        });
                    }

                    if (carousel) {
                        rafIndex = raf(function () {
                            if (horizontal && !autoWidth) {
                                var indexMoved = - dist * items / (viewport + gutter);
                                indexMoved = dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);
                                index += indexMoved;
                            } else {
                                var moved = - (translateInit + dist);
                                if (moved <= 0) {
                                    index = indexMin;
                                } else if (moved >= slidePositions[slideCountNew - 1]) {
                                    index = indexMax;
                                } else {
                                    var i = 0;
                                    while (i < slideCountNew && moved >= slidePositions[i]) {
                                        index = i;
                                        if (moved > slidePositions[i] && dist < 0) { index += 1; }
                                        i++;
                                    }
                                }
                            }

                            render(e, dist);
                            events.emit(isTouchEvent(e) ? 'touchEnd' : 'dragEnd', info(e));
                        });
                    } else {
                        if (moveDirectionExpected) {
                            onControlsClick(e, dist > 0 ? -1 : 1);
                        }
                    }
                }
            }

            // reset
            if (options.preventScrollOnTouch === 'auto') { preventScroll = false; }
            if (swipeAngle) { moveDirectionExpected = '?'; }
            if (autoplay && !animating) { setAutoplayTimer(); }
        }

        // === RESIZE FUNCTIONS === //
        // (slidePositions, index, items) => vertical_conentWrapper.height
        function updateContentWrapperHeight() {
            var wp = middleWrapper ? middleWrapper : innerWrapper;
            wp.style.height = slidePositions[index + items] - slidePositions[index] + 'px';
        }

        function getPages() {
            var rough = fixedWidth ? (fixedWidth + gutter) * slideCount / viewport : slideCount / items;
            return Math.min(Math.ceil(rough), slideCount);
        }

        /*
         * 1. update visible nav items list
         * 2. add "hidden" attributes to previous visible nav items
         * 3. remove "hidden" attrubutes to new visible nav items
         */
        function updateNavVisibility() {
            if (!nav || navAsThumbnails) { return; }

            if (pages !== pagesCached) {
                var min = pagesCached,
                    max = pages,
                    fn = showElement;

                if (pagesCached > pages) {
                    min = pages;
                    max = pagesCached;
                    fn = hideElement;
                }

                while (min < max) {
                    fn(navItems[min]);
                    min++;
                }

                // cache pages
                pagesCached = pages;
            }
        }

        function info(e) {
            return {
                container: container,
                slideItems: slideItems,
                navContainer: navContainer,
                navItems: navItems,
                controlsContainer: controlsContainer,
                hasControls: hasControls,
                prevButton: prevButton,
                nextButton: nextButton,
                items: items,
                slideBy: slideBy,
                cloneCount: cloneCount,
                slideCount: slideCount,
                slideCountNew: slideCountNew,
                index: index,
                indexCached: indexCached,
                displayIndex: getCurrentSlide(),
                navCurrentIndex: navCurrentIndex,
                navCurrentIndexCached: navCurrentIndexCached,
                pages: pages,
                pagesCached: pagesCached,
                sheet: sheet,
                isOn: isOn,
                event: e || {},
            };
        }

        return {
            version: '2.9.3',
            getInfo: info,
            events: events,
            goTo: goTo,
            play: play,
            pause: pause,
            isOn: isOn,
            updateSliderHeight: updateInnerWrapperHeight,
            refresh: initSliderTransform,
            destroy: destroy,
            rebuild: function () {
                return tns(extend(options, optionsElements));
            }
        };
    };

    return tns;
})();


/*! For license information please see choices.min.js.LICENSE.txt */
!function () {
    "use strict";
    var e = {
        282: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.clearChoices = t.activateChoices = t.filterChoices = t.addChoice = void 0;
            var n = i(883);
            t.addChoice = function (e) {
                var t = e.value
                    , i = e.label
                    , s = e.id
                    , r = e.groupId
                    , o = e.disabled
                    , a = e.elementId
                    , c = e.customProperties
                    , l = e.placeholder
                    , h = e.keyCode;
                return {
                    type: n.ACTION_TYPES.ADD_CHOICE,
                    value: t,
                    label: i,
                    id: s,
                    groupId: r,
                    disabled: o,
                    elementId: a,
                    customProperties: c,
                    placeholder: l,
                    keyCode: h
                }
            }
                ,
                t.filterChoices = function (e) {
                    return {
                        type: n.ACTION_TYPES.FILTER_CHOICES,
                        results: e
                    }
                }
                ,
                t.activateChoices = function (e) {
                    return void 0 === e && (e = !0),
                    {
                        type: n.ACTION_TYPES.ACTIVATE_CHOICES,
                        active: e
                    }
                }
                ,
                t.clearChoices = function () {
                    return {
                        type: n.ACTION_TYPES.CLEAR_CHOICES
                    }
                }
        },
        783: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.addGroup = void 0;
            var n = i(883);
            t.addGroup = function (e) {
                var t = e.value
                    , i = e.id
                    , s = e.active
                    , r = e.disabled;
                return {
                    type: n.ACTION_TYPES.ADD_GROUP,
                    value: t,
                    id: i,
                    active: s,
                    disabled: r
                }
            }
        },
        464: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.highlightItem = t.removeItem = t.addItem = void 0;
            var n = i(883);
            t.addItem = function (e) {
                var t = e.value
                    , i = e.label
                    , s = e.id
                    , r = e.choiceId
                    , o = e.groupId
                    , a = e.customProperties
                    , c = e.placeholder
                    , l = e.keyCode;
                return {
                    type: n.ACTION_TYPES.ADD_ITEM,
                    value: t,
                    label: i,
                    id: s,
                    choiceId: r,
                    groupId: o,
                    customProperties: a,
                    placeholder: c,
                    keyCode: l
                }
            }
                ,
                t.removeItem = function (e, t) {
                    return {
                        type: n.ACTION_TYPES.REMOVE_ITEM,
                        id: e,
                        choiceId: t
                    }
                }
                ,
                t.highlightItem = function (e, t) {
                    return {
                        type: n.ACTION_TYPES.HIGHLIGHT_ITEM,
                        id: e,
                        highlighted: t
                    }
                }
        },
        137: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.setIsLoading = t.resetTo = t.clearAll = void 0;
            var n = i(883);
            t.clearAll = function () {
                return {
                    type: n.ACTION_TYPES.CLEAR_ALL
                }
            }
                ,
                t.resetTo = function (e) {
                    return {
                        type: n.ACTION_TYPES.RESET_TO,
                        state: e
                    }
                }
                ,
                t.setIsLoading = function (e) {
                    return {
                        type: n.ACTION_TYPES.SET_IS_LOADING,
                        isLoading: e
                    }
                }
        },
        373: function (e, t, i) {
            var n = this && this.__spreadArray || function (e, t, i) {
                if (i || 2 === arguments.length)
                    for (var n, s = 0, r = t.length; s < r; s++)
                        !n && s in t || (n || (n = Array.prototype.slice.call(t, 0, s)),
                            n[s] = t[s]);
                return e.concat(n || Array.prototype.slice.call(t))
            }
                , s = this && this.__importDefault || function (e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = s(i(996))
                , o = s(i(221))
                , a = i(282)
                , c = i(783)
                , l = i(464)
                , h = i(137)
                , u = i(520)
                , d = i(883)
                , p = i(789)
                , f = i(799)
                , m = i(655)
                , v = s(i(744))
                , g = s(i(686))
                , _ = "-ms-scroll-limit" in document.documentElement.style && "-ms-ime-align" in document.documentElement.style
                , y = {}
                , E = function () {
                    function e(t, i) {
                        var s = this;
                        void 0 === t && (t = "[data-choice]"),
                            void 0 === i && (i = {}),
                            void 0 === i.allowHTML && console.warn("Deprecation warning: allowHTML will default to false in a future release. To render HTML in Choices, you will need to set it to true. Setting allowHTML will suppress this message."),
                            this.config = r.default.all([p.DEFAULT_CONFIG, e.defaults.options, i], {
                                arrayMerge: function (e, t) {
                                    return n([], t, !0)
                                }
                            });
                        var o = (0,
                            f.diff)(this.config, p.DEFAULT_CONFIG);
                        o.length && console.warn("Unknown config option(s) passed", o.join(", "));
                        var a = "string" == typeof t ? document.querySelector(t) : t;
                        if (!(a instanceof HTMLInputElement || a instanceof HTMLSelectElement))
                            throw TypeError("Expected one of the following types text|select-one|select-multiple");
                        if (this._isTextElement = a.type === d.TEXT_TYPE,
                            this._isSelectOneElement = a.type === d.SELECT_ONE_TYPE,
                            this._isSelectMultipleElement = a.type === d.SELECT_MULTIPLE_TYPE,
                            this._isSelectElement = this._isSelectOneElement || this._isSelectMultipleElement,
                            this.config.searchEnabled = this._isSelectMultipleElement || this.config.searchEnabled,
                            ["auto", "always"].includes("".concat(this.config.renderSelectedChoices)) || (this.config.renderSelectedChoices = "auto"),
                            i.addItemFilter && "function" != typeof i.addItemFilter) {
                            var c = i.addItemFilter instanceof RegExp ? i.addItemFilter : new RegExp(i.addItemFilter);
                            this.config.addItemFilter = c.test.bind(c)
                        }
                        if (this._isTextElement ? this.passedElement = new u.WrappedInput({
                            element: a,
                            classNames: this.config.classNames,
                            delimiter: this.config.delimiter
                        }) : this.passedElement = new u.WrappedSelect({
                            element: a,
                            classNames: this.config.classNames,
                            template: function (e) {
                                return s._templates.option(e)
                            }
                        }),
                            this.initialised = !1,
                            this._store = new v.default,
                            this._initialState = m.defaultState,
                            this._currentState = m.defaultState,
                            this._prevState = m.defaultState,
                            this._currentValue = "",
                            this._canSearch = !!this.config.searchEnabled,
                            this._isScrollingOnIe = !1,
                            this._highlightPosition = 0,
                            this._wasTap = !0,
                            this._placeholderValue = this._generatePlaceholderValue(),
                            this._baseId = (0,
                                f.generateId)(this.passedElement.element, "choices-"),
                            this._direction = this.passedElement.dir,
                            !this._direction) {
                            var l = window.getComputedStyle(this.passedElement.element).direction;
                            l !== window.getComputedStyle(document.documentElement).direction && (this._direction = l)
                        }
                        if (this._idNames = {
                            itemChoice: "item-choice"
                        },
                            this._isSelectElement && (this._presetGroups = this.passedElement.optionGroups,
                                this._presetOptions = this.passedElement.options),
                            this._presetChoices = this.config.choices,
                            this._presetItems = this.config.items,
                            this.passedElement.value && this._isTextElement) {
                            var h = this.passedElement.value.split(this.config.delimiter);
                            this._presetItems = this._presetItems.concat(h)
                        }
                        if (this.passedElement.options && this.passedElement.options.forEach((function (e) {
                            s._presetChoices.push({
                                value: e.value,
                                label: e.innerHTML,
                                selected: !!e.selected,
                                disabled: e.disabled || e.parentNode.disabled,
                                placeholder: "" === e.value || e.hasAttribute("placeholder"),
                                customProperties: e.dataset["custom-properties"]
                            })
                        }
                        )),
                            this._render = this._render.bind(this),
                            this._onFocus = this._onFocus.bind(this),
                            this._onBlur = this._onBlur.bind(this),
                            this._onKeyUp = this._onKeyUp.bind(this),
                            this._onKeyDown = this._onKeyDown.bind(this),
                            this._onClick = this._onClick.bind(this),
                            this._onTouchMove = this._onTouchMove.bind(this),
                            this._onTouchEnd = this._onTouchEnd.bind(this),
                            this._onMouseDown = this._onMouseDown.bind(this),
                            this._onMouseOver = this._onMouseOver.bind(this),
                            this._onFormReset = this._onFormReset.bind(this),
                            this._onSelectKey = this._onSelectKey.bind(this),
                            this._onEnterKey = this._onEnterKey.bind(this),
                            this._onEscapeKey = this._onEscapeKey.bind(this),
                            this._onDirectionKey = this._onDirectionKey.bind(this),
                            this._onDeleteKey = this._onDeleteKey.bind(this),
                            this.passedElement.isActive)
                            return this.config.silent || console.warn("Trying to initialise Choices on element already initialised", {
                                element: t
                            }),
                                void (this.initialised = !0);
                        this.init()
                    }
                    return Object.defineProperty(e, "defaults", {
                        get: function () {
                            return Object.preventExtensions({
                                get options() {
                                    return y
                                },
                                get templates() {
                                    return g.default
                                }
                            })
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                        e.prototype.init = function () {
                            if (!this.initialised) {
                                this._createTemplates(),
                                    this._createElements(),
                                    this._createStructure(),
                                    this._store.subscribe(this._render),
                                    this._render(),
                                    this._addEventListeners(),
                                    (!this.config.addItems || this.passedElement.element.hasAttribute("disabled")) && this.disable(),
                                    this.initialised = !0;
                                var e = this.config.callbackOnInit;
                                e && "function" == typeof e && e.call(this)
                            }
                        }
                        ,
                        e.prototype.destroy = function () {
                            this.initialised && (this._removeEventListeners(),
                                this.passedElement.reveal(),
                                this.containerOuter.unwrap(this.passedElement.element),
                                this.clearStore(),
                                this._isSelectElement && (this.passedElement.options = this._presetOptions),
                                this._templates = g.default,
                                this.initialised = !1)
                        }
                        ,
                        e.prototype.enable = function () {
                            return this.passedElement.isDisabled && this.passedElement.enable(),
                                this.containerOuter.isDisabled && (this._addEventListeners(),
                                    this.input.enable(),
                                    this.containerOuter.enable()),
                                this
                        }
                        ,
                        e.prototype.disable = function () {
                            return this.passedElement.isDisabled || this.passedElement.disable(),
                                this.containerOuter.isDisabled || (this._removeEventListeners(),
                                    this.input.disable(),
                                    this.containerOuter.disable()),
                                this
                        }
                        ,
                        e.prototype.highlightItem = function (e, t) {
                            if (void 0 === t && (t = !0),
                                !e || !e.id)
                                return this;
                            var i = e.id
                                , n = e.groupId
                                , s = void 0 === n ? -1 : n
                                , r = e.value
                                , o = void 0 === r ? "" : r
                                , a = e.label
                                , c = void 0 === a ? "" : a
                                , h = s >= 0 ? this._store.getGroupById(s) : null;
                            return this._store.dispatch((0,
                                l.highlightItem)(i, !0)),
                                t && this.passedElement.triggerEvent(d.EVENTS.highlightItem, {
                                    id: i,
                                    value: o,
                                    label: c,
                                    groupValue: h && h.value ? h.value : null
                                }),
                                this
                        }
                        ,
                        e.prototype.unhighlightItem = function (e) {
                            if (!e || !e.id)
                                return this;
                            var t = e.id
                                , i = e.groupId
                                , n = void 0 === i ? -1 : i
                                , s = e.value
                                , r = void 0 === s ? "" : s
                                , o = e.label
                                , a = void 0 === o ? "" : o
                                , c = n >= 0 ? this._store.getGroupById(n) : null;
                            return this._store.dispatch((0,
                                l.highlightItem)(t, !1)),
                                this.passedElement.triggerEvent(d.EVENTS.highlightItem, {
                                    id: t,
                                    value: r,
                                    label: a,
                                    groupValue: c && c.value ? c.value : null
                                }),
                                this
                        }
                        ,
                        e.prototype.highlightAll = function () {
                            var e = this;
                            return this._store.items.forEach((function (t) {
                                return e.highlightItem(t)
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.unhighlightAll = function () {
                            var e = this;
                            return this._store.items.forEach((function (t) {
                                return e.unhighlightItem(t)
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.removeActiveItemsByValue = function (e) {
                            var t = this;
                            return this._store.activeItems.filter((function (t) {
                                return t.value === e
                            }
                            )).forEach((function (e) {
                                return t._removeItem(e)
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.removeActiveItems = function (e) {
                            var t = this;
                            return this._store.activeItems.filter((function (t) {
                                return t.id !== e
                            }
                            )).forEach((function (e) {
                                return t._removeItem(e)
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.removeHighlightedItems = function (e) {
                            var t = this;
                            return void 0 === e && (e = !1),
                                this._store.highlightedActiveItems.forEach((function (i) {
                                    t._removeItem(i),
                                        e && t._triggerChange(i.value)
                                }
                                )),
                                this
                        }
                        ,
                        e.prototype.showDropdown = function (e) {
                            var t = this;
                            return this.dropdown.isActive || requestAnimationFrame((function () {
                                t.dropdown.show(),
                                    t.containerOuter.open(t.dropdown.distanceFromTopWindow),
                                    !e && t._canSearch && t.input.focus(),
                                    t.passedElement.triggerEvent(d.EVENTS.showDropdown, {})
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.hideDropdown = function (e) {
                            var t = this;
                            return this.dropdown.isActive ? (requestAnimationFrame((function () {
                                t.dropdown.hide(),
                                    t.containerOuter.close(),
                                    !e && t._canSearch && (t.input.removeActiveDescendant(),
                                        t.input.blur()),
                                    t.passedElement.triggerEvent(d.EVENTS.hideDropdown, {})
                            }
                            )),
                                this) : this
                        }
                        ,
                        e.prototype.getValue = function (e) {
                            void 0 === e && (e = !1);
                            var t = this._store.activeItems.reduce((function (t, i) {
                                var n = e ? i.value : i;
                                return t.push(n),
                                    t
                            }
                            ), []);
                            return this._isSelectOneElement ? t[0] : t
                        }
                        ,
                        e.prototype.setValue = function (e) {
                            var t = this;
                            return this.initialised ? (e.forEach((function (e) {
                                return t._setChoiceOrItem(e)
                            }
                            )),
                                this) : this
                        }
                        ,
                        e.prototype.setChoiceByValue = function (e) {
                            var t = this;
                            return !this.initialised || this._isTextElement || (Array.isArray(e) ? e : [e]).forEach((function (e) {
                                return t._findAndSelectChoiceByValue(e)
                            }
                            )),
                                this
                        }
                        ,
                        e.prototype.setChoices = function (e, t, i, n) {
                            var s = this;
                            if (void 0 === e && (e = []),
                                void 0 === t && (t = "value"),
                                void 0 === i && (i = "label"),
                                void 0 === n && (n = !1),
                                !this.initialised)
                                throw new ReferenceError("setChoices was called on a non-initialized instance of Choices");
                            if (!this._isSelectElement)
                                throw new TypeError("setChoices can't be used with INPUT based Choices");
                            if ("string" != typeof t || !t)
                                throw new TypeError("value parameter must be a name of 'value' field in passed objects");
                            if (n && this.clearChoices(),
                                "function" == typeof e) {
                                var r = e(this);
                                if ("function" == typeof Promise && r instanceof Promise)
                                    return new Promise((function (e) {
                                        return requestAnimationFrame(e)
                                    }
                                    )).then((function () {
                                        return s._handleLoadingState(!0)
                                    }
                                    )).then((function () {
                                        return r
                                    }
                                    )).then((function (e) {
                                        return s.setChoices(e, t, i, n)
                                    }
                                    )).catch((function (e) {
                                        s.config.silent || console.error(e)
                                    }
                                    )).then((function () {
                                        return s._handleLoadingState(!1)
                                    }
                                    )).then((function () {
                                        return s
                                    }
                                    ));
                                if (!Array.isArray(r))
                                    throw new TypeError(".setChoices first argument function must return either array of choices or Promise, got: ".concat(typeof r));
                                return this.setChoices(r, t, i, !1)
                            }
                            if (!Array.isArray(e))
                                throw new TypeError(".setChoices must be called either with array of choices with a function resulting into Promise of array of choices");
                            return this.containerOuter.removeLoadingState(),
                                this._startLoading(),
                                e.forEach((function (e) {
                                    if (e.choices)
                                        s._addGroup({
                                            id: e.id ? parseInt("".concat(e.id), 10) : null,
                                            group: e,
                                            valueKey: t,
                                            labelKey: i
                                        });
                                    else {
                                        var n = e;
                                        s._addChoice({
                                            value: n[t],
                                            label: n[i],
                                            isSelected: !!n.selected,
                                            isDisabled: !!n.disabled,
                                            placeholder: !!n.placeholder,
                                            customProperties: n.customProperties
                                        })
                                    }
                                }
                                )),
                                this._stopLoading(),
                                this
                        }
                        ,
                        e.prototype.clearChoices = function () {
                            return this._store.dispatch((0,
                                a.clearChoices)()),
                                this
                        }
                        ,
                        e.prototype.clearStore = function () {
                            return this._store.dispatch((0,
                                h.clearAll)()),
                                this
                        }
                        ,
                        e.prototype.clearInput = function () {
                            var e = !this._isSelectOneElement;
                            return this.input.clear(e),
                                !this._isTextElement && this._canSearch && (this._isSearching = !1,
                                    this._store.dispatch((0,
                                        a.activateChoices)(!0))),
                                this
                        }
                        ,
                        e.prototype._render = function () {
                            if (!this._store.isLoading()) {
                                this._currentState = this._store.state;
                                var e = this._currentState.choices !== this._prevState.choices || this._currentState.groups !== this._prevState.groups || this._currentState.items !== this._prevState.items
                                    , t = this._isSelectElement
                                    , i = this._currentState.items !== this._prevState.items;
                                e && (t && this._renderChoices(),
                                    i && this._renderItems(),
                                    this._prevState = this._currentState)
                            }
                        }
                        ,
                        e.prototype._renderChoices = function () {
                            var e = this
                                , t = this._store
                                , i = t.activeGroups
                                , n = t.activeChoices
                                , s = document.createDocumentFragment();
                            if (this.choiceList.clear(),
                                this.config.resetScrollPosition && requestAnimationFrame((function () {
                                    return e.choiceList.scrollToTop()
                                }
                                )),
                                i.length >= 1 && !this._isSearching) {
                                var r = n.filter((function (e) {
                                    return !0 === e.placeholder && -1 === e.groupId
                                }
                                ));
                                r.length >= 1 && (s = this._createChoicesFragment(r, s)),
                                    s = this._createGroupsFragment(i, n, s)
                            } else
                                n.length >= 1 && (s = this._createChoicesFragment(n, s));
                            if (s.childNodes && s.childNodes.length > 0) {
                                var o = this._store.activeItems
                                    , a = this._canAddItem(o, this.input.value);
                                if (a.response)
                                    this.choiceList.append(s),
                                        this._highlightChoice();
                                else {
                                    var c = this._getTemplate("notice", a.notice);
                                    this.choiceList.append(c)
                                }
                            } else {
                                var l = void 0;
                                c = void 0,
                                    this._isSearching ? (c = "function" == typeof this.config.noResultsText ? this.config.noResultsText() : this.config.noResultsText,
                                        l = this._getTemplate("notice", c, "no-results")) : (c = "function" == typeof this.config.noChoicesText ? this.config.noChoicesText() : this.config.noChoicesText,
                                            l = this._getTemplate("notice", c, "no-choices")),
                                    this.choiceList.append(l)
                            }
                        }
                        ,
                        e.prototype._renderItems = function () {
                            var e = this._store.activeItems || [];
                            this.itemList.clear();
                            var t = this._createItemsFragment(e);
                            t.childNodes && this.itemList.append(t)
                        }
                        ,
                        e.prototype._createGroupsFragment = function (e, t, i) {
                            var n = this;
                            return void 0 === i && (i = document.createDocumentFragment()),
                                this.config.shouldSort && e.sort(this.config.sorter),
                                e.forEach((function (e) {
                                    var s = function (e) {
                                        return t.filter((function (t) {
                                            return n._isSelectOneElement ? t.groupId === e.id : t.groupId === e.id && ("always" === n.config.renderSelectedChoices || !t.selected)
                                        }
                                        ))
                                    }(e);
                                    if (s.length >= 1) {
                                        var r = n._getTemplate("choiceGroup", e);
                                        i.appendChild(r),
                                            n._createChoicesFragment(s, i, !0)
                                    }
                                }
                                )),
                                i
                        }
                        ,
                        e.prototype._createChoicesFragment = function (e, t, i) {
                            var s = this;
                            void 0 === t && (t = document.createDocumentFragment()),
                                void 0 === i && (i = !1);
                            var r = this.config
                                , o = r.renderSelectedChoices
                                , a = r.searchResultLimit
                                , c = r.renderChoiceLimit
                                , l = this._isSearching ? f.sortByScore : this.config.sorter
                                , h = function (e) {
                                    if ("auto" !== o || s._isSelectOneElement || !e.selected) {
                                        var i = s._getTemplate("choice", e, s.config.itemSelectText);
                                        t.appendChild(i)
                                    }
                                }
                                , u = e;
                            "auto" !== o || this._isSelectOneElement || (u = e.filter((function (e) {
                                return !e.selected
                            }
                            )));
                            var d = u.reduce((function (e, t) {
                                return t.placeholder ? e.placeholderChoices.push(t) : e.normalChoices.push(t),
                                    e
                            }
                            ), {
                                placeholderChoices: [],
                                normalChoices: []
                            })
                                , p = d.placeholderChoices
                                , m = d.normalChoices;
                            (this.config.shouldSort || this._isSearching) && m.sort(l);
                            var v = u.length
                                , g = this._isSelectOneElement ? n(n([], p, !0), m, !0) : m;
                            this._isSearching ? v = a : c && c > 0 && !i && (v = c);
                            for (var _ = 0; _ < v; _ += 1)
                                g[_] && h(g[_]);
                            return t
                        }
                        ,
                        e.prototype._createItemsFragment = function (e, t) {
                            var i = this;
                            void 0 === t && (t = document.createDocumentFragment());
                            var n = this.config
                                , s = n.shouldSortItems
                                , r = n.sorter
                                , o = n.removeItemButton;
                            return s && !this._isSelectOneElement && e.sort(r),
                                this._isTextElement ? this.passedElement.value = e.map((function (e) {
                                    return e.value
                                }
                                )).join(this.config.delimiter) : this.passedElement.options = e,
                                e.forEach((function (e) {
                                    var n = i._getTemplate("item", e, o);
                                    t.appendChild(n)
                                }
                                )),
                                t
                        }
                        ,
                        e.prototype._triggerChange = function (e) {
                            null != e && this.passedElement.triggerEvent(d.EVENTS.change, {
                                value: e
                            })
                        }
                        ,
                        e.prototype._selectPlaceholderChoice = function (e) {
                            this._addItem({
                                value: e.value,
                                label: e.label,
                                choiceId: e.id,
                                groupId: e.groupId,
                                placeholder: e.placeholder
                            }),
                                this._triggerChange(e.value)
                        }
                        ,
                        e.prototype._handleButtonAction = function (e, t) {
                            if (e && t && this.config.removeItems && this.config.removeItemButton) {
                                var i = t.parentNode && t.parentNode.dataset.id
                                    , n = i && e.find((function (e) {
                                        return e.id === parseInt(i, 10)
                                    }
                                    ));
                                n && (this._removeItem(n),
                                    this._triggerChange(n.value),
                                    this._isSelectOneElement && this._store.placeholderChoice && this._selectPlaceholderChoice(this._store.placeholderChoice))
                            }
                        }
                        ,
                        e.prototype._handleItemAction = function (e, t, i) {
                            var n = this;
                            if (void 0 === i && (i = !1),
                                e && t && this.config.removeItems && !this._isSelectOneElement) {
                                var s = t.dataset.id;
                                e.forEach((function (e) {
                                    e.id !== parseInt("".concat(s), 10) || e.highlighted ? !i && e.highlighted && n.unhighlightItem(e) : n.highlightItem(e)
                                }
                                )),
                                    this.input.focus()
                            }
                        }
                        ,
                        e.prototype._handleChoiceAction = function (e, t) {
                            if (e && t) {
                                var i = t.dataset.id
                                    , n = i && this._store.getChoiceById(i);
                                if (n) {
                                    var s = e[0] && e[0].keyCode ? e[0].keyCode : void 0
                                        , r = this.dropdown.isActive;
                                    n.keyCode = s,
                                        this.passedElement.triggerEvent(d.EVENTS.choice, {
                                            choice: n
                                        }),
                                        n.selected || n.disabled || this._canAddItem(e, n.value).response && (this._addItem({
                                            value: n.value,
                                            label: n.label,
                                            choiceId: n.id,
                                            groupId: n.groupId,
                                            customProperties: n.customProperties,
                                            placeholder: n.placeholder,
                                            keyCode: n.keyCode
                                        }),
                                            this._triggerChange(n.value)),
                                        this.clearInput(),
                                        r && this._isSelectOneElement && (this.hideDropdown(!0),
                                            this.containerOuter.focus())
                                }
                            }
                        }
                        ,
                        e.prototype._handleBackspace = function (e) {
                            if (this.config.removeItems && e) {
                                var t = e[e.length - 1]
                                    , i = e.some((function (e) {
                                        return e.highlighted
                                    }
                                    ));
                                this.config.editItems && !i && t ? (this.input.value = t.value,
                                    this.input.setWidth(),
                                    this._removeItem(t),
                                    this._triggerChange(t.value)) : (i || this.highlightItem(t, !1),
                                        this.removeHighlightedItems(!0))
                            }
                        }
                        ,
                        e.prototype._startLoading = function () {
                            this._store.dispatch((0,
                                h.setIsLoading)(!0))
                        }
                        ,
                        e.prototype._stopLoading = function () {
                            this._store.dispatch((0,
                                h.setIsLoading)(!1))
                        }
                        ,
                        e.prototype._handleLoadingState = function (e) {
                            void 0 === e && (e = !0);
                            var t = this.itemList.getChild(".".concat(this.config.classNames.placeholder));
                            e ? (this.disable(),
                                this.containerOuter.addLoadingState(),
                                this._isSelectOneElement ? t ? t.innerHTML = this.config.loadingText : (t = this._getTemplate("placeholder", this.config.loadingText)) && this.itemList.append(t) : this.input.placeholder = this.config.loadingText) : (this.enable(),
                                    this.containerOuter.removeLoadingState(),
                                    this._isSelectOneElement ? t && (t.innerHTML = this._placeholderValue || "") : this.input.placeholder = this._placeholderValue || "")
                        }
                        ,
                        e.prototype._handleSearch = function (e) {
                            if (this.input.isFocussed) {
                                var t = this._store.choices
                                    , i = this.config
                                    , n = i.searchFloor
                                    , s = i.searchChoices
                                    , r = t.some((function (e) {
                                        return !e.active
                                    }
                                    ));
                                if (null != e && e.length >= n) {
                                    var o = s ? this._searchChoices(e) : 0;
                                    this.passedElement.triggerEvent(d.EVENTS.search, {
                                        value: e,
                                        resultCount: o
                                    })
                                } else
                                    r && (this._isSearching = !1,
                                        this._store.dispatch((0,
                                            a.activateChoices)(!0)))
                            }
                        }
                        ,
                        e.prototype._canAddItem = function (e, t) {
                            var i = !0
                                , n = "function" == typeof this.config.addItemText ? this.config.addItemText(t) : this.config.addItemText;
                            if (!this._isSelectOneElement) {
                                var s = (0,
                                    f.existsInArray)(e, t);
                                this.config.maxItemCount > 0 && this.config.maxItemCount <= e.length && (i = !1,
                                    n = "function" == typeof this.config.maxItemText ? this.config.maxItemText(this.config.maxItemCount) : this.config.maxItemText),
                                    !this.config.duplicateItemsAllowed && s && i && (i = !1,
                                        n = "function" == typeof this.config.uniqueItemText ? this.config.uniqueItemText(t) : this.config.uniqueItemText),
                                    this._isTextElement && this.config.addItems && i && "function" == typeof this.config.addItemFilter && !this.config.addItemFilter(t) && (i = !1,
                                        n = "function" == typeof this.config.customAddItemText ? this.config.customAddItemText(t) : this.config.customAddItemText)
                            }
                            return {
                                response: i,
                                notice: n
                            }
                        }
                        ,
                        e.prototype._searchChoices = function (e) {
                            var t = "string" == typeof e ? e.trim() : e
                                , i = "string" == typeof this._currentValue ? this._currentValue.trim() : this._currentValue;
                            if (t.length < 1 && t === "".concat(i, " "))
                                return 0;
                            var s = this._store.searchableChoices
                                , r = t
                                , c = Object.assign(this.config.fuseOptions, {
                                    keys: n([], this.config.searchFields, !0),
                                    includeMatches: !0
                                })
                                , l = new o.default(s, c).search(r);
                            return this._currentValue = t,
                                this._highlightPosition = 0,
                                this._isSearching = !0,
                                this._store.dispatch((0,
                                    a.filterChoices)(l)),
                                l.length
                        }
                        ,
                        e.prototype._addEventListeners = function () {
                            var e = document.documentElement;
                            e.addEventListener("touchend", this._onTouchEnd, !0),
                                this.containerOuter.element.addEventListener("keydown", this._onKeyDown, !0),
                                this.containerOuter.element.addEventListener("mousedown", this._onMouseDown, !0),
                                e.addEventListener("click", this._onClick, {
                                    passive: !0
                                }),
                                e.addEventListener("touchmove", this._onTouchMove, {
                                    passive: !0
                                }),
                                this.dropdown.element.addEventListener("mouseover", this._onMouseOver, {
                                    passive: !0
                                }),
                                this._isSelectOneElement && (this.containerOuter.element.addEventListener("focus", this._onFocus, {
                                    passive: !0
                                }),
                                    this.containerOuter.element.addEventListener("blur", this._onBlur, {
                                        passive: !0
                                    })),
                                this.input.element.addEventListener("keyup", this._onKeyUp, {
                                    passive: !0
                                }),
                                this.input.element.addEventListener("focus", this._onFocus, {
                                    passive: !0
                                }),
                                this.input.element.addEventListener("blur", this._onBlur, {
                                    passive: !0
                                }),
                                this.input.element.form && this.input.element.form.addEventListener("reset", this._onFormReset, {
                                    passive: !0
                                }),
                                this.input.addEventListeners()
                        }
                        ,
                        e.prototype._removeEventListeners = function () {
                            var e = document.documentElement;
                            e.removeEventListener("touchend", this._onTouchEnd, !0),
                                this.containerOuter.element.removeEventListener("keydown", this._onKeyDown, !0),
                                this.containerOuter.element.removeEventListener("mousedown", this._onMouseDown, !0),
                                e.removeEventListener("click", this._onClick),
                                e.removeEventListener("touchmove", this._onTouchMove),
                                this.dropdown.element.removeEventListener("mouseover", this._onMouseOver),
                                this._isSelectOneElement && (this.containerOuter.element.removeEventListener("focus", this._onFocus),
                                    this.containerOuter.element.removeEventListener("blur", this._onBlur)),
                                this.input.element.removeEventListener("keyup", this._onKeyUp),
                                this.input.element.removeEventListener("focus", this._onFocus),
                                this.input.element.removeEventListener("blur", this._onBlur),
                                this.input.element.form && this.input.element.form.removeEventListener("reset", this._onFormReset),
                                this.input.removeEventListeners()
                        }
                        ,
                        e.prototype._onKeyDown = function (e) {
                            var t = e.keyCode
                                , i = this._store.activeItems
                                , n = this.input.isFocussed
                                , s = this.dropdown.isActive
                                , r = this.itemList.hasChildren()
                                , o = String.fromCharCode(t)
                                , a = /[a-zA-Z0-9-_ ]/.test(o)
                                , c = d.KEY_CODES.BACK_KEY
                                , l = d.KEY_CODES.DELETE_KEY
                                , h = d.KEY_CODES.ENTER_KEY
                                , u = d.KEY_CODES.A_KEY
                                , p = d.KEY_CODES.ESC_KEY
                                , f = d.KEY_CODES.UP_KEY
                                , m = d.KEY_CODES.DOWN_KEY
                                , v = d.KEY_CODES.PAGE_UP_KEY
                                , g = d.KEY_CODES.PAGE_DOWN_KEY;
                            switch (this._isTextElement || s || !a || (this.showDropdown(),
                                this.input.isFocussed || (this.input.value += o.toLowerCase())),
                            t) {
                                case u:
                                    return this._onSelectKey(e, r);
                                case h:
                                    return this._onEnterKey(e, i, s);
                                case p:
                                    return this._onEscapeKey(s);
                                case f:
                                case v:
                                case m:
                                case g:
                                    return this._onDirectionKey(e, s);
                                case l:
                                case c:
                                    return this._onDeleteKey(e, i, n)
                            }
                        }
                        ,
                        e.prototype._onKeyUp = function (e) {
                            var t = e.target
                                , i = e.keyCode
                                , n = this.input.value
                                , s = this._store.activeItems
                                , r = this._canAddItem(s, n)
                                , o = d.KEY_CODES.BACK_KEY
                                , c = d.KEY_CODES.DELETE_KEY;
                            if (this._isTextElement)
                                if (r.notice && n) {
                                    var l = this._getTemplate("notice", r.notice);
                                    this.dropdown.element.innerHTML = l.outerHTML,
                                        this.showDropdown(!0)
                                } else
                                    this.hideDropdown(!0);
                            else {
                                var h = (i === o || i === c) && t && !t.value
                                    , u = !this._isTextElement && this._isSearching
                                    , p = this._canSearch && r.response;
                                h && u ? (this._isSearching = !1,
                                    this._store.dispatch((0,
                                        a.activateChoices)(!0))) : p && this._handleSearch(this.input.rawValue)
                            }
                            this._canSearch = this.config.searchEnabled
                        }
                        ,
                        e.prototype._onSelectKey = function (e, t) {
                            var i = e.ctrlKey
                                , n = e.metaKey;
                            (i || n) && t && (this._canSearch = !1,
                                this.config.removeItems && !this.input.value && this.input.element === document.activeElement && this.highlightAll())
                        }
                        ,
                        e.prototype._onEnterKey = function (e, t, i) {
                            var n = e.target
                                , s = d.KEY_CODES.ENTER_KEY
                                , r = n && n.hasAttribute("data-button");
                            if (this._isTextElement && n && n.value) {
                                var o = this.input.value;
                                this._canAddItem(t, o).response && (this.hideDropdown(!0),
                                    this._addItem({
                                        value: o
                                    }),
                                    this._triggerChange(o),
                                    this.clearInput())
                            }
                            if (r && (this._handleButtonAction(t, n),
                                e.preventDefault()),
                                i) {
                                var a = this.dropdown.getChild(".".concat(this.config.classNames.highlightedState));
                                a && (t[0] && (t[0].keyCode = s),
                                    this._handleChoiceAction(t, a)),
                                    e.preventDefault()
                            } else
                                this._isSelectOneElement && (this.showDropdown(),
                                    e.preventDefault())
                        }
                        ,
                        e.prototype._onEscapeKey = function (e) {
                            e && (this.hideDropdown(!0),
                                this.containerOuter.focus())
                        }
                        ,
                        e.prototype._onDirectionKey = function (e, t) {
                            var i = e.keyCode
                                , n = e.metaKey
                                , s = d.KEY_CODES.DOWN_KEY
                                , r = d.KEY_CODES.PAGE_UP_KEY
                                , o = d.KEY_CODES.PAGE_DOWN_KEY;
                            if (t || this._isSelectOneElement) {
                                this.showDropdown(),
                                    this._canSearch = !1;
                                var a = i === s || i === o ? 1 : -1
                                    , c = "[data-choice-selectable]"
                                    , l = void 0;
                                if (n || i === o || i === r)
                                    l = a > 0 ? this.dropdown.element.querySelector("".concat(c, ":last-of-type")) : this.dropdown.element.querySelector(c);
                                else {
                                    var h = this.dropdown.element.querySelector(".".concat(this.config.classNames.highlightedState));
                                    l = h ? (0,
                                        f.getAdjacentEl)(h, c, a) : this.dropdown.element.querySelector(c)
                                }
                                l && ((0,
                                    f.isScrolledIntoView)(l, this.choiceList.element, a) || this.choiceList.scrollToChildElement(l, a),
                                    this._highlightChoice(l)),
                                    e.preventDefault()
                            }
                        }
                        ,
                        e.prototype._onDeleteKey = function (e, t, i) {
                            var n = e.target;
                            this._isSelectOneElement || n.value || !i || (this._handleBackspace(t),
                                e.preventDefault())
                        }
                        ,
                        e.prototype._onTouchMove = function () {
                            this._wasTap && (this._wasTap = !1)
                        }
                        ,
                        e.prototype._onTouchEnd = function (e) {
                            var t = (e || e.touches[0]).target;
                            this._wasTap && this.containerOuter.element.contains(t) && ((t === this.containerOuter.element || t === this.containerInner.element) && (this._isTextElement ? this.input.focus() : this._isSelectMultipleElement && this.showDropdown()),
                                e.stopPropagation()),
                                this._wasTap = !0
                        }
                        ,
                        e.prototype._onMouseDown = function (e) {
                            var t = e.target;
                            if (t instanceof HTMLElement) {
                                if (_ && this.choiceList.element.contains(t)) {
                                    var i = this.choiceList.element.firstElementChild
                                        , n = "ltr" === this._direction ? e.offsetX >= i.offsetWidth : e.offsetX < i.offsetLeft;
                                    this._isScrollingOnIe = n
                                }
                                if (t !== this.input.element) {
                                    var s = t.closest("[data-button],[data-item],[data-choice]");
                                    if (s instanceof HTMLElement) {
                                        var r = e.shiftKey
                                            , o = this._store.activeItems
                                            , a = s.dataset;
                                        "button" in a ? this._handleButtonAction(o, s) : "item" in a ? this._handleItemAction(o, s, r) : "choice" in a && this._handleChoiceAction(o, s)
                                    }
                                    e.preventDefault()
                                }
                            }
                        }
                        ,
                        e.prototype._onMouseOver = function (e) {
                            var t = e.target;
                            t instanceof HTMLElement && "choice" in t.dataset && this._highlightChoice(t)
                        }
                        ,
                        e.prototype._onClick = function (e) {
                            var t = e.target;
                            this.containerOuter.element.contains(t) ? this.dropdown.isActive || this.containerOuter.isDisabled ? this._isSelectOneElement && t !== this.input.element && !this.dropdown.element.contains(t) && this.hideDropdown() : this._isTextElement ? document.activeElement !== this.input.element && this.input.focus() : (this.showDropdown(),
                                this.containerOuter.focus()) : (this._store.highlightedActiveItems.length > 0 && this.unhighlightAll(),
                                    this.containerOuter.removeFocusState(),
                                    this.hideDropdown(!0))
                        }
                        ,
                        e.prototype._onFocus = function (e) {
                            var t, i = this, n = e.target;
                            n && this.containerOuter.element.contains(n) && ((t = {})[d.TEXT_TYPE] = function () {
                                n === i.input.element && i.containerOuter.addFocusState()
                            }
                                ,
                                t[d.SELECT_ONE_TYPE] = function () {
                                    i.containerOuter.addFocusState(),
                                        n === i.input.element && i.showDropdown(!0)
                                }
                                ,
                                t[d.SELECT_MULTIPLE_TYPE] = function () {
                                    n === i.input.element && (i.showDropdown(!0),
                                        i.containerOuter.addFocusState())
                                }
                                ,
                                t)[this.passedElement.element.type]()
                        }
                        ,
                        e.prototype._onBlur = function (e) {
                            var t, i = this, n = e.target;
                            if (n && this.containerOuter.element.contains(n) && !this._isScrollingOnIe) {
                                var s = this._store.activeItems.some((function (e) {
                                    return e.highlighted
                                }
                                ));
                                ((t = {})[d.TEXT_TYPE] = function () {
                                    n === i.input.element && (i.containerOuter.removeFocusState(),
                                        s && i.unhighlightAll(),
                                        i.hideDropdown(!0))
                                }
                                    ,
                                    t[d.SELECT_ONE_TYPE] = function () {
                                        i.containerOuter.removeFocusState(),
                                            (n === i.input.element || n === i.containerOuter.element && !i._canSearch) && i.hideDropdown(!0)
                                    }
                                    ,
                                    t[d.SELECT_MULTIPLE_TYPE] = function () {
                                        n === i.input.element && (i.containerOuter.removeFocusState(),
                                            i.hideDropdown(!0),
                                            s && i.unhighlightAll())
                                    }
                                    ,
                                    t)[this.passedElement.element.type]()
                            } else
                                this._isScrollingOnIe = !1,
                                    this.input.element.focus()
                        }
                        ,
                        e.prototype._onFormReset = function () {
                            this._store.dispatch((0,
                                h.resetTo)(this._initialState))
                        }
                        ,
                        e.prototype._highlightChoice = function (e) {
                            var t = this;
                            void 0 === e && (e = null);
                            var i = Array.from(this.dropdown.element.querySelectorAll("[data-choice-selectable]"));
                            if (i.length) {
                                var n = e;
                                Array.from(this.dropdown.element.querySelectorAll(".".concat(this.config.classNames.highlightedState))).forEach((function (e) {
                                    e.classList.remove(t.config.classNames.highlightedState),
                                        e.setAttribute("aria-selected", "false")
                                }
                                )),
                                    n ? this._highlightPosition = i.indexOf(n) : (n = i.length > this._highlightPosition ? i[this._highlightPosition] : i[i.length - 1]) || (n = i[0]),
                                    n.classList.add(this.config.classNames.highlightedState),
                                    n.setAttribute("aria-selected", "true"),
                                    this.passedElement.triggerEvent(d.EVENTS.highlightChoice, {
                                        el: n
                                    }),
                                    this.dropdown.isActive && (this.input.setActiveDescendant(n.id),
                                        this.containerOuter.setActiveDescendant(n.id))
                            }
                        }
                        ,
                        e.prototype._addItem = function (e) {
                            var t = e.value
                                , i = e.label
                                , n = void 0 === i ? null : i
                                , s = e.choiceId
                                , r = void 0 === s ? -1 : s
                                , o = e.groupId
                                , a = void 0 === o ? -1 : o
                                , c = e.customProperties
                                , h = void 0 === c ? {} : c
                                , u = e.placeholder
                                , p = void 0 !== u && u
                                , f = e.keyCode
                                , m = void 0 === f ? -1 : f
                                , v = "string" == typeof t ? t.trim() : t
                                , g = this._store.items
                                , _ = n || v
                                , y = r || -1
                                , E = a >= 0 ? this._store.getGroupById(a) : null
                                , b = g ? g.length + 1 : 1;
                            this.config.prependValue && (v = this.config.prependValue + v.toString()),
                                this.config.appendValue && (v += this.config.appendValue.toString()),
                                this._store.dispatch((0,
                                    l.addItem)({
                                        value: v,
                                        label: _,
                                        id: b,
                                        choiceId: y,
                                        groupId: a,
                                        customProperties: h,
                                        placeholder: p,
                                        keyCode: m
                                    })),
                                this._isSelectOneElement && this.removeActiveItems(b),
                                this.passedElement.triggerEvent(d.EVENTS.addItem, {
                                    id: b,
                                    value: v,
                                    label: _,
                                    customProperties: h,
                                    groupValue: E && E.value ? E.value : null,
                                    keyCode: m
                                })
                        }
                        ,
                        e.prototype._removeItem = function (e) {
                            var t = e.id
                                , i = e.value
                                , n = e.label
                                , s = e.customProperties
                                , r = e.choiceId
                                , o = e.groupId
                                , a = o && o >= 0 ? this._store.getGroupById(o) : null;
                            t && r && (this._store.dispatch((0,
                                l.removeItem)(t, r)),
                                this.passedElement.triggerEvent(d.EVENTS.removeItem, {
                                    id: t,
                                    value: i,
                                    label: n,
                                    customProperties: s,
                                    groupValue: a && a.value ? a.value : null
                                }))
                        }
                        ,
                        e.prototype._addChoice = function (e) {
                            var t = e.value
                                , i = e.label
                                , n = void 0 === i ? null : i
                                , s = e.isSelected
                                , r = void 0 !== s && s
                                , o = e.isDisabled
                                , c = void 0 !== o && o
                                , l = e.groupId
                                , h = void 0 === l ? -1 : l
                                , u = e.customProperties
                                , d = void 0 === u ? {} : u
                                , p = e.placeholder
                                , f = void 0 !== p && p
                                , m = e.keyCode
                                , v = void 0 === m ? -1 : m;
                            if (null != t) {
                                var g = this._store.choices
                                    , _ = n || t
                                    , y = g ? g.length + 1 : 1
                                    , E = "".concat(this._baseId, "-").concat(this._idNames.itemChoice, "-").concat(y);
                                this._store.dispatch((0,
                                    a.addChoice)({
                                        id: y,
                                        groupId: h,
                                        elementId: E,
                                        value: t,
                                        label: _,
                                        disabled: c,
                                        customProperties: d,
                                        placeholder: f,
                                        keyCode: v
                                    })),
                                    r && this._addItem({
                                        value: t,
                                        label: _,
                                        choiceId: y,
                                        customProperties: d,
                                        placeholder: f,
                                        keyCode: v
                                    })
                            }
                        }
                        ,
                        e.prototype._addGroup = function (e) {
                            var t = this
                                , i = e.group
                                , n = e.id
                                , s = e.valueKey
                                , r = void 0 === s ? "value" : s
                                , o = e.labelKey
                                , a = void 0 === o ? "label" : o
                                , l = (0,
                                    f.isType)("Object", i) ? i.choices : Array.from(i.getElementsByTagName("OPTION"))
                                , h = n || Math.floor((new Date).valueOf() * Math.random())
                                , u = !!i.disabled && i.disabled;
                            l ? (this._store.dispatch((0,
                                c.addGroup)({
                                    value: i.label,
                                    id: h,
                                    active: !0,
                                    disabled: u
                                })),
                                l.forEach((function (e) {
                                    var i = e.disabled || e.parentNode && e.parentNode.disabled;
                                    t._addChoice({
                                        value: e[r],
                                        label: (0,
                                            f.isType)("Object", e) ? e[a] : e.innerHTML,
                                        isSelected: e.selected,
                                        isDisabled: i,
                                        groupId: h,
                                        customProperties: e.customProperties,
                                        placeholder: e.placeholder
                                    })
                                }
                                ))) : this._store.dispatch((0,
                                    c.addGroup)({
                                        value: i.label,
                                        id: i.id,
                                        active: !1,
                                        disabled: i.disabled
                                    }))
                        }
                        ,
                        e.prototype._getTemplate = function (e) {
                            for (var t, i = [], s = 1; s < arguments.length; s++)
                                i[s - 1] = arguments[s];
                            return (t = this._templates[e]).call.apply(t, n([this, this.config], i, !1))
                        }
                        ,
                        e.prototype._createTemplates = function () {
                            var e = this.config.callbackOnCreateTemplates
                                , t = {};
                            e && "function" == typeof e && (t = e.call(this, f.strToEl)),
                                this._templates = (0,
                                    r.default)(g.default, t)
                        }
                        ,
                        e.prototype._createElements = function () {
                            this.containerOuter = new u.Container({
                                element: this._getTemplate("containerOuter", this._direction, this._isSelectElement, this._isSelectOneElement, this.config.searchEnabled, this.passedElement.element.type, this.config.labelId),
                                classNames: this.config.classNames,
                                type: this.passedElement.element.type,
                                position: this.config.position
                            }),
                                this.containerInner = new u.Container({
                                    element: this._getTemplate("containerInner"),
                                    classNames: this.config.classNames,
                                    type: this.passedElement.element.type,
                                    position: this.config.position
                                }),
                                this.input = new u.Input({
                                    element: this._getTemplate("input", this._placeholderValue),
                                    classNames: this.config.classNames,
                                    type: this.passedElement.element.type,
                                    preventPaste: !this.config.paste
                                }),
                                this.choiceList = new u.List({
                                    element: this._getTemplate("choiceList", this._isSelectOneElement)
                                }),
                                this.itemList = new u.List({
                                    element: this._getTemplate("itemList", this._isSelectOneElement)
                                }),
                                this.dropdown = new u.Dropdown({
                                    element: this._getTemplate("dropdown"),
                                    classNames: this.config.classNames,
                                    type: this.passedElement.element.type
                                })
                        }
                        ,
                        e.prototype._createStructure = function () {
                            this.passedElement.conceal(),
                                this.containerInner.wrap(this.passedElement.element),
                                this.containerOuter.wrap(this.containerInner.element),
                                this._isSelectOneElement ? this.input.placeholder = this.config.searchPlaceholderValue || "" : this._placeholderValue && (this.input.placeholder = this._placeholderValue,
                                    this.input.setWidth()),
                                this.containerOuter.element.appendChild(this.containerInner.element),
                                this.containerOuter.element.appendChild(this.dropdown.element),
                                this.containerInner.element.appendChild(this.itemList.element),
                                this._isTextElement || this.dropdown.element.appendChild(this.choiceList.element),
                                this._isSelectOneElement ? this.config.searchEnabled && this.dropdown.element.insertBefore(this.input.element, this.dropdown.element.firstChild) : this.containerInner.element.appendChild(this.input.element),
                                this._isSelectElement && (this._highlightPosition = 0,
                                    this._isSearching = !1,
                                    this._startLoading(),
                                    this._presetGroups.length ? this._addPredefinedGroups(this._presetGroups) : this._addPredefinedChoices(this._presetChoices),
                                    this._stopLoading()),
                                this._isTextElement && this._addPredefinedItems(this._presetItems)
                        }
                        ,
                        e.prototype._addPredefinedGroups = function (e) {
                            var t = this
                                , i = this.passedElement.placeholderOption;
                            i && i.parentNode && "SELECT" === i.parentNode.tagName && this._addChoice({
                                value: i.value,
                                label: i.innerHTML,
                                isSelected: i.selected,
                                isDisabled: i.disabled,
                                placeholder: !0
                            }),
                                e.forEach((function (e) {
                                    return t._addGroup({
                                        group: e,
                                        id: e.id || null
                                    })
                                }
                                ))
                        }
                        ,
                        e.prototype._addPredefinedChoices = function (e) {
                            var t = this;
                            this.config.shouldSort && e.sort(this.config.sorter);
                            var i = e.some((function (e) {
                                return e.selected
                            }
                            ))
                                , n = e.findIndex((function (e) {
                                    return void 0 === e.disabled || !e.disabled
                                }
                                ));
                            e.forEach((function (e, s) {
                                var r = e.value
                                    , o = void 0 === r ? "" : r
                                    , a = e.label
                                    , c = e.customProperties
                                    , l = e.placeholder;
                                if (t._isSelectElement)
                                    if (e.choices)
                                        t._addGroup({
                                            group: e,
                                            id: e.id || null
                                        });
                                    else {
                                        var h = !(!t._isSelectOneElement || i || s !== n) || e.selected
                                            , u = e.disabled;
                                        t._addChoice({
                                            value: o,
                                            label: a,
                                            isSelected: !!h,
                                            isDisabled: !!u,
                                            placeholder: !!l,
                                            customProperties: c
                                        })
                                    }
                                else
                                    t._addChoice({
                                        value: o,
                                        label: a,
                                        isSelected: !!e.selected,
                                        isDisabled: !!e.disabled,
                                        placeholder: !!e.placeholder,
                                        customProperties: c
                                    })
                            }
                            ))
                        }
                        ,
                        e.prototype._addPredefinedItems = function (e) {
                            var t = this;
                            e.forEach((function (e) {
                                "object" == typeof e && e.value && t._addItem({
                                    value: e.value,
                                    label: e.label,
                                    choiceId: e.id,
                                    customProperties: e.customProperties,
                                    placeholder: e.placeholder
                                }),
                                    "string" == typeof e && t._addItem({
                                        value: e
                                    })
                            }
                            ))
                        }
                        ,
                        e.prototype._setChoiceOrItem = function (e) {
                            var t = this;
                            ({
                                object: function () {
                                    e.value && (t._isTextElement ? t._addItem({
                                        value: e.value,
                                        label: e.label,
                                        choiceId: e.id,
                                        customProperties: e.customProperties,
                                        placeholder: e.placeholder
                                    }) : t._addChoice({
                                        value: e.value,
                                        label: e.label,
                                        isSelected: !0,
                                        isDisabled: !1,
                                        customProperties: e.customProperties,
                                        placeholder: e.placeholder
                                    }))
                                },
                                string: function () {
                                    t._isTextElement ? t._addItem({
                                        value: e
                                    }) : t._addChoice({
                                        value: e,
                                        label: e,
                                        isSelected: !0,
                                        isDisabled: !1
                                    })
                                }
                            })[(0,
                                f.getType)(e).toLowerCase()]()
                        }
                        ,
                        e.prototype._findAndSelectChoiceByValue = function (e) {
                            var t = this
                                , i = this._store.choices.find((function (i) {
                                    return t.config.valueComparer(i.value, e)
                                }
                                ));
                            i && !i.selected && this._addItem({
                                value: i.value,
                                label: i.label,
                                choiceId: i.id,
                                groupId: i.groupId,
                                customProperties: i.customProperties,
                                placeholder: i.placeholder,
                                keyCode: i.keyCode
                            })
                        }
                        ,
                        e.prototype._generatePlaceholderValue = function () {
                            if (this._isSelectElement && this.passedElement.placeholderOption) {
                                var e = this.passedElement.placeholderOption;
                                return e ? e.text : null
                            }
                            var t = this.config
                                , i = t.placeholder
                                , n = t.placeholderValue
                                , s = this.passedElement.element.dataset;
                            if (i) {
                                if (n)
                                    return n;
                                if (s.placeholder)
                                    return s.placeholder
                            }
                            return null
                        }
                        ,
                        e
                }();
            t.default = E
        },
        613: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = i(799)
                , s = i(883)
                , r = function () {
                    function e(e) {
                        var t = e.element
                            , i = e.type
                            , n = e.classNames
                            , s = e.position;
                        this.element = t,
                            this.classNames = n,
                            this.type = i,
                            this.position = s,
                            this.isOpen = !1,
                            this.isFlipped = !1,
                            this.isFocussed = !1,
                            this.isDisabled = !1,
                            this.isLoading = !1,
                            this._onFocus = this._onFocus.bind(this),
                            this._onBlur = this._onBlur.bind(this)
                    }
                    return e.prototype.addEventListeners = function () {
                        this.element.addEventListener("focus", this._onFocus),
                            this.element.addEventListener("blur", this._onBlur)
                    }
                        ,
                        e.prototype.removeEventListeners = function () {
                            this.element.removeEventListener("focus", this._onFocus),
                                this.element.removeEventListener("blur", this._onBlur)
                        }
                        ,
                        e.prototype.shouldFlip = function (e) {
                            if ("number" != typeof e)
                                return !1;
                            var t = !1;
                            return "auto" === this.position ? t = !window.matchMedia("(min-height: ".concat(e + 1, "px)")).matches : "top" === this.position && (t = !0),
                                t
                        }
                        ,
                        e.prototype.setActiveDescendant = function (e) {
                            this.element.setAttribute("aria-activedescendant", e)
                        }
                        ,
                        e.prototype.removeActiveDescendant = function () {
                            this.element.removeAttribute("aria-activedescendant")
                        }
                        ,
                        e.prototype.open = function (e) {
                            this.element.classList.add(this.classNames.openState),
                                this.element.setAttribute("aria-expanded", "true"),
                                this.isOpen = !0,
                                this.shouldFlip(e) && (this.element.classList.add(this.classNames.flippedState),
                                    this.isFlipped = !0)
                        }
                        ,
                        e.prototype.close = function () {
                            this.element.classList.remove(this.classNames.openState),
                                this.element.setAttribute("aria-expanded", "false"),
                                this.removeActiveDescendant(),
                                this.isOpen = !1,
                                this.isFlipped && (this.element.classList.remove(this.classNames.flippedState),
                                    this.isFlipped = !1)
                        }
                        ,
                        e.prototype.focus = function () {
                            this.isFocussed || this.element.focus()
                        }
                        ,
                        e.prototype.addFocusState = function () {
                            this.element.classList.add(this.classNames.focusState)
                        }
                        ,
                        e.prototype.removeFocusState = function () {
                            this.element.classList.remove(this.classNames.focusState)
                        }
                        ,
                        e.prototype.enable = function () {
                            this.element.classList.remove(this.classNames.disabledState),
                                this.element.removeAttribute("aria-disabled"),
                                this.type === s.SELECT_ONE_TYPE && this.element.setAttribute("tabindex", "0"),
                                this.isDisabled = !1
                        }
                        ,
                        e.prototype.disable = function () {
                            this.element.classList.add(this.classNames.disabledState),
                                this.element.setAttribute("aria-disabled", "true"),
                                this.type === s.SELECT_ONE_TYPE && this.element.setAttribute("tabindex", "-1"),
                                this.isDisabled = !0
                        }
                        ,
                        e.prototype.wrap = function (e) {
                            (0,
                                n.wrap)(e, this.element)
                        }
                        ,
                        e.prototype.unwrap = function (e) {
                            this.element.parentNode && (this.element.parentNode.insertBefore(e, this.element),
                                this.element.parentNode.removeChild(this.element))
                        }
                        ,
                        e.prototype.addLoadingState = function () {
                            this.element.classList.add(this.classNames.loadingState),
                                this.element.setAttribute("aria-busy", "true"),
                                this.isLoading = !0
                        }
                        ,
                        e.prototype.removeLoadingState = function () {
                            this.element.classList.remove(this.classNames.loadingState),
                                this.element.removeAttribute("aria-busy"),
                                this.isLoading = !1
                        }
                        ,
                        e.prototype._onFocus = function () {
                            this.isFocussed = !0
                        }
                        ,
                        e.prototype._onBlur = function () {
                            this.isFocussed = !1
                        }
                        ,
                        e
                }();
            t.default = r
        },
        217: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function () {
                function e(e) {
                    var t = e.element
                        , i = e.type
                        , n = e.classNames;
                    this.element = t,
                        this.classNames = n,
                        this.type = i,
                        this.isActive = !1
                }
                return Object.defineProperty(e.prototype, "distanceFromTopWindow", {
                    get: function () {
                        return this.element.getBoundingClientRect().bottom
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                    e.prototype.getChild = function (e) {
                        return this.element.querySelector(e)
                    }
                    ,
                    e.prototype.show = function () {
                        return this.element.classList.add(this.classNames.activeState),
                            this.element.setAttribute("aria-expanded", "true"),
                            this.isActive = !0,
                            this
                    }
                    ,
                    e.prototype.hide = function () {
                        return this.element.classList.remove(this.classNames.activeState),
                            this.element.setAttribute("aria-expanded", "false"),
                            this.isActive = !1,
                            this
                    }
                    ,
                    e
            }();
            t.default = i
        },
        520: function (e, t, i) {
            var n = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.WrappedSelect = t.WrappedInput = t.List = t.Input = t.Container = t.Dropdown = void 0;
            var s = n(i(217));
            t.Dropdown = s.default;
            var r = n(i(613));
            t.Container = r.default;
            var o = n(i(11));
            t.Input = o.default;
            var a = n(i(624));
            t.List = a.default;
            var c = n(i(541));
            t.WrappedInput = c.default;
            var l = n(i(982));
            t.WrappedSelect = l.default
        },
        11: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = i(799)
                , s = i(883)
                , r = function () {
                    function e(e) {
                        var t = e.element
                            , i = e.type
                            , n = e.classNames
                            , s = e.preventPaste;
                        this.element = t,
                            this.type = i,
                            this.classNames = n,
                            this.preventPaste = s,
                            this.isFocussed = this.element.isEqualNode(document.activeElement),
                            this.isDisabled = t.disabled,
                            this._onPaste = this._onPaste.bind(this),
                            this._onInput = this._onInput.bind(this),
                            this._onFocus = this._onFocus.bind(this),
                            this._onBlur = this._onBlur.bind(this)
                    }
                    return Object.defineProperty(e.prototype, "placeholder", {
                        set: function (e) {
                            this.element.placeholder = e
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                        Object.defineProperty(e.prototype, "value", {
                            get: function () {
                                return (0,
                                    n.sanitise)(this.element.value)
                            },
                            set: function (e) {
                                this.element.value = e
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "rawValue", {
                            get: function () {
                                return this.element.value
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        e.prototype.addEventListeners = function () {
                            this.element.addEventListener("paste", this._onPaste),
                                this.element.addEventListener("input", this._onInput, {
                                    passive: !0
                                }),
                                this.element.addEventListener("focus", this._onFocus, {
                                    passive: !0
                                }),
                                this.element.addEventListener("blur", this._onBlur, {
                                    passive: !0
                                })
                        }
                        ,
                        e.prototype.removeEventListeners = function () {
                            this.element.removeEventListener("input", this._onInput),
                                this.element.removeEventListener("paste", this._onPaste),
                                this.element.removeEventListener("focus", this._onFocus),
                                this.element.removeEventListener("blur", this._onBlur)
                        }
                        ,
                        e.prototype.enable = function () {
                            this.element.removeAttribute("disabled"),
                                this.isDisabled = !1
                        }
                        ,
                        e.prototype.disable = function () {
                            this.element.setAttribute("disabled", ""),
                                this.isDisabled = !0
                        }
                        ,
                        e.prototype.focus = function () {
                            this.isFocussed || this.element.focus()
                        }
                        ,
                        e.prototype.blur = function () {
                            this.isFocussed && this.element.blur()
                        }
                        ,
                        e.prototype.clear = function (e) {
                            return void 0 === e && (e = !0),
                                this.element.value && (this.element.value = ""),
                                e && this.setWidth(),
                                this
                        }
                        ,
                        e.prototype.setWidth = function () {
                            var e = this.element
                                , t = e.style
                                , i = e.value
                                , n = e.placeholder;
                            t.minWidth = "".concat(n.length + 1, "ch"),
                                t.width = "".concat(i.length + 1, "ch")
                        }
                        ,
                        e.prototype.setActiveDescendant = function (e) {
                            this.element.setAttribute("aria-activedescendant", e)
                        }
                        ,
                        e.prototype.removeActiveDescendant = function () {
                            this.element.removeAttribute("aria-activedescendant")
                        }
                        ,
                        e.prototype._onInput = function () {
                            this.type !== s.SELECT_ONE_TYPE && this.setWidth()
                        }
                        ,
                        e.prototype._onPaste = function (e) {
                            this.preventPaste && e.preventDefault()
                        }
                        ,
                        e.prototype._onFocus = function () {
                            this.isFocussed = !0
                        }
                        ,
                        e.prototype._onBlur = function () {
                            this.isFocussed = !1
                        }
                        ,
                        e
                }();
            t.default = r
        },
        624: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = i(883)
                , s = function () {
                    function e(e) {
                        var t = e.element;
                        this.element = t,
                            this.scrollPos = this.element.scrollTop,
                            this.height = this.element.offsetHeight
                    }
                    return e.prototype.clear = function () {
                        this.element.innerHTML = ""
                    }
                        ,
                        e.prototype.append = function (e) {
                            this.element.appendChild(e)
                        }
                        ,
                        e.prototype.getChild = function (e) {
                            return this.element.querySelector(e)
                        }
                        ,
                        e.prototype.hasChildren = function () {
                            return this.element.hasChildNodes()
                        }
                        ,
                        e.prototype.scrollToTop = function () {
                            this.element.scrollTop = 0
                        }
                        ,
                        e.prototype.scrollToChildElement = function (e, t) {
                            var i = this;
                            if (e) {
                                var n = this.element.offsetHeight
                                    , s = this.element.scrollTop + n
                                    , r = e.offsetHeight
                                    , o = e.offsetTop + r
                                    , a = t > 0 ? this.element.scrollTop + o - s : e.offsetTop;
                                requestAnimationFrame((function () {
                                    i._animateScroll(a, t)
                                }
                                ))
                            }
                        }
                        ,
                        e.prototype._scrollDown = function (e, t, i) {
                            var n = (i - e) / t
                                , s = n > 1 ? n : 1;
                            this.element.scrollTop = e + s
                        }
                        ,
                        e.prototype._scrollUp = function (e, t, i) {
                            var n = (e - i) / t
                                , s = n > 1 ? n : 1;
                            this.element.scrollTop = e - s
                        }
                        ,
                        e.prototype._animateScroll = function (e, t) {
                            var i = this
                                , s = n.SCROLLING_SPEED
                                , r = this.element.scrollTop
                                , o = !1;
                            t > 0 ? (this._scrollDown(r, s, e),
                                r < e && (o = !0)) : (this._scrollUp(r, s, e),
                                    r > e && (o = !0)),
                                o && requestAnimationFrame((function () {
                                    i._animateScroll(e, t)
                                }
                                ))
                        }
                        ,
                        e
                }();
            t.default = s
        },
        730: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = i(799)
                , s = function () {
                    function e(e) {
                        var t = e.element
                            , i = e.classNames;
                        if (this.element = t,
                            this.classNames = i,
                            !(t instanceof HTMLInputElement || t instanceof HTMLSelectElement))
                            throw new TypeError("Invalid element passed");
                        this.isDisabled = !1
                    }
                    return Object.defineProperty(e.prototype, "isActive", {
                        get: function () {
                            return "active" === this.element.dataset.choice
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                        Object.defineProperty(e.prototype, "dir", {
                            get: function () {
                                return this.element.dir
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "value", {
                            get: function () {
                                return this.element.value
                            },
                            set: function (e) {
                                this.element.value = e
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        e.prototype.conceal = function () {
                            this.element.classList.add(this.classNames.input),
                                this.element.hidden = !0,
                                this.element.tabIndex = -1;
                            var e = this.element.getAttribute("style");
                            e && this.element.setAttribute("data-choice-orig-style", e),
                                this.element.setAttribute("data-choice", "active")
                        }
                        ,
                        e.prototype.reveal = function () {
                            this.element.classList.remove(this.classNames.input),
                                this.element.hidden = !1,
                                this.element.removeAttribute("tabindex");
                            var e = this.element.getAttribute("data-choice-orig-style");
                            e ? (this.element.removeAttribute("data-choice-orig-style"),
                                this.element.setAttribute("style", e)) : this.element.removeAttribute("style"),
                                this.element.removeAttribute("data-choice"),
                                this.element.value = this.element.value
                        }
                        ,
                        e.prototype.enable = function () {
                            this.element.removeAttribute("disabled"),
                                this.element.disabled = !1,
                                this.isDisabled = !1
                        }
                        ,
                        e.prototype.disable = function () {
                            this.element.setAttribute("disabled", ""),
                                this.element.disabled = !0,
                                this.isDisabled = !0
                        }
                        ,
                        e.prototype.triggerEvent = function (e, t) {
                            (0,
                                n.dispatchEvent)(this.element, e, t)
                        }
                        ,
                        e
                }();
            t.default = s
        },
        541: function (e, t, i) {
            var n, s = this && this.__extends || (n = function (e, t) {
                return n = Object.setPrototypeOf || {
                    __proto__: []
                } instanceof Array && function (e, t) {
                    e.__proto__ = t
                }
                    || function (e, t) {
                        for (var i in t)
                            Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
                    }
                    ,
                    n(e, t)
            }
                ,
                function (e, t) {
                    if ("function" != typeof t && null !== t)
                        throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                    function i() {
                        this.constructor = e
                    }
                    n(e, t),
                        e.prototype = null === t ? Object.create(t) : (i.prototype = t.prototype,
                            new i)
                }
            ), r = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = function (e) {
                function t(t) {
                    var i = t.element
                        , n = t.classNames
                        , s = t.delimiter
                        , r = e.call(this, {
                            element: i,
                            classNames: n
                        }) || this;
                    return r.delimiter = s,
                        r
                }
                return s(t, e),
                    Object.defineProperty(t.prototype, "value", {
                        get: function () {
                            return this.element.value
                        },
                        set: function (e) {
                            this.element.setAttribute("value", e),
                                this.element.value = e
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    t
            }(r(i(730)).default);
            t.default = o
        },
        982: function (e, t, i) {
            var n, s = this && this.__extends || (n = function (e, t) {
                return n = Object.setPrototypeOf || {
                    __proto__: []
                } instanceof Array && function (e, t) {
                    e.__proto__ = t
                }
                    || function (e, t) {
                        for (var i in t)
                            Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
                    }
                    ,
                    n(e, t)
            }
                ,
                function (e, t) {
                    if ("function" != typeof t && null !== t)
                        throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                    function i() {
                        this.constructor = e
                    }
                    n(e, t),
                        e.prototype = null === t ? Object.create(t) : (i.prototype = t.prototype,
                            new i)
                }
            ), r = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = function (e) {
                function t(t) {
                    var i = t.element
                        , n = t.classNames
                        , s = t.template
                        , r = e.call(this, {
                            element: i,
                            classNames: n
                        }) || this;
                    return r.template = s,
                        r
                }
                return s(t, e),
                    Object.defineProperty(t.prototype, "placeholderOption", {
                        get: function () {
                            return this.element.querySelector('option[value=""]') || this.element.querySelector("option[placeholder]")
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(t.prototype, "optionGroups", {
                        get: function () {
                            return Array.from(this.element.getElementsByTagName("OPTGROUP"))
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(t.prototype, "options", {
                        get: function () {
                            return Array.from(this.element.options)
                        },
                        set: function (e) {
                            var t = this
                                , i = document.createDocumentFragment();
                            e.forEach((function (e) {
                                return n = e,
                                    s = t.template(n),
                                    void i.appendChild(s);
                                var n, s
                            }
                            )),
                                this.appendDocFragment(i)
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    t.prototype.appendDocFragment = function (e) {
                        this.element.innerHTML = "",
                            this.element.appendChild(e)
                    }
                    ,
                    t
            }(r(i(730)).default);
            t.default = o
        },
        883: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.SCROLLING_SPEED = t.SELECT_MULTIPLE_TYPE = t.SELECT_ONE_TYPE = t.TEXT_TYPE = t.KEY_CODES = t.ACTION_TYPES = t.EVENTS = void 0,
                t.EVENTS = {
                    showDropdown: "showDropdown",
                    hideDropdown: "hideDropdown",
                    change: "change",
                    choice: "choice",
                    search: "search",
                    addItem: "addItem",
                    removeItem: "removeItem",
                    highlightItem: "highlightItem",
                    highlightChoice: "highlightChoice",
                    unhighlightItem: "unhighlightItem"
                },
                t.ACTION_TYPES = {
                    ADD_CHOICE: "ADD_CHOICE",
                    FILTER_CHOICES: "FILTER_CHOICES",
                    ACTIVATE_CHOICES: "ACTIVATE_CHOICES",
                    CLEAR_CHOICES: "CLEAR_CHOICES",
                    ADD_GROUP: "ADD_GROUP",
                    ADD_ITEM: "ADD_ITEM",
                    REMOVE_ITEM: "REMOVE_ITEM",
                    HIGHLIGHT_ITEM: "HIGHLIGHT_ITEM",
                    CLEAR_ALL: "CLEAR_ALL",
                    RESET_TO: "RESET_TO",
                    SET_IS_LOADING: "SET_IS_LOADING"
                },
                t.KEY_CODES = {
                    BACK_KEY: 46,
                    DELETE_KEY: 8,
                    ENTER_KEY: 13,
                    A_KEY: 65,
                    ESC_KEY: 27,
                    UP_KEY: 38,
                    DOWN_KEY: 40,
                    PAGE_UP_KEY: 33,
                    PAGE_DOWN_KEY: 34
                },
                t.TEXT_TYPE = "text",
                t.SELECT_ONE_TYPE = "select-one",
                t.SELECT_MULTIPLE_TYPE = "select-multiple",
                t.SCROLLING_SPEED = 4
        },
        789: function (e, t, i) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.DEFAULT_CONFIG = t.DEFAULT_CLASSNAMES = void 0;
            var n = i(799);
            t.DEFAULT_CLASSNAMES = {
                containerOuter: "choices",
                containerInner: "choices__inner",
                input: "choices__input",
                inputCloned: "choices__input--cloned",
                list: "choices__list",
                listItems: "choices__list--multiple",
                listSingle: "choices__list--single",
                listDropdown: "choices__list--dropdown",
                item: "choices__item",
                itemSelectable: "choices__item--selectable",
                itemDisabled: "choices__item--disabled",
                itemChoice: "choices__item--choice",
                placeholder: "choices__placeholder",
                group: "choices__group",
                groupHeading: "choices__heading",
                button: "choices__button",
                activeState: "is-active",
                focusState: "is-focused",
                openState: "is-open",
                disabledState: "is-disabled",
                highlightedState: "is-highlighted",
                selectedState: "is-selected",
                flippedState: "is-flipped",
                loadingState: "is-loading",
                noResults: "has-no-results",
                noChoices: "has-no-choices"
            },
                t.DEFAULT_CONFIG = {
                    items: [],
                    choices: [],
                    silent: !1,
                    renderChoiceLimit: -1,
                    maxItemCount: -1,
                    addItems: !0,
                    addItemFilter: null,
                    removeItems: !0,
                    removeItemButton: !1,
                    editItems: !1,
                    allowHTML: !0,
                    duplicateItemsAllowed: !0,
                    delimiter: ",",
                    paste: !0,
                    searchEnabled: !0,
                    searchChoices: !0,
                    searchFloor: 1,
                    searchResultLimit: 4,
                    searchFields: ["label", "value"],
                    position: "auto",
                    resetScrollPosition: !0,
                    shouldSort: !0,
                    shouldSortItems: !1,
                    sorter: n.sortByAlpha,
                    placeholder: !0,
                    placeholderValue: null,
                    searchPlaceholderValue: null,
                    prependValue: null,
                    appendValue: null,
                    renderSelectedChoices: "auto",
                    loadingText: "Loading...",
                    noResultsText: "No results found",
                    noChoicesText: "No choices to choose from",
                    itemSelectText: "Press to select",
                    uniqueItemText: "Only unique values can be added",
                    customAddItemText: "Only values matching specific conditions can be added",
                    addItemText: function (e) {
                        return 'Press Enter to add <b>"'.concat((0,
                            n.sanitise)(e), '"</b>')
                    },
                    maxItemText: function (e) {
                        return "Only ".concat(e, " values can be added")
                    },
                    valueComparer: function (e, t) {
                        return e === t
                    },
                    fuseOptions: {
                        includeScore: !0
                    },
                    labelId: "",
                    callbackOnInit: null,
                    callbackOnCreateTemplates: null,
                    classNames: t.DEFAULT_CLASSNAMES
                }
        },
        18: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        978: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        948: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        359: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        285: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        533: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        187: function (e, t, i) {
            var n = this && this.__createBinding || (Object.create ? function (e, t, i, n) {
                void 0 === n && (n = i),
                    Object.defineProperty(e, n, {
                        enumerable: !0,
                        get: function () {
                            return t[i]
                        }
                    })
            }
                : function (e, t, i, n) {
                    void 0 === n && (n = i),
                        e[n] = t[i]
                }
            )
                , s = this && this.__exportStar || function (e, t) {
                    for (var i in e)
                        "default" === i || Object.prototype.hasOwnProperty.call(t, i) || n(t, e, i)
                }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                s(i(18), t),
                s(i(978), t),
                s(i(948), t),
                s(i(359), t),
                s(i(285), t),
                s(i(533), t),
                s(i(287), t),
                s(i(132), t),
                s(i(837), t),
                s(i(598), t),
                s(i(369), t),
                s(i(37), t),
                s(i(47), t),
                s(i(923), t),
                s(i(876), t)
        },
        287: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        132: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        837: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        598: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        37: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        369: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        47: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        923: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        876: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        799: function (e, t) {
            var i;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.diff = t.cloneObject = t.existsInArray = t.dispatchEvent = t.sortByScore = t.sortByAlpha = t.strToEl = t.sanitise = t.isScrolledIntoView = t.getAdjacentEl = t.wrap = t.isType = t.getType = t.generateId = t.generateChars = t.getRandomNumber = void 0,
                t.getRandomNumber = function (e, t) {
                    return Math.floor(Math.random() * (t - e) + e)
                }
                ,
                t.generateChars = function (e) {
                    return Array.from({
                        length: e
                    }, (function () {
                        return (0,
                            t.getRandomNumber)(0, 36).toString(36)
                    }
                    )).join("")
                }
                ,
                t.generateId = function (e, i) {
                    var n = e.id || e.name && "".concat(e.name, "-").concat((0,
                        t.generateChars)(2)) || (0,
                            t.generateChars)(4);
                    return n = n.replace(/(:|\.|\[|\]|,)/g, ""),
                        "".concat(i, "-").concat(n)
                }
                ,
                t.getType = function (e) {
                    return Object.prototype.toString.call(e).slice(8, -1)
                }
                ,
                t.isType = function (e, i) {
                    return null != i && (0,
                        t.getType)(i) === e
                }
                ,
                t.wrap = function (e, t) {
                    return void 0 === t && (t = document.createElement("div")),
                        e.parentNode && (e.nextSibling ? e.parentNode.insertBefore(t, e.nextSibling) : e.parentNode.appendChild(t)),
                        t.appendChild(e)
                }
                ,
                t.getAdjacentEl = function (e, t, i) {
                    void 0 === i && (i = 1);
                    for (var n = "".concat(i > 0 ? "next" : "previous", "ElementSibling"), s = e[n]; s;) {
                        if (s.matches(t))
                            return s;
                        s = s[n]
                    }
                    return s
                }
                ,
                t.isScrolledIntoView = function (e, t, i) {
                    return void 0 === i && (i = 1),
                        !!e && (i > 0 ? t.scrollTop + t.offsetHeight >= e.offsetTop + e.offsetHeight : e.offsetTop >= t.scrollTop)
                }
                ,
                t.sanitise = function (e) {
                    return "string" != typeof e ? e : e.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;")
                }
                ,
                t.strToEl = (i = document.createElement("div"),
                    function (e) {
                        var t = e.trim();
                        i.innerHTML = t;
                        for (var n = i.children[0]; i.firstChild;)
                            i.removeChild(i.firstChild);
                        return n
                    }
                ),
                t.sortByAlpha = function (e, t) {
                    var i = e.value
                        , n = e.label
                        , s = void 0 === n ? i : n
                        , r = t.value
                        , o = t.label
                        , a = void 0 === o ? r : o;
                    return s.localeCompare(a, [], {
                        sensitivity: "base",
                        ignorePunctuation: !0,
                        numeric: !0
                    })
                }
                ,
                t.sortByScore = function (e, t) {
                    var i = e.score
                        , n = void 0 === i ? 0 : i
                        , s = t.score;
                    return n - (void 0 === s ? 0 : s)
                }
                ,
                t.dispatchEvent = function (e, t, i) {
                    void 0 === i && (i = null);
                    var n = new CustomEvent(t, {
                        detail: i,
                        bubbles: !0,
                        cancelable: !0
                    });
                    return e.dispatchEvent(n)
                }
                ,
                t.existsInArray = function (e, t, i) {
                    return void 0 === i && (i = "value"),
                        e.some((function (e) {
                            return "string" == typeof t ? e[i] === t.trim() : e[i] === t
                        }
                        ))
                }
                ,
                t.cloneObject = function (e) {
                    return JSON.parse(JSON.stringify(e))
                }
                ,
                t.diff = function (e, t) {
                    var i = Object.keys(e).sort()
                        , n = Object.keys(t).sort();
                    return i.filter((function (e) {
                        return n.indexOf(e) < 0
                    }
                    ))
                }
        },
        273: function (e, t) {
            var i = this && this.__spreadArray || function (e, t, i) {
                if (i || 2 === arguments.length)
                    for (var n, s = 0, r = t.length; s < r; s++)
                        !n && s in t || (n || (n = Array.prototype.slice.call(t, 0, s)),
                            n[s] = t[s]);
                return e.concat(n || Array.prototype.slice.call(t))
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.defaultState = void 0,
                t.defaultState = [],
                t.default = function (e, n) {
                    switch (void 0 === e && (e = t.defaultState),
                    void 0 === n && (n = {}),
                    n.type) {
                        case "ADD_CHOICE":
                            var s = n
                                , r = {
                                    id: s.id,
                                    elementId: s.elementId,
                                    groupId: s.groupId,
                                    value: s.value,
                                    label: s.label || s.value,
                                    disabled: s.disabled || !1,
                                    selected: !1,
                                    active: !0,
                                    score: 9999,
                                    customProperties: s.customProperties,
                                    placeholder: s.placeholder || !1
                                };
                            return i(i([], e, !0), [r], !1);
                        case "ADD_ITEM":
                            var o = n;
                            return o.choiceId > -1 ? e.map((function (e) {
                                var t = e;
                                return t.id === parseInt("".concat(o.choiceId), 10) && (t.selected = !0),
                                    t
                            }
                            )) : e;
                        case "REMOVE_ITEM":
                            var a = n;
                            return a.choiceId && a.choiceId > -1 ? e.map((function (e) {
                                var t = e;
                                return t.id === parseInt("".concat(a.choiceId), 10) && (t.selected = !1),
                                    t
                            }
                            )) : e;
                        case "FILTER_CHOICES":
                            var c = n;
                            return e.map((function (e) {
                                var t = e;
                                return t.active = c.results.some((function (e) {
                                    var i = e.item
                                        , n = e.score;
                                    return i.id === t.id && (t.score = n,
                                        !0)
                                }
                                )),
                                    t
                            }
                            ));
                        case "ACTIVATE_CHOICES":
                            var l = n;
                            return e.map((function (e) {
                                var t = e;
                                return t.active = l.active,
                                    t
                            }
                            ));
                        case "CLEAR_CHOICES":
                            return t.defaultState;
                        default:
                            return e
                    }
                }
        },
        871: function (e, t) {
            var i = this && this.__spreadArray || function (e, t, i) {
                if (i || 2 === arguments.length)
                    for (var n, s = 0, r = t.length; s < r; s++)
                        !n && s in t || (n || (n = Array.prototype.slice.call(t, 0, s)),
                            n[s] = t[s]);
                return e.concat(n || Array.prototype.slice.call(t))
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.defaultState = void 0,
                t.defaultState = [],
                t.default = function (e, n) {
                    switch (void 0 === e && (e = t.defaultState),
                    void 0 === n && (n = {}),
                    n.type) {
                        case "ADD_GROUP":
                            var s = n;
                            return i(i([], e, !0), [{
                                id: s.id,
                                value: s.value,
                                active: s.active,
                                disabled: s.disabled
                            }], !1);
                        case "CLEAR_CHOICES":
                            return [];
                        default:
                            return e
                    }
                }
        },
        655: function (e, t, i) {
            var n = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.defaultState = void 0;
            var s = i(857)
                , r = n(i(52))
                , o = n(i(871))
                , a = n(i(273))
                , c = n(i(502))
                , l = i(799);
            t.defaultState = {
                groups: [],
                items: [],
                choices: [],
                loading: !1
            };
            var h = (0,
                s.combineReducers)({
                    items: r.default,
                    groups: o.default,
                    choices: a.default,
                    loading: c.default
                });
            t.default = function (e, i) {
                var n = e;
                if ("CLEAR_ALL" === i.type)
                    n = t.defaultState;
                else if ("RESET_TO" === i.type)
                    return (0,
                        l.cloneObject)(i.state);
                return h(n, i)
            }
        },
        52: function (e, t) {
            var i = this && this.__spreadArray || function (e, t, i) {
                if (i || 2 === arguments.length)
                    for (var n, s = 0, r = t.length; s < r; s++)
                        !n && s in t || (n || (n = Array.prototype.slice.call(t, 0, s)),
                            n[s] = t[s]);
                return e.concat(n || Array.prototype.slice.call(t))
            }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.defaultState = void 0,
                t.defaultState = [],
                t.default = function (e, n) {
                    switch (void 0 === e && (e = t.defaultState),
                    void 0 === n && (n = {}),
                    n.type) {
                        case "ADD_ITEM":
                            var s = n;
                            return i(i([], e, !0), [{
                                id: s.id,
                                choiceId: s.choiceId,
                                groupId: s.groupId,
                                value: s.value,
                                label: s.label,
                                active: !0,
                                highlighted: !1,
                                customProperties: s.customProperties,
                                placeholder: s.placeholder || !1,
                                keyCode: null
                            }], !1).map((function (e) {
                                var t = e;
                                return t.highlighted = !1,
                                    t
                            }
                            ));
                        case "REMOVE_ITEM":
                            return e.map((function (e) {
                                var t = e;
                                return t.id === n.id && (t.active = !1),
                                    t
                            }
                            ));
                        case "HIGHLIGHT_ITEM":
                            var r = n;
                            return e.map((function (e) {
                                var t = e;
                                return t.id === r.id && (t.highlighted = r.highlighted),
                                    t
                            }
                            ));
                        default:
                            return e
                    }
                }
        },
        502: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
                t.defaultState = void 0,
                t.defaultState = !1,
                t.default = function (e, i) {
                    return void 0 === e && (e = t.defaultState),
                        void 0 === i && (i = {}),
                        "SET_IS_LOADING" === i.type ? i.isLoading : e
                }
        },
        744: function (e, t, i) {
            var n = this && this.__spreadArray || function (e, t, i) {
                if (i || 2 === arguments.length)
                    for (var n, s = 0, r = t.length; s < r; s++)
                        !n && s in t || (n || (n = Array.prototype.slice.call(t, 0, s)),
                            n[s] = t[s]);
                return e.concat(n || Array.prototype.slice.call(t))
            }
                , s = this && this.__importDefault || function (e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = i(857)
                , o = s(i(655))
                , a = function () {
                    function e() {
                        this._store = (0,
                            r.createStore)(o.default, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())
                    }
                    return e.prototype.subscribe = function (e) {
                        this._store.subscribe(e)
                    }
                        ,
                        e.prototype.dispatch = function (e) {
                            this._store.dispatch(e)
                        }
                        ,
                        Object.defineProperty(e.prototype, "state", {
                            get: function () {
                                return this._store.getState()
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "items", {
                            get: function () {
                                return this.state.items
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "activeItems", {
                            get: function () {
                                return this.items.filter((function (e) {
                                    return !0 === e.active
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "highlightedActiveItems", {
                            get: function () {
                                return this.items.filter((function (e) {
                                    return e.active && e.highlighted
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "choices", {
                            get: function () {
                                return this.state.choices
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "activeChoices", {
                            get: function () {
                                return this.choices.filter((function (e) {
                                    return !0 === e.active
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "selectableChoices", {
                            get: function () {
                                return this.choices.filter((function (e) {
                                    return !0 !== e.disabled
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "searchableChoices", {
                            get: function () {
                                return this.selectableChoices.filter((function (e) {
                                    return !0 !== e.placeholder
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "placeholderChoice", {
                            get: function () {
                                return n([], this.choices, !0).reverse().find((function (e) {
                                    return !0 === e.placeholder
                                }
                                ))
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "groups", {
                            get: function () {
                                return this.state.groups
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, "activeGroups", {
                            get: function () {
                                var e = this.groups
                                    , t = this.choices;
                                return e.filter((function (e) {
                                    var i = !0 === e.active && !1 === e.disabled
                                        , n = t.some((function (e) {
                                            return !0 === e.active && !1 === e.disabled
                                        }
                                        ));
                                    return i && n
                                }
                                ), [])
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        e.prototype.isLoading = function () {
                            return this.state.loading
                        }
                        ,
                        e.prototype.getChoiceById = function (e) {
                            return this.activeChoices.find((function (t) {
                                return t.id === parseInt(e, 10)
                            }
                            ))
                        }
                        ,
                        e.prototype.getGroupById = function (e) {
                            return this.groups.find((function (t) {
                                return t.id === e
                            }
                            ))
                        }
                        ,
                        e
                }();
            t.default = a
        },
        686: function (e, t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = {
                containerOuter: function (e, t, i, n, s, r, o) {
                    var a = e.classNames.containerOuter
                        , c = Object.assign(document.createElement("div"), {
                            className: a
                        });
                    return c.dataset.type = r,
                        t && (c.dir = t),
                        n && (c.tabIndex = 0),
                        i && (c.setAttribute("role", s ? "combobox" : "listbox"),
                            s && c.setAttribute("aria-autocomplete", "list")),
                        c.setAttribute("aria-haspopup", "true"),
                        c.setAttribute("aria-expanded", "false"),
                        o && c.setAttribute("aria-labeledby", o),
                        c
                },
                containerInner: function (e) {
                    var t = e.classNames.containerInner;
                    return Object.assign(document.createElement("div"), {
                        className: t
                    })
                },
                itemList: function (e, t) {
                    var i = e.classNames
                        , n = i.list
                        , s = i.listSingle
                        , r = i.listItems;
                    return Object.assign(document.createElement("div"), {
                        className: "".concat(n, " ").concat(t ? s : r)
                    })
                },
                placeholder: function (e, t) {
                    var i, n = e.allowHTML, s = e.classNames.placeholder;
                    return Object.assign(document.createElement("div"), ((i = {
                        className: s
                    })[n ? "innerHTML" : "innerText"] = t,
                        i))
                },
                item: function (e, t, i) {
                    var n, s, r = e.allowHTML, o = e.classNames, a = o.item, c = o.button, l = o.highlightedState, h = o.itemSelectable, u = o.placeholder, d = t.id, p = t.value, f = t.label, m = t.customProperties, v = t.active, g = t.disabled, _ = t.highlighted, y = t.placeholder, E = Object.assign(document.createElement("div"), ((n = {
                        className: a
                    })[r ? "innerHTML" : "innerText"] = f,
                        n));
                    if (Object.assign(E.dataset, {
                        item: "",
                        id: d,
                        value: p,
                        customProperties: m
                    }),
                        v && E.setAttribute("aria-selected", "true"),
                        g && E.setAttribute("aria-disabled", "true"),
                        y && E.classList.add(u),
                        E.classList.add(_ ? l : h),
                        i) {
                        g && E.classList.remove(h),
                            E.dataset.deletable = "";
                        var b = "Remove item"
                            , S = Object.assign(document.createElement("button"), ((s = {
                                type: "button",
                                className: c
                            })[r ? "innerHTML" : "innerText"] = b,
                                s));
                        S.setAttribute("aria-label", "".concat(b, ": '").concat(p, "'")),
                            S.dataset.button = "",
                            E.appendChild(S)
                    }
                    return E
                },
                choiceList: function (e, t) {
                    var i = e.classNames.list
                        , n = Object.assign(document.createElement("div"), {
                            className: i
                        });
                    return t || n.setAttribute("aria-multiselectable", "true"),
                        n.setAttribute("role", "listbox"),
                        n
                },
                choiceGroup: function (e, t) {
                    var i, n = e.allowHTML, s = e.classNames, r = s.group, o = s.groupHeading, a = s.itemDisabled, c = t.id, l = t.value, h = t.disabled, u = Object.assign(document.createElement("div"), {
                        className: "".concat(r, " ").concat(h ? a : "")
                    });
                    return u.setAttribute("role", "group"),
                        Object.assign(u.dataset, {
                            group: "",
                            id: c,
                            value: l
                        }),
                        h && u.setAttribute("aria-disabled", "true"),
                        u.appendChild(Object.assign(document.createElement("div"), ((i = {
                            className: o
                        })[n ? "innerHTML" : "innerText"] = l,
                            i))),
                        u
                },
                choice: function (e, t, i) {
                    var n, s = e.allowHTML, r = e.classNames, o = r.item, a = r.itemChoice, c = r.itemSelectable, l = r.selectedState, h = r.itemDisabled, u = r.placeholder, d = t.id, p = t.value, f = t.label, m = t.groupId, v = t.elementId, g = t.disabled, _ = t.selected, y = t.placeholder, E = Object.assign(document.createElement("div"), ((n = {
                        id: v
                    })[s ? "innerHTML" : "innerText"] = f,
                        n.className = "".concat(o, " ").concat(a),
                        n));
                    return _ && E.classList.add(l),
                        y && E.classList.add(u),
                        E.setAttribute("role", m && m > 0 ? "treeitem" : "option"),
                        Object.assign(E.dataset, {
                            choice: "",
                            id: d,
                            value: p,
                            selectText: i
                        }),
                        g ? (E.classList.add(h),
                            E.dataset.choiceDisabled = "",
                            E.setAttribute("aria-disabled", "true")) : (E.classList.add(c),
                                E.dataset.choiceSelectable = ""),
                        E
                },
                input: function (e, t) {
                    var i = e.classNames
                        , n = i.input
                        , s = i.inputCloned
                        , r = Object.assign(document.createElement("input"), {
                            type: "search",
                            name: "search_terms",
                            className: "".concat(n, " ").concat(s),
                            autocomplete: "off",
                            autocapitalize: "off",
                            spellcheck: !1
                        });
                    return r.setAttribute("role", "textbox"),
                        r.setAttribute("aria-autocomplete", "list"),
                        r.setAttribute("aria-label", t),
                        r
                },
                dropdown: function (e) {
                    var t = e.classNames
                        , i = t.list
                        , n = t.listDropdown
                        , s = document.createElement("div");
                    return s.classList.add(i, n),
                        s.setAttribute("aria-expanded", "false"),
                        s
                },
                notice: function (e, t, i) {
                    var n, s = e.allowHTML, r = e.classNames, o = r.item, a = r.itemChoice, c = r.noResults, l = r.noChoices;
                    void 0 === i && (i = "");
                    var h = [o, a];
                    return "no-choices" === i ? h.push(l) : "no-results" === i && h.push(c),
                        Object.assign(document.createElement("div"), ((n = {})[s ? "innerHTML" : "innerText"] = t,
                            n.className = h.join(" "),
                            n))
                },
                option: function (e) {
                    var t = e.label
                        , i = e.value
                        , n = e.customProperties
                        , s = e.active
                        , r = e.disabled
                        , o = new Option(t, i, !1, s);
                    return n && (o.dataset.customProperties = "".concat(n)),
                        o.disabled = !!r,
                        o
                }
            };
            t.default = i
        },
        996: function (e) {
            var t = function (e) {
                return function (e) {
                    return !!e && "object" == typeof e
                }(e) && !function (e) {
                    var t = Object.prototype.toString.call(e);
                    return "[object RegExp]" === t || "[object Date]" === t || function (e) {
                        return e.$$typeof === i
                    }(e)
                }(e)
            }
                , i = "function" == typeof Symbol && Symbol.for ? Symbol.for("react.element") : 60103;
            function n(e, t) {
                return !1 !== t.clone && t.isMergeableObject(e) ? a((i = e,
                    Array.isArray(i) ? [] : {}), e, t) : e;
                var i
            }
            function s(e, t, i) {
                return e.concat(t).map((function (e) {
                    return n(e, i)
                }
                ))
            }
            function r(e) {
                return Object.keys(e).concat(function (e) {
                    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e).filter((function (t) {
                        return e.propertyIsEnumerable(t)
                    }
                    )) : []
                }(e))
            }
            function o(e, t) {
                try {
                    return t in e
                } catch (e) {
                    return !1
                }
            }
            function a(e, i, c) {
                (c = c || {}).arrayMerge = c.arrayMerge || s,
                    c.isMergeableObject = c.isMergeableObject || t,
                    c.cloneUnlessOtherwiseSpecified = n;
                var l = Array.isArray(i);
                return l === Array.isArray(e) ? l ? c.arrayMerge(e, i, c) : function (e, t, i) {
                    var s = {};
                    return i.isMergeableObject(e) && r(e).forEach((function (t) {
                        s[t] = n(e[t], i)
                    }
                    )),
                        r(t).forEach((function (r) {
                            (function (e, t) {
                                return o(e, t) && !(Object.hasOwnProperty.call(e, t) && Object.propertyIsEnumerable.call(e, t))
                            }
                            )(e, r) || (o(e, r) && i.isMergeableObject(t[r]) ? s[r] = function (e, t) {
                                if (!t.customMerge)
                                    return a;
                                var i = t.customMerge(e);
                                return "function" == typeof i ? i : a
                            }(r, i)(e[r], t[r], i) : s[r] = n(t[r], i))
                        }
                        )),
                        s
                }(e, i, c) : n(i, c)
            }
            a.all = function (e, t) {
                if (!Array.isArray(e))
                    throw new Error("first argument should be an array");
                return e.reduce((function (e, i) {
                    return a(e, i, t)
                }
                ), {})
            }
                ;
            var c = a;
            e.exports = c
        },
        221: function (e, t, i) {
            function n(e) {
                return Array.isArray ? Array.isArray(e) : "[object Array]" === l(e)
            }
            function s(e) {
                return "string" == typeof e
            }
            function r(e) {
                return "number" == typeof e
            }
            function o(e) {
                return "object" == typeof e
            }
            function a(e) {
                return null != e
            }
            function c(e) {
                return !e.trim().length
            }
            function l(e) {
                return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e)
            }
            i.r(t),
                i.d(t, {
                    default: function () {
                        return R
                    }
                });
            const h = Object.prototype.hasOwnProperty;
            class u {
                constructor(e) {
                    this._keys = [],
                        this._keyMap = {};
                    let t = 0;
                    e.forEach((e => {
                        let i = d(e);
                        t += i.weight,
                            this._keys.push(i),
                            this._keyMap[i.id] = i,
                            t += i.weight
                    }
                    )),
                        this._keys.forEach((e => {
                            e.weight /= t
                        }
                        ))
                }
                get(e) {
                    return this._keyMap[e]
                }
                keys() {
                    return this._keys
                }
                toJSON() {
                    return JSON.stringify(this._keys)
                }
            }
            function d(e) {
                let t = null
                    , i = null
                    , r = null
                    , o = 1;
                if (s(e) || n(e))
                    r = e,
                        t = p(e),
                        i = f(e);
                else {
                    if (!h.call(e, "name"))
                        throw new Error("Missing name property in key");
                    const n = e.name;
                    if (r = n,
                        h.call(e, "weight") && (o = e.weight,
                            o <= 0))
                        throw new Error((e => `Property 'weight' in key '${e}' must be a positive integer`)(n));
                    t = p(n),
                        i = f(n)
                }
                return {
                    path: t,
                    id: i,
                    weight: o,
                    src: r
                }
            }
            function p(e) {
                return n(e) ? e : e.split(".")
            }
            function f(e) {
                return n(e) ? e.join(".") : e
            }
            var m = {
                isCaseSensitive: !1,
                includeScore: !1,
                keys: [],
                shouldSort: !0,
                sortFn: (e, t) => e.score === t.score ? e.idx < t.idx ? -1 : 1 : e.score < t.score ? -1 : 1,
                includeMatches: !1,
                findAllMatches: !1,
                minMatchCharLength: 1,
                location: 0,
                threshold: .6,
                distance: 100,
                useExtendedSearch: !1,
                getFn: function (e, t) {
                    let i = []
                        , c = !1;
                    const h = (e, t, u) => {
                        if (a(e))
                            if (t[u]) {
                                const d = e[t[u]];
                                if (!a(d))
                                    return;
                                if (u === t.length - 1 && (s(d) || r(d) || function (e) {
                                    return !0 === e || !1 === e || function (e) {
                                        return o(e) && null !== e
                                    }(e) && "[object Boolean]" == l(e)
                                }(d)))
                                    i.push(function (e) {
                                        return null == e ? "" : function (e) {
                                            if ("string" == typeof e)
                                                return e;
                                            let t = e + "";
                                            return "0" == t && 1 / e == -1 / 0 ? "-0" : t
                                        }(e)
                                    }(d));
                                else if (n(d)) {
                                    c = !0;
                                    for (let e = 0, i = d.length; e < i; e += 1)
                                        h(d[e], t, u + 1)
                                } else
                                    t.length && h(d, t, u + 1)
                            } else
                                i.push(e)
                    }
                        ;
                    return h(e, s(t) ? t.split(".") : t, 0),
                        c ? i : i[0]
                },
                ignoreLocation: !1,
                ignoreFieldNorm: !1,
                fieldNormWeight: 1
            };
            const v = /[^ ]+/g;
            class g {
                constructor({ getFn: e = m.getFn, fieldNormWeight: t = m.fieldNormWeight } = {}) {
                    this.norm = function (e = 1, t = 3) {
                        const i = new Map
                            , n = Math.pow(10, t);
                        return {
                            get(t) {
                                const s = t.match(v).length;
                                if (i.has(s))
                                    return i.get(s);
                                const r = 1 / Math.pow(s, .5 * e)
                                    , o = parseFloat(Math.round(r * n) / n);
                                return i.set(s, o),
                                    o
                            },
                            clear() {
                                i.clear()
                            }
                        }
                    }(t, 3),
                        this.getFn = e,
                        this.isCreated = !1,
                        this.setIndexRecords()
                }
                setSources(e = []) {
                    this.docs = e
                }
                setIndexRecords(e = []) {
                    this.records = e
                }
                setKeys(e = []) {
                    this.keys = e,
                        this._keysMap = {},
                        e.forEach(((e, t) => {
                            this._keysMap[e.id] = t
                        }
                        ))
                }
                create() {
                    !this.isCreated && this.docs.length && (this.isCreated = !0,
                        s(this.docs[0]) ? this.docs.forEach(((e, t) => {
                            this._addString(e, t)
                        }
                        )) : this.docs.forEach(((e, t) => {
                            this._addObject(e, t)
                        }
                        )),
                        this.norm.clear())
                }
                add(e) {
                    const t = this.size();
                    s(e) ? this._addString(e, t) : this._addObject(e, t)
                }
                removeAt(e) {
                    this.records.splice(e, 1);
                    for (let t = e, i = this.size(); t < i; t += 1)
                        this.records[t].i -= 1
                }
                getValueForItemAtKeyId(e, t) {
                    return e[this._keysMap[t]]
                }
                size() {
                    return this.records.length
                }
                _addString(e, t) {
                    if (!a(e) || c(e))
                        return;
                    let i = {
                        v: e,
                        i: t,
                        n: this.norm.get(e)
                    };
                    this.records.push(i)
                }
                _addObject(e, t) {
                    let i = {
                        i: t,
                        $: {}
                    };
                    this.keys.forEach(((t, r) => {
                        let o = this.getFn(e, t.path);
                        if (a(o))
                            if (n(o)) {
                                let e = [];
                                const t = [{
                                    nestedArrIndex: -1,
                                    value: o
                                }];
                                for (; t.length;) {
                                    const { nestedArrIndex: i, value: r } = t.pop();
                                    if (a(r))
                                        if (s(r) && !c(r)) {
                                            let t = {
                                                v: r,
                                                i: i,
                                                n: this.norm.get(r)
                                            };
                                            e.push(t)
                                        } else
                                            n(r) && r.forEach(((e, i) => {
                                                t.push({
                                                    nestedArrIndex: i,
                                                    value: e
                                                })
                                            }
                                            ))
                                }
                                i.$[r] = e
                            } else if (!c(o)) {
                                let e = {
                                    v: o,
                                    n: this.norm.get(o)
                                };
                                i.$[r] = e
                            }
                    }
                    )),
                        this.records.push(i)
                }
                toJSON() {
                    return {
                        keys: this.keys,
                        records: this.records
                    }
                }
            }
            function _(e, t, { getFn: i = m.getFn, fieldNormWeight: n = m.fieldNormWeight } = {}) {
                const s = new g({
                    getFn: i,
                    fieldNormWeight: n
                });
                return s.setKeys(e.map(d)),
                    s.setSources(t),
                    s.create(),
                    s
            }
            function y(e, { errors: t = 0, currentLocation: i = 0, expectedLocation: n = 0, distance: s = m.distance, ignoreLocation: r = m.ignoreLocation } = {}) {
                const o = t / e.length;
                if (r)
                    return o;
                const a = Math.abs(n - i);
                return s ? o + a / s : a ? 1 : o
            }
            const E = 32;
            function b(e) {
                let t = {};
                for (let i = 0, n = e.length; i < n; i += 1) {
                    const s = e.charAt(i);
                    t[s] = (t[s] || 0) | 1 << n - i - 1
                }
                return t
            }
            class S {
                constructor(e, { location: t = m.location, threshold: i = m.threshold, distance: n = m.distance, includeMatches: s = m.includeMatches, findAllMatches: r = m.findAllMatches, minMatchCharLength: o = m.minMatchCharLength, isCaseSensitive: a = m.isCaseSensitive, ignoreLocation: c = m.ignoreLocation } = {}) {
                    if (this.options = {
                        location: t,
                        threshold: i,
                        distance: n,
                        includeMatches: s,
                        findAllMatches: r,
                        minMatchCharLength: o,
                        isCaseSensitive: a,
                        ignoreLocation: c
                    },
                        this.pattern = a ? e : e.toLowerCase(),
                        this.chunks = [],
                        !this.pattern.length)
                        return;
                    const l = (e, t) => {
                        this.chunks.push({
                            pattern: e,
                            alphabet: b(e),
                            startIndex: t
                        })
                    }
                        , h = this.pattern.length;
                    if (h > E) {
                        let e = 0;
                        const t = h % E
                            , i = h - t;
                        for (; e < i;)
                            l(this.pattern.substr(e, E), e),
                                e += E;
                        if (t) {
                            const e = h - E;
                            l(this.pattern.substr(e), e)
                        }
                    } else
                        l(this.pattern, 0)
                }
                searchIn(e) {
                    const { isCaseSensitive: t, includeMatches: i } = this.options;
                    if (t || (e = e.toLowerCase()),
                        this.pattern === e) {
                        let t = {
                            isMatch: !0,
                            score: 0
                        };
                        return i && (t.indices = [[0, e.length - 1]]),
                            t
                    }
                    const { location: n, distance: s, threshold: r, findAllMatches: o, minMatchCharLength: a, ignoreLocation: c } = this.options;
                    let l = []
                        , h = 0
                        , u = !1;
                    this.chunks.forEach((({ pattern: t, alphabet: d, startIndex: p }) => {
                        const { isMatch: f, score: v, indices: g } = function (e, t, i, { location: n = m.location, distance: s = m.distance, threshold: r = m.threshold, findAllMatches: o = m.findAllMatches, minMatchCharLength: a = m.minMatchCharLength, includeMatches: c = m.includeMatches, ignoreLocation: l = m.ignoreLocation } = {}) {
                            if (t.length > E)
                                throw new Error("Pattern length exceeds max of 32.");
                            const h = t.length
                                , u = e.length
                                , d = Math.max(0, Math.min(n, u));
                            let p = r
                                , f = d;
                            const v = a > 1 || c
                                , g = v ? Array(u) : [];
                            let _;
                            for (; (_ = e.indexOf(t, f)) > -1;) {
                                let e = y(t, {
                                    currentLocation: _,
                                    expectedLocation: d,
                                    distance: s,
                                    ignoreLocation: l
                                });
                                if (p = Math.min(e, p),
                                    f = _ + h,
                                    v) {
                                    let e = 0;
                                    for (; e < h;)
                                        g[_ + e] = 1,
                                            e += 1
                                }
                            }
                            f = -1;
                            let b = []
                                , S = 1
                                , I = h + u;
                            const O = 1 << h - 1;
                            for (let n = 0; n < h; n += 1) {
                                let r = 0
                                    , a = I;
                                for (; r < a;)
                                    y(t, {
                                        errors: n,
                                        currentLocation: d + a,
                                        expectedLocation: d,
                                        distance: s,
                                        ignoreLocation: l
                                    }) <= p ? r = a : I = a,
                                        a = Math.floor((I - r) / 2 + r);
                                I = a;
                                let c = Math.max(1, d - a + 1)
                                    , m = o ? u : Math.min(d + a, u) + h
                                    , _ = Array(m + 2);
                                _[m + 1] = (1 << n) - 1;
                                for (let r = m; r >= c; r -= 1) {
                                    let o = r - 1
                                        , a = i[e.charAt(o)];
                                    if (v && (g[o] = +!!a),
                                        _[r] = (_[r + 1] << 1 | 1) & a,
                                        n && (_[r] |= (b[r + 1] | b[r]) << 1 | 1 | b[r + 1]),
                                        _[r] & O && (S = y(t, {
                                            errors: n,
                                            currentLocation: o,
                                            expectedLocation: d,
                                            distance: s,
                                            ignoreLocation: l
                                        }),
                                            S <= p)) {
                                        if (p = S,
                                            f = o,
                                            f <= d)
                                            break;
                                        c = Math.max(1, 2 * d - f)
                                    }
                                }
                                if (y(t, {
                                    errors: n + 1,
                                    currentLocation: d,
                                    expectedLocation: d,
                                    distance: s,
                                    ignoreLocation: l
                                }) > p)
                                    break;
                                b = _
                            }
                            const C = {
                                isMatch: f >= 0,
                                score: Math.max(.001, S)
                            };
                            if (v) {
                                const e = function (e = [], t = m.minMatchCharLength) {
                                    let i = []
                                        , n = -1
                                        , s = -1
                                        , r = 0;
                                    for (let o = e.length; r < o; r += 1) {
                                        let o = e[r];
                                        o && -1 === n ? n = r : o || -1 === n || (s = r - 1,
                                            s - n + 1 >= t && i.push([n, s]),
                                            n = -1)
                                    }
                                    return e[r - 1] && r - n >= t && i.push([n, r - 1]),
                                        i
                                }(g, a);
                                e.length ? c && (C.indices = e) : C.isMatch = !1
                            }
                            return C
                        }(e, t, d, {
                            location: n + p,
                            distance: s,
                            threshold: r,
                            findAllMatches: o,
                            minMatchCharLength: a,
                            includeMatches: i,
                            ignoreLocation: c
                        });
                        f && (u = !0),
                            h += v,
                            f && g && (l = [...l, ...g])
                    }
                    ));
                    let d = {
                        isMatch: u,
                        score: u ? h / this.chunks.length : 1
                    };
                    return u && i && (d.indices = l),
                        d
                }
            }
            class I {
                constructor(e) {
                    this.pattern = e
                }
                static isMultiMatch(e) {
                    return O(e, this.multiRegex)
                }
                static isSingleMatch(e) {
                    return O(e, this.singleRegex)
                }
                search() { }
            }
            function O(e, t) {
                const i = e.match(t);
                return i ? i[1] : null
            }
            class C extends I {
                constructor(e, { location: t = m.location, threshold: i = m.threshold, distance: n = m.distance, includeMatches: s = m.includeMatches, findAllMatches: r = m.findAllMatches, minMatchCharLength: o = m.minMatchCharLength, isCaseSensitive: a = m.isCaseSensitive, ignoreLocation: c = m.ignoreLocation } = {}) {
                    super(e),
                        this._bitapSearch = new S(e, {
                            location: t,
                            threshold: i,
                            distance: n,
                            includeMatches: s,
                            findAllMatches: r,
                            minMatchCharLength: o,
                            isCaseSensitive: a,
                            ignoreLocation: c
                        })
                }
                static get type() {
                    return "fuzzy"
                }
                static get multiRegex() {
                    return /^"(.*)"$/
                }
                static get singleRegex() {
                    return /^(.*)$/
                }
                search(e) {
                    return this._bitapSearch.searchIn(e)
                }
            }
            class T extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "include"
                }
                static get multiRegex() {
                    return /^'"(.*)"$/
                }
                static get singleRegex() {
                    return /^'(.*)$/
                }
                search(e) {
                    let t, i = 0;
                    const n = []
                        , s = this.pattern.length;
                    for (; (t = e.indexOf(this.pattern, i)) > -1;)
                        i = t + s,
                            n.push([t, i - 1]);
                    const r = !!n.length;
                    return {
                        isMatch: r,
                        score: r ? 0 : 1,
                        indices: n
                    }
                }
            }
            const L = [class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "exact"
                }
                static get multiRegex() {
                    return /^="(.*)"$/
                }
                static get singleRegex() {
                    return /^=(.*)$/
                }
                search(e) {
                    const t = e === this.pattern;
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [0, this.pattern.length - 1]
                    }
                }
            }
                , T, class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "prefix-exact"
                }
                static get multiRegex() {
                    return /^\^"(.*)"$/
                }
                static get singleRegex() {
                    return /^\^(.*)$/
                }
                search(e) {
                    const t = e.startsWith(this.pattern);
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [0, this.pattern.length - 1]
                    }
                }
            }
                , class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "inverse-prefix-exact"
                }
                static get multiRegex() {
                    return /^!\^"(.*)"$/
                }
                static get singleRegex() {
                    return /^!\^(.*)$/
                }
                search(e) {
                    const t = !e.startsWith(this.pattern);
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [0, e.length - 1]
                    }
                }
            }
                , class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "inverse-suffix-exact"
                }
                static get multiRegex() {
                    return /^!"(.*)"\$$/
                }
                static get singleRegex() {
                    return /^!(.*)\$$/
                }
                search(e) {
                    const t = !e.endsWith(this.pattern);
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [0, e.length - 1]
                    }
                }
            }
                , class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "suffix-exact"
                }
                static get multiRegex() {
                    return /^"(.*)"\$$/
                }
                static get singleRegex() {
                    return /^(.*)\$$/
                }
                search(e) {
                    const t = e.endsWith(this.pattern);
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [e.length - this.pattern.length, e.length - 1]
                    }
                }
            }
                , class extends I {
                constructor(e) {
                    super(e)
                }
                static get type() {
                    return "inverse-exact"
                }
                static get multiRegex() {
                    return /^!"(.*)"$/
                }
                static get singleRegex() {
                    return /^!(.*)$/
                }
                search(e) {
                    const t = -1 === e.indexOf(this.pattern);
                    return {
                        isMatch: t,
                        score: t ? 0 : 1,
                        indices: [0, e.length - 1]
                    }
                }
            }
                , C]
                , w = L.length
                , A = / +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/
                , M = new Set([C.type, T.type]);
            const P = [];
            function x(e, t) {
                for (let i = 0, n = P.length; i < n; i += 1) {
                    let n = P[i];
                    if (n.condition(e, t))
                        return new n(e, t)
                }
                return new S(e, t)
            }
            const N = "$and"
                , D = e => !(!e.$and && !e.$or)
                , j = e => ({
                    [N]: Object.keys(e).map((t => ({
                        [t]: e[t]
                    })))
                });
            function F(e, t, { auto: i = !0 } = {}) {
                const r = e => {
                    let a = Object.keys(e);
                    const c = (e => !!e.$path)(e);
                    if (!c && a.length > 1 && !D(e))
                        return r(j(e));
                    if ((e => !n(e) && o(e) && !D(e))(e)) {
                        const n = c ? e.$path : a[0]
                            , r = c ? e.$val : e[n];
                        if (!s(r))
                            throw new Error((e => `Invalid value for key ${e}`)(n));
                        const o = {
                            keyId: f(n),
                            pattern: r
                        };
                        return i && (o.searcher = x(r, t)),
                            o
                    }
                    let l = {
                        children: [],
                        operator: a[0]
                    };
                    return a.forEach((t => {
                        const i = e[t];
                        n(i) && i.forEach((e => {
                            l.children.push(r(e))
                        }
                        ))
                    }
                    )),
                        l
                }
                    ;
                return D(e) || (e = j(e)),
                    r(e)
            }
            function k(e, t) {
                const i = e.matches;
                t.matches = [],
                    a(i) && i.forEach((e => {
                        if (!a(e.indices) || !e.indices.length)
                            return;
                        const { indices: i, value: n } = e;
                        let s = {
                            indices: i,
                            value: n
                        };
                        e.key && (s.key = e.key.src),
                            e.idx > -1 && (s.refIndex = e.idx),
                            t.matches.push(s)
                    }
                    ))
            }
            function K(e, t) {
                t.score = e.score
            }
            class R {
                constructor(e, t = {}, i) {
                    this.options = {
                        ...m,
                        ...t
                    },
                        this.options.useExtendedSearch,
                        this._keyStore = new u(this.options.keys),
                        this.setCollection(e, i)
                }
                setCollection(e, t) {
                    if (this._docs = e,
                        t && !(t instanceof g))
                        throw new Error("Incorrect 'index' type");
                    this._myIndex = t || _(this.options.keys, this._docs, {
                        getFn: this.options.getFn,
                        fieldNormWeight: this.options.fieldNormWeight
                    })
                }
                add(e) {
                    a(e) && (this._docs.push(e),
                        this._myIndex.add(e))
                }
                remove(e = (() => !1)) {
                    const t = [];
                    for (let i = 0, n = this._docs.length; i < n; i += 1) {
                        const s = this._docs[i];
                        e(s, i) && (this.removeAt(i),
                            i -= 1,
                            n -= 1,
                            t.push(s))
                    }
                    return t
                }
                removeAt(e) {
                    this._docs.splice(e, 1),
                        this._myIndex.removeAt(e)
                }
                getIndex() {
                    return this._myIndex
                }
                search(e, { limit: t = -1 } = {}) {
                    const { includeMatches: i, includeScore: n, shouldSort: o, sortFn: a, ignoreFieldNorm: c } = this.options;
                    let l = s(e) ? s(this._docs[0]) ? this._searchStringList(e) : this._searchObjectList(e) : this._searchLogical(e);
                    return function (e, { ignoreFieldNorm: t = m.ignoreFieldNorm }) {
                        e.forEach((e => {
                            let i = 1;
                            e.matches.forEach((({ key: e, norm: n, score: s }) => {
                                const r = e ? e.weight : null;
                                i *= Math.pow(0 === s && r ? Number.EPSILON : s, (r || 1) * (t ? 1 : n))
                            }
                            )),
                                e.score = i
                        }
                        ))
                    }(l, {
                        ignoreFieldNorm: c
                    }),
                        o && l.sort(a),
                        r(t) && t > -1 && (l = l.slice(0, t)),
                        function (e, t, { includeMatches: i = m.includeMatches, includeScore: n = m.includeScore } = {}) {
                            const s = [];
                            return i && s.push(k),
                                n && s.push(K),
                                e.map((e => {
                                    const { idx: i } = e
                                        , n = {
                                            item: t[i],
                                            refIndex: i
                                        };
                                    return s.length && s.forEach((t => {
                                        t(e, n)
                                    }
                                    )),
                                        n
                                }
                                ))
                        }(l, this._docs, {
                            includeMatches: i,
                            includeScore: n
                        })
                }
                _searchStringList(e) {
                    const t = x(e, this.options)
                        , { records: i } = this._myIndex
                        , n = [];
                    return i.forEach((({ v: e, i: i, n: s }) => {
                        if (!a(e))
                            return;
                        const { isMatch: r, score: o, indices: c } = t.searchIn(e);
                        r && n.push({
                            item: e,
                            idx: i,
                            matches: [{
                                score: o,
                                value: e,
                                norm: s,
                                indices: c
                            }]
                        })
                    }
                    )),
                        n
                }
                _searchLogical(e) {
                    const t = F(e, this.options)
                        , i = (e, t, n) => {
                            if (!e.children) {
                                const { keyId: i, searcher: s } = e
                                    , r = this._findMatches({
                                        key: this._keyStore.get(i),
                                        value: this._myIndex.getValueForItemAtKeyId(t, i),
                                        searcher: s
                                    });
                                return r && r.length ? [{
                                    idx: n,
                                    item: t,
                                    matches: r
                                }] : []
                            }
                            const s = [];
                            for (let r = 0, o = e.children.length; r < o; r += 1) {
                                const o = e.children[r]
                                    , a = i(o, t, n);
                                if (a.length)
                                    s.push(...a);
                                else if (e.operator === N)
                                    return []
                            }
                            return s
                        }
                        , n = this._myIndex.records
                        , s = {}
                        , r = [];
                    return n.forEach((({ $: e, i: n }) => {
                        if (a(e)) {
                            let o = i(t, e, n);
                            o.length && (s[n] || (s[n] = {
                                idx: n,
                                item: e,
                                matches: []
                            },
                                r.push(s[n])),
                                o.forEach((({ matches: e }) => {
                                    s[n].matches.push(...e)
                                }
                                )))
                        }
                    }
                    )),
                        r
                }
                _searchObjectList(e) {
                    const t = x(e, this.options)
                        , { keys: i, records: n } = this._myIndex
                        , s = [];
                    return n.forEach((({ $: e, i: n }) => {
                        if (!a(e))
                            return;
                        let r = [];
                        i.forEach(((i, n) => {
                            r.push(...this._findMatches({
                                key: i,
                                value: e[n],
                                searcher: t
                            }))
                        }
                        )),
                            r.length && s.push({
                                idx: n,
                                item: e,
                                matches: r
                            })
                    }
                    )),
                        s
                }
                _findMatches({ key: e, value: t, searcher: i }) {
                    if (!a(t))
                        return [];
                    let s = [];
                    if (n(t))
                        t.forEach((({ v: t, i: n, n: r }) => {
                            if (!a(t))
                                return;
                            const { isMatch: o, score: c, indices: l } = i.searchIn(t);
                            o && s.push({
                                score: c,
                                key: e,
                                value: t,
                                idx: n,
                                norm: r,
                                indices: l
                            })
                        }
                        ));
                    else {
                        const { v: n, n: r } = t
                            , { isMatch: o, score: a, indices: c } = i.searchIn(n);
                        o && s.push({
                            score: a,
                            key: e,
                            value: n,
                            norm: r,
                            indices: c
                        })
                    }
                    return s
                }
            }
            R.version = "6.5.3",
                R.createIndex = _,
                R.parseIndex = function (e, { getFn: t = m.getFn, fieldNormWeight: i = m.fieldNormWeight } = {}) {
                    const { keys: n, records: s } = e
                        , r = new g({
                            getFn: t,
                            fieldNormWeight: i
                        });
                    return r.setKeys(n),
                        r.setIndexRecords(s),
                        r
                }
                ,
                R.config = m,
                R.parseQuery = F,
                function (...e) {
                    P.push(...e)
                }(class {
                    constructor(e, { isCaseSensitive: t = m.isCaseSensitive, includeMatches: i = m.includeMatches, minMatchCharLength: n = m.minMatchCharLength, ignoreLocation: s = m.ignoreLocation, findAllMatches: r = m.findAllMatches, location: o = m.location, threshold: a = m.threshold, distance: c = m.distance } = {}) {
                        this.query = null,
                            this.options = {
                                isCaseSensitive: t,
                                includeMatches: i,
                                minMatchCharLength: n,
                                findAllMatches: r,
                                ignoreLocation: s,
                                location: o,
                                threshold: a,
                                distance: c
                            },
                            this.pattern = t ? e : e.toLowerCase(),
                            this.query = function (e, t = {}) {
                                return e.split("|").map((e => {
                                    let i = e.trim().split(A).filter((e => e && !!e.trim()))
                                        , n = [];
                                    for (let e = 0, s = i.length; e < s; e += 1) {
                                        const s = i[e];
                                        let r = !1
                                            , o = -1;
                                        for (; !r && ++o < w;) {
                                            const e = L[o];
                                            let i = e.isMultiMatch(s);
                                            i && (n.push(new e(i, t)),
                                                r = !0)
                                        }
                                        if (!r)
                                            for (o = -1; ++o < w;) {
                                                const e = L[o];
                                                let i = e.isSingleMatch(s);
                                                if (i) {
                                                    n.push(new e(i, t));
                                                    break
                                                }
                                            }
                                    }
                                    return n
                                }
                                ))
                            }(this.pattern, this.options)
                    }
                    static condition(e, t) {
                        return t.useExtendedSearch
                    }
                    searchIn(e) {
                        const t = this.query;
                        if (!t)
                            return {
                                isMatch: !1,
                                score: 1
                            };
                        const { includeMatches: i, isCaseSensitive: n } = this.options;
                        e = n ? e : e.toLowerCase();
                        let s = 0
                            , r = []
                            , o = 0;
                        for (let n = 0, a = t.length; n < a; n += 1) {
                            const a = t[n];
                            r.length = 0,
                                s = 0;
                            for (let t = 0, n = a.length; t < n; t += 1) {
                                const n = a[t]
                                    , { isMatch: c, indices: l, score: h } = n.search(e);
                                if (!c) {
                                    o = 0,
                                        s = 0,
                                        r.length = 0;
                                    break
                                }
                                if (s += 1,
                                    o += h,
                                    i) {
                                    const e = n.constructor.type;
                                    M.has(e) ? r = [...r, ...l] : r.push(l)
                                }
                            }
                            if (s) {
                                let e = {
                                    isMatch: !0,
                                    score: o / s
                                };
                                return i && (e.indices = r),
                                    e
                            }
                        }
                        return {
                            isMatch: !1,
                            score: 1
                        }
                    }
                }
                )
        },
        857: function (e, t, i) {
            function n(e, t, i) {
                return t in e ? Object.defineProperty(e, t, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = i,
                    e
            }
            function s(e, t) {
                var i = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                        i.push.apply(i, n)
                }
                return i
            }
            function r(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var i = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? s(Object(i), !0).forEach((function (t) {
                        n(e, t, i[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : s(Object(i)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                    }
                    ))
                }
                return e
            }
            function o(e) {
                return "Minified Redux error #" + e + "; visit https://redux.js.org/Errors?code=" + e + " for the full message or use the non-minified dev environment for full errors. "
            }
            i.r(t),
                i.d(t, {
                    __DO_NOT_USE__ActionTypes: function () {
                        return l
                    },
                    applyMiddleware: function () {
                        return v
                    },
                    bindActionCreators: function () {
                        return f
                    },
                    combineReducers: function () {
                        return d
                    },
                    compose: function () {
                        return m
                    },
                    createStore: function () {
                        return u
                    }
                });
            var a = "function" == typeof Symbol && Symbol.observable || "@@observable"
                , c = function () {
                    return Math.random().toString(36).substring(7).split("").join(".")
                }
                , l = {
                    INIT: "@@redux/INIT" + c(),
                    REPLACE: "@@redux/REPLACE" + c(),
                    PROBE_UNKNOWN_ACTION: function () {
                        return "@@redux/PROBE_UNKNOWN_ACTION" + c()
                    }
                };
            function h(e) {
                if ("object" != typeof e || null === e)
                    return !1;
                for (var t = e; null !== Object.getPrototypeOf(t);)
                    t = Object.getPrototypeOf(t);
                return Object.getPrototypeOf(e) === t
            }
            function u(e, t, i) {
                var n;
                if ("function" == typeof t && "function" == typeof i || "function" == typeof i && "function" == typeof arguments[3])
                    throw new Error(o(0));
                if ("function" == typeof t && void 0 === i && (i = t,
                    t = void 0),
                    void 0 !== i) {
                    if ("function" != typeof i)
                        throw new Error(o(1));
                    return i(u)(e, t)
                }
                if ("function" != typeof e)
                    throw new Error(o(2));
                var s = e
                    , r = t
                    , c = []
                    , d = c
                    , p = !1;
                function f() {
                    d === c && (d = c.slice())
                }
                function m() {
                    if (p)
                        throw new Error(o(3));
                    return r
                }
                function v(e) {
                    if ("function" != typeof e)
                        throw new Error(o(4));
                    if (p)
                        throw new Error(o(5));
                    var t = !0;
                    return f(),
                        d.push(e),
                        function () {
                            if (t) {
                                if (p)
                                    throw new Error(o(6));
                                t = !1,
                                    f();
                                var i = d.indexOf(e);
                                d.splice(i, 1),
                                    c = null
                            }
                        }
                }
                function g(e) {
                    if (!h(e))
                        throw new Error(o(7));
                    if (void 0 === e.type)
                        throw new Error(o(8));
                    if (p)
                        throw new Error(o(9));
                    try {
                        p = !0,
                            r = s(r, e)
                    } finally {
                        p = !1
                    }
                    for (var t = c = d, i = 0; i < t.length; i++)
                        (0,
                            t[i])();
                    return e
                }
                function _(e) {
                    if ("function" != typeof e)
                        throw new Error(o(10));
                    s = e,
                        g({
                            type: l.REPLACE
                        })
                }
                function y() {
                    var e, t = v;
                    return (e = {
                        subscribe: function (e) {
                            if ("object" != typeof e || null === e)
                                throw new Error(o(11));
                            function i() {
                                e.next && e.next(m())
                            }
                            return i(),
                            {
                                unsubscribe: t(i)
                            }
                        }
                    })[a] = function () {
                        return this
                    }
                        ,
                        e
                }
                return g({
                    type: l.INIT
                }),
                    (n = {
                        dispatch: g,
                        subscribe: v,
                        getState: m,
                        replaceReducer: _
                    })[a] = y,
                    n
            }
            function d(e) {
                for (var t = Object.keys(e), i = {}, n = 0; n < t.length; n++) {
                    var s = t[n];
                    "function" == typeof e[s] && (i[s] = e[s])
                }
                var r, a = Object.keys(i);
                try {
                    !function (e) {
                        Object.keys(e).forEach((function (t) {
                            var i = e[t];
                            if (void 0 === i(void 0, {
                                type: l.INIT
                            }))
                                throw new Error(o(12));
                            if (void 0 === i(void 0, {
                                type: l.PROBE_UNKNOWN_ACTION()
                            }))
                                throw new Error(o(13))
                        }
                        ))
                    }(i)
                } catch (e) {
                    r = e
                }
                return function (e, t) {
                    if (void 0 === e && (e = {}),
                        r)
                        throw r;
                    for (var n = !1, s = {}, c = 0; c < a.length; c++) {
                        var l = a[c]
                            , h = i[l]
                            , u = e[l]
                            , d = h(u, t);
                        if (void 0 === d)
                            throw t && t.type,
                            new Error(o(14));
                        s[l] = d,
                            n = n || d !== u
                    }
                    return (n = n || a.length !== Object.keys(e).length) ? s : e
                }
            }
            function p(e, t) {
                return function () {
                    return t(e.apply(this, arguments))
                }
            }
            function f(e, t) {
                if ("function" == typeof e)
                    return p(e, t);
                if ("object" != typeof e || null === e)
                    throw new Error(o(16));
                var i = {};
                for (var n in e) {
                    var s = e[n];
                    "function" == typeof s && (i[n] = p(s, t))
                }
                return i
            }
            function m() {
                for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
                    t[i] = arguments[i];
                return 0 === t.length ? function (e) {
                    return e
                }
                    : 1 === t.length ? t[0] : t.reduce((function (e, t) {
                        return function () {
                            return e(t.apply(void 0, arguments))
                        }
                    }
                    ))
            }
            function v() {
                for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
                    t[i] = arguments[i];
                return function (e) {
                    return function () {
                        var i = e.apply(void 0, arguments)
                            , n = function () {
                                throw new Error(o(15))
                            }
                            , s = {
                                getState: i.getState,
                                dispatch: function () {
                                    return n.apply(void 0, arguments)
                                }
                            }
                            , a = t.map((function (e) {
                                return e(s)
                            }
                            ));
                        return n = m.apply(void 0, a)(i.dispatch),
                            r(r({}, i), {}, {
                                dispatch: n
                            })
                    }
                }
            }
        }
    }
        , t = {};
    function i(n) {
        var s = t[n];
        if (void 0 !== s)
            return s.exports;
        var r = t[n] = {
            exports: {}
        };
        return e[n].call(r.exports, r, r.exports, i),
            r.exports
    }
    i.n = function (e) {
        var t = e && e.__esModule ? function () {
            return e.default
        }
            : function () {
                return e
            }
            ;
        return i.d(t, {
            a: t
        }),
            t
    }
        ,
        i.d = function (e, t) {
            for (var n in t)
                i.o(t, n) && !i.o(e, n) && Object.defineProperty(e, n, {
                    enumerable: !0,
                    get: t[n]
                })
        }
        ,
        i.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }
        ,
        i.r = function (e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
        }
        ;
    var n, s, r = {};
    n = i(373),
        s = i.n(n),
        i(187),
        i(883),
        i(789),
        i(686),
        r.default = s(),
        window.Choices = r.default
}();


!function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).GLightbox = t()
}(this, (function () {
    "use strict";
    function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        }
            : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
        )(t)
    }
    function t(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function")
    }
    function i(e, t) {
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            n.enumerable = n.enumerable || !1,
                n.configurable = !0,
                "value" in n && (n.writable = !0),
                Object.defineProperty(e, n.key, n)
        }
    }
    function n(e, t, n) {
        return t && i(e.prototype, t),
            n && i(e, n),
            e
    }
    var s = Date.now();
    function l() {
        var e = {}
            , t = !0
            , i = 0
            , n = arguments.length;
        "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && (t = arguments[0],
            i++);
        for (var s = function (i) {
            for (var n in i)
                Object.prototype.hasOwnProperty.call(i, n) && (t && "[object Object]" === Object.prototype.toString.call(i[n]) ? e[n] = l(!0, e[n], i[n]) : e[n] = i[n])
        }; i < n; i++) {
            var o = arguments[i];
            s(o)
        }
        return e
    }
    function o(e, t) {
        if ((k(e) || e === window || e === document) && (e = [e]),
            A(e) || L(e) || (e = [e]),
            0 != P(e))
            if (A(e) && !L(e))
                for (var i = e.length, n = 0; n < i && !1 !== t.call(e[n], e[n], n, e); n++)
                    ;
            else if (L(e))
                for (var s in e)
                    if (O(e, s) && !1 === t.call(e[s], e[s], s, e))
                        break
    }
    function r(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
            , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
            , n = e[s] = e[s] || []
            , l = {
                all: n,
                evt: null,
                found: null
            };
        return t && i && P(n) > 0 && o(n, (function (e, n) {
            if (e.eventName == t && e.fn.toString() == i.toString())
                return l.found = !0,
                    l.evt = n,
                    !1
        }
        )),
            l
    }
    function a(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
            , i = t.onElement
            , n = t.withCallback
            , s = t.avoidDuplicate
            , l = void 0 === s || s
            , a = t.once
            , h = void 0 !== a && a
            , d = t.useCapture
            , c = void 0 !== d && d
            , u = arguments.length > 2 ? arguments[2] : void 0
            , g = i || [];
        function v(e) {
            T(n) && n.call(u, e, this),
                h && v.destroy()
        }
        return C(g) && (g = document.querySelectorAll(g)),
            v.destroy = function () {
                o(g, (function (t) {
                    var i = r(t, e, v);
                    i.found && i.all.splice(i.evt, 1),
                        t.removeEventListener && t.removeEventListener(e, v, c)
                }
                ))
            }
            ,
            o(g, (function (t) {
                var i = r(t, e, v);
                (t.addEventListener && l && !i.found || !l) && (t.addEventListener(e, v, c),
                    i.all.push({
                        eventName: e,
                        fn: v
                    }))
            }
            )),
            v
    }
    function h(e, t) {
        o(t.split(" "), (function (t) {
            return e.classList.add(t)
        }
        ))
    }
    function d(e, t) {
        o(t.split(" "), (function (t) {
            return e.classList.remove(t)
        }
        ))
    }
    function c(e, t) {
        return e.classList.contains(t)
    }
    function u(e, t) {
        for (; e !== document.body;) {
            if (!(e = e.parentElement))
                return !1;
            if ("function" == typeof e.matches ? e.matches(t) : e.msMatchesSelector(t))
                return e
        }
    }
    function g(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
            , i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (!e || "" === t)
            return !1;
        if ("none" == t)
            return T(i) && i(),
                !1;
        var n = x()
            , s = t.split(" ");
        o(s, (function (t) {
            h(e, "g" + t)
        }
        )),
            a(n, {
                onElement: e,
                avoidDuplicate: !1,
                once: !0,
                withCallback: function (e, t) {
                    o(s, (function (e) {
                        d(t, "g" + e)
                    }
                    )),
                        T(i) && i()
                }
            })
    }
    function v(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        if ("" == t)
            return e.style.webkitTransform = "",
                e.style.MozTransform = "",
                e.style.msTransform = "",
                e.style.OTransform = "",
                e.style.transform = "",
                !1;
        e.style.webkitTransform = t,
            e.style.MozTransform = t,
            e.style.msTransform = t,
            e.style.OTransform = t,
            e.style.transform = t
    }
    function f(e) {
        e.style.display = "block"
    }
    function p(e) {
        e.style.display = "none"
    }
    function m(e) {
        var t = document.createDocumentFragment()
            , i = document.createElement("div");
        for (i.innerHTML = e; i.firstChild;)
            t.appendChild(i.firstChild);
        return t
    }
    function y() {
        return {
            width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
            height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
        }
    }
    function x() {
        var e, t = document.createElement("fakeelement"), i = {
            animation: "animationend",
            OAnimation: "oAnimationEnd",
            MozAnimation: "animationend",
            WebkitAnimation: "webkitAnimationEnd"
        };
        for (e in i)
            if (void 0 !== t.style[e])
                return i[e]
    }
    function b(e, t, i, n) {
        if (e())
            t();
        else {
            var s;
            i || (i = 100);
            var l = setInterval((function () {
                e() && (clearInterval(l),
                    s && clearTimeout(s),
                    t())
            }
            ), i);
            n && (s = setTimeout((function () {
                clearInterval(l)
            }
            ), n))
        }
    }
    function S(e, t, i) {
        if (I(e))
            console.error("Inject assets error");
        else if (T(t) && (i = t,
            t = !1),
            C(t) && t in window)
            T(i) && i();
        else {
            var n;
            if (-1 !== e.indexOf(".css")) {
                if ((n = document.querySelectorAll('link[href="' + e + '"]')) && n.length > 0)
                    return void (T(i) && i());
                var s = document.getElementsByTagName("head")[0]
                    , l = s.querySelectorAll('link[rel="stylesheet"]')
                    , o = document.createElement("link");
                return o.rel = "stylesheet",
                    o.type = "text/css",
                    o.href = e,
                    o.media = "all",
                    l ? s.insertBefore(o, l[0]) : s.appendChild(o),
                    void (T(i) && i())
            }
            if ((n = document.querySelectorAll('script[src="' + e + '"]')) && n.length > 0) {
                if (T(i)) {
                    if (C(t))
                        return b((function () {
                            return void 0 !== window[t]
                        }
                        ), (function () {
                            i()
                        }
                        )),
                            !1;
                    i()
                }
            } else {
                var r = document.createElement("script");
                r.type = "text/javascript",
                    r.src = e,
                    r.onload = function () {
                        if (T(i)) {
                            if (C(t))
                                return b((function () {
                                    return void 0 !== window[t]
                                }
                                ), (function () {
                                    i()
                                }
                                )),
                                    !1;
                            i()
                        }
                    }
                    ,
                    document.body.appendChild(r)
            }
        }
    }
    function w() {
        return "navigator" in window && window.navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(Android)|(PlayBook)|(BB10)|(BlackBerry)|(Opera Mini)|(IEMobile)|(webOS)|(MeeGo)/i)
    }
    function T(e) {
        return "function" == typeof e
    }
    function C(e) {
        return "string" == typeof e
    }
    function k(e) {
        return !(!e || !e.nodeType || 1 != e.nodeType)
    }
    function E(e) {
        return Array.isArray(e)
    }
    function A(e) {
        return e && e.length && isFinite(e.length)
    }
    function L(t) {
        return "object" === e(t) && null != t && !T(t) && !E(t)
    }
    function I(e) {
        return null == e
    }
    function O(e, t) {
        return null !== e && hasOwnProperty.call(e, t)
    }
    function P(e) {
        if (L(e)) {
            if (e.keys)
                return e.keys().length;
            var t = 0;
            for (var i in e)
                O(e, i) && t++;
            return t
        }
        return e.length
    }
    function M(e) {
        return !isNaN(parseFloat(e)) && isFinite(e)
    }
    function z() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1
            , t = document.querySelectorAll(".gbtn[data-taborder]:not(.disabled)");
        if (!t.length)
            return !1;
        if (1 == t.length)
            return t[0];
        "string" == typeof e && (e = parseInt(e));
        var i = [];
        o(t, (function (e) {
            i.push(e.getAttribute("data-taborder"))
        }
        ));
        var n = Math.max.apply(Math, i.map((function (e) {
            return parseInt(e)
        }
        )))
            , s = e < 0 ? 1 : e + 1;
        s > n && (s = "1");
        var l = i.filter((function (e) {
            return e >= parseInt(s)
        }
        ))
            , r = l.sort()[0];
        return document.querySelector('.gbtn[data-taborder="'.concat(r, '"]'))
    }
    function X(e) {
        if (e.events.hasOwnProperty("keyboard"))
            return !1;
        e.events.keyboard = a("keydown", {
            onElement: window,
            withCallback: function (t, i) {
                var n = (t = t || window.event).keyCode;
                if (9 == n) {
                    var s = document.querySelector(".gbtn.focused");
                    if (!s) {
                        var l = !(!document.activeElement || !document.activeElement.nodeName) && document.activeElement.nodeName.toLocaleLowerCase();
                        if ("input" == l || "textarea" == l || "button" == l)
                            return
                    }
                    t.preventDefault();
                    var o = document.querySelectorAll(".gbtn[data-taborder]");
                    if (!o || o.length <= 0)
                        return;
                    if (!s) {
                        var r = z();
                        return void (r && (r.focus(),
                            h(r, "focused")))
                    }
                    var a = z(s.getAttribute("data-taborder"));
                    d(s, "focused"),
                        a && (a.focus(),
                            h(a, "focused"))
                }
                39 == n && e.nextSlide(),
                    37 == n && e.prevSlide(),
                    27 == n && e.close()
            }
        })
    }
    function Y(e) {
        return Math.sqrt(e.x * e.x + e.y * e.y)
    }
    function q(e, t) {
        var i = function (e, t) {
            var i = Y(e) * Y(t);
            if (0 === i)
                return 0;
            var n = function (e, t) {
                return e.x * t.x + e.y * t.y
            }(e, t) / i;
            return n > 1 && (n = 1),
                Math.acos(n)
        }(e, t);
        return function (e, t) {
            return e.x * t.y - t.x * e.y
        }(e, t) > 0 && (i *= -1),
            180 * i / Math.PI
    }
    var N = function () {
        function e(i) {
            t(this, e),
                this.handlers = [],
                this.el = i
        }
        return n(e, [{
            key: "add",
            value: function (e) {
                this.handlers.push(e)
            }
        }, {
            key: "del",
            value: function (e) {
                e || (this.handlers = []);
                for (var t = this.handlers.length; t >= 0; t--)
                    this.handlers[t] === e && this.handlers.splice(t, 1)
            }
        }, {
            key: "dispatch",
            value: function () {
                for (var e = 0, t = this.handlers.length; e < t; e++) {
                    var i = this.handlers[e];
                    "function" == typeof i && i.apply(this.el, arguments)
                }
            }
        }]),
            e
    }();
    function D(e, t) {
        var i = new N(e);
        return i.add(t),
            i
    }
    var _ = function () {
        function e(i, n) {
            t(this, e),
                this.element = "string" == typeof i ? document.querySelector(i) : i,
                this.start = this.start.bind(this),
                this.move = this.move.bind(this),
                this.end = this.end.bind(this),
                this.cancel = this.cancel.bind(this),
                this.element.addEventListener("touchstart", this.start, !1),
                this.element.addEventListener("touchmove", this.move, !1),
                this.element.addEventListener("touchend", this.end, !1),
                this.element.addEventListener("touchcancel", this.cancel, !1),
                this.preV = {
                    x: null,
                    y: null
                },
                this.pinchStartLen = null,
                this.zoom = 1,
                this.isDoubleTap = !1;
            var s = function () { };
            this.rotate = D(this.element, n.rotate || s),
                this.touchStart = D(this.element, n.touchStart || s),
                this.multipointStart = D(this.element, n.multipointStart || s),
                this.multipointEnd = D(this.element, n.multipointEnd || s),
                this.pinch = D(this.element, n.pinch || s),
                this.swipe = D(this.element, n.swipe || s),
                this.tap = D(this.element, n.tap || s),
                this.doubleTap = D(this.element, n.doubleTap || s),
                this.longTap = D(this.element, n.longTap || s),
                this.singleTap = D(this.element, n.singleTap || s),
                this.pressMove = D(this.element, n.pressMove || s),
                this.twoFingerPressMove = D(this.element, n.twoFingerPressMove || s),
                this.touchMove = D(this.element, n.touchMove || s),
                this.touchEnd = D(this.element, n.touchEnd || s),
                this.touchCancel = D(this.element, n.touchCancel || s),
                this.translateContainer = this.element,
                this._cancelAllHandler = this.cancelAll.bind(this),
                window.addEventListener("scroll", this._cancelAllHandler),
                this.delta = null,
                this.last = null,
                this.now = null,
                this.tapTimeout = null,
                this.singleTapTimeout = null,
                this.longTapTimeout = null,
                this.swipeTimeout = null,
                this.x1 = this.x2 = this.y1 = this.y2 = null,
                this.preTapPosition = {
                    x: null,
                    y: null
                }
        }
        return n(e, [{
            key: "start",
            value: function (e) {
                if (e.touches) {
                    if (e.target && e.target.nodeName && ["a", "button", "input"].indexOf(e.target.nodeName.toLowerCase()) >= 0)
                        console.log("ignore drag for this touched element", e.target.nodeName.toLowerCase());
                    else {
                        this.now = Date.now(),
                            this.x1 = e.touches[0].pageX,
                            this.y1 = e.touches[0].pageY,
                            this.delta = this.now - (this.last || this.now),
                            this.touchStart.dispatch(e, this.element),
                            null !== this.preTapPosition.x && (this.isDoubleTap = this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30,
                                this.isDoubleTap && clearTimeout(this.singleTapTimeout)),
                            this.preTapPosition.x = this.x1,
                            this.preTapPosition.y = this.y1,
                            this.last = this.now;
                        var t = this.preV;
                        if (e.touches.length > 1) {
                            this._cancelLongTap(),
                                this._cancelSingleTap();
                            var i = {
                                x: e.touches[1].pageX - this.x1,
                                y: e.touches[1].pageY - this.y1
                            };
                            t.x = i.x,
                                t.y = i.y,
                                this.pinchStartLen = Y(t),
                                this.multipointStart.dispatch(e, this.element)
                        }
                        this._preventTap = !1,
                            this.longTapTimeout = setTimeout(function () {
                                this.longTap.dispatch(e, this.element),
                                    this._preventTap = !0
                            }
                                .bind(this), 750)
                    }
                }
            }
        }, {
            key: "move",
            value: function (e) {
                if (e.touches) {
                    var t = this.preV
                        , i = e.touches.length
                        , n = e.touches[0].pageX
                        , s = e.touches[0].pageY;
                    if (this.isDoubleTap = !1,
                        i > 1) {
                        var l = e.touches[1].pageX
                            , o = e.touches[1].pageY
                            , r = {
                                x: e.touches[1].pageX - n,
                                y: e.touches[1].pageY - s
                            };
                        null !== t.x && (this.pinchStartLen > 0 && (e.zoom = Y(r) / this.pinchStartLen,
                            this.pinch.dispatch(e, this.element)),
                            e.angle = q(r, t),
                            this.rotate.dispatch(e, this.element)),
                            t.x = r.x,
                            t.y = r.y,
                            null !== this.x2 && null !== this.sx2 ? (e.deltaX = (n - this.x2 + l - this.sx2) / 2,
                                e.deltaY = (s - this.y2 + o - this.sy2) / 2) : (e.deltaX = 0,
                                    e.deltaY = 0),
                            this.twoFingerPressMove.dispatch(e, this.element),
                            this.sx2 = l,
                            this.sy2 = o
                    } else {
                        if (null !== this.x2) {
                            e.deltaX = n - this.x2,
                                e.deltaY = s - this.y2;
                            var a = Math.abs(this.x1 - this.x2)
                                , h = Math.abs(this.y1 - this.y2);
                            (a > 10 || h > 10) && (this._preventTap = !0)
                        } else
                            e.deltaX = 0,
                                e.deltaY = 0;
                        this.pressMove.dispatch(e, this.element)
                    }
                    this.touchMove.dispatch(e, this.element),
                        this._cancelLongTap(),
                        this.x2 = n,
                        this.y2 = s,
                        i > 1 && e.preventDefault()
                }
            }
        }, {
            key: "end",
            value: function (e) {
                if (e.changedTouches) {
                    this._cancelLongTap();
                    var t = this;
                    e.touches.length < 2 && (this.multipointEnd.dispatch(e, this.element),
                        this.sx2 = this.sy2 = null),
                        this.x2 && Math.abs(this.x1 - this.x2) > 30 || this.y2 && Math.abs(this.y1 - this.y2) > 30 ? (e.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2),
                            this.swipeTimeout = setTimeout((function () {
                                t.swipe.dispatch(e, t.element)
                            }
                            ), 0)) : (this.tapTimeout = setTimeout((function () {
                                t._preventTap || t.tap.dispatch(e, t.element),
                                    t.isDoubleTap && (t.doubleTap.dispatch(e, t.element),
                                        t.isDoubleTap = !1)
                            }
                            ), 0),
                                t.isDoubleTap || (t.singleTapTimeout = setTimeout((function () {
                                    t.singleTap.dispatch(e, t.element)
                                }
                                ), 250))),
                        this.touchEnd.dispatch(e, this.element),
                        this.preV.x = 0,
                        this.preV.y = 0,
                        this.zoom = 1,
                        this.pinchStartLen = null,
                        this.x1 = this.x2 = this.y1 = this.y2 = null
                }
            }
        }, {
            key: "cancelAll",
            value: function () {
                this._preventTap = !0,
                    clearTimeout(this.singleTapTimeout),
                    clearTimeout(this.tapTimeout),
                    clearTimeout(this.longTapTimeout),
                    clearTimeout(this.swipeTimeout)
            }
        }, {
            key: "cancel",
            value: function (e) {
                this.cancelAll(),
                    this.touchCancel.dispatch(e, this.element)
            }
        }, {
            key: "_cancelLongTap",
            value: function () {
                clearTimeout(this.longTapTimeout)
            }
        }, {
            key: "_cancelSingleTap",
            value: function () {
                clearTimeout(this.singleTapTimeout)
            }
        }, {
            key: "_swipeDirection",
            value: function (e, t, i, n) {
                return Math.abs(e - t) >= Math.abs(i - n) ? e - t > 0 ? "Left" : "Right" : i - n > 0 ? "Up" : "Down"
            }
        }, {
            key: "on",
            value: function (e, t) {
                this[e] && this[e].add(t)
            }
        }, {
            key: "off",
            value: function (e, t) {
                this[e] && this[e].del(t)
            }
        }, {
            key: "destroy",
            value: function () {
                return this.singleTapTimeout && clearTimeout(this.singleTapTimeout),
                    this.tapTimeout && clearTimeout(this.tapTimeout),
                    this.longTapTimeout && clearTimeout(this.longTapTimeout),
                    this.swipeTimeout && clearTimeout(this.swipeTimeout),
                    this.element.removeEventListener("touchstart", this.start),
                    this.element.removeEventListener("touchmove", this.move),
                    this.element.removeEventListener("touchend", this.end),
                    this.element.removeEventListener("touchcancel", this.cancel),
                    this.rotate.del(),
                    this.touchStart.del(),
                    this.multipointStart.del(),
                    this.multipointEnd.del(),
                    this.pinch.del(),
                    this.swipe.del(),
                    this.tap.del(),
                    this.doubleTap.del(),
                    this.longTap.del(),
                    this.singleTap.del(),
                    this.pressMove.del(),
                    this.twoFingerPressMove.del(),
                    this.touchMove.del(),
                    this.touchEnd.del(),
                    this.touchCancel.del(),
                    this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null,
                    window.removeEventListener("scroll", this._cancelAllHandler),
                    null
            }
        }]),
            e
    }();
    function W(e) {
        var t = function () {
            var e, t = document.createElement("fakeelement"), i = {
                transition: "transitionend",
                OTransition: "oTransitionEnd",
                MozTransition: "transitionend",
                WebkitTransition: "webkitTransitionEnd"
            };
            for (e in i)
                if (void 0 !== t.style[e])
                    return i[e]
        }()
            , i = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
            , n = c(e, "gslide-media") ? e : e.querySelector(".gslide-media")
            , s = u(n, ".ginner-container")
            , l = e.querySelector(".gslide-description");
        i > 769 && (n = s),
            h(n, "greset"),
            v(n, "translate3d(0, 0, 0)"),
            a(t, {
                onElement: n,
                once: !0,
                withCallback: function (e, t) {
                    d(n, "greset")
                }
            }),
            n.style.opacity = "",
            l && (l.style.opacity = "")
    }
    function B(e) {
        if (e.events.hasOwnProperty("touch"))
            return !1;
        var t, i, n, s = y(), l = s.width, o = s.height, r = !1, a = null, g = null, f = null, p = !1, m = 1, x = 1, b = !1, S = !1, w = null, T = null, C = null, k = null, E = 0, A = 0, L = !1, I = !1, O = {}, P = {}, M = 0, z = 0, X = document.getElementById("glightbox-slider"), Y = document.querySelector(".goverlay"), q = new _(X, {
            touchStart: function (t) {
                if (r = !0,
                    (c(t.targetTouches[0].target, "ginner-container") || u(t.targetTouches[0].target, ".gslide-desc") || "a" == t.targetTouches[0].target.nodeName.toLowerCase()) && (r = !1),
                    u(t.targetTouches[0].target, ".gslide-inline") && !c(t.targetTouches[0].target.parentNode, "gslide-inline") && (r = !1),
                    r) {
                    if (P = t.targetTouches[0],
                        O.pageX = t.targetTouches[0].pageX,
                        O.pageY = t.targetTouches[0].pageY,
                        M = t.targetTouches[0].clientX,
                        z = t.targetTouches[0].clientY,
                        a = e.activeSlide,
                        g = a.querySelector(".gslide-media"),
                        n = a.querySelector(".gslide-inline"),
                        f = null,
                        c(g, "gslide-image") && (f = g.querySelector("img")),
                        (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) > 769 && (g = a.querySelector(".ginner-container")),
                        d(Y, "greset"),
                        t.pageX > 20 && t.pageX < window.innerWidth - 20)
                        return;
                    t.preventDefault()
                }
            },
            touchMove: function (s) {
                if (r && (P = s.targetTouches[0],
                    !b && !S)) {
                    if (n && n.offsetHeight > o) {
                        var a = O.pageX - P.pageX;
                        if (Math.abs(a) <= 13)
                            return !1
                    }
                    p = !0;
                    var h, d = s.targetTouches[0].clientX, c = s.targetTouches[0].clientY, u = M - d, m = z - c;
                    if (Math.abs(u) > Math.abs(m) ? (L = !1,
                        I = !0) : (I = !1,
                            L = !0),
                        t = P.pageX - O.pageX,
                        E = 100 * t / l,
                        i = P.pageY - O.pageY,
                        A = 100 * i / o,
                        L && f && (h = 1 - Math.abs(i) / o,
                            Y.style.opacity = h,
                            e.settings.touchFollowAxis && (E = 0)),
                        I && (h = 1 - Math.abs(t) / l,
                            g.style.opacity = h,
                            e.settings.touchFollowAxis && (A = 0)),
                        !f)
                        return v(g, "translate3d(".concat(E, "%, 0, 0)"));
                    v(g, "translate3d(".concat(E, "%, ").concat(A, "%, 0)"))
                }
            },
            touchEnd: function () {
                if (r) {
                    if (p = !1,
                        S || b)
                        return C = w,
                            void (k = T);
                    var t = Math.abs(parseInt(A))
                        , i = Math.abs(parseInt(E));
                    if (!(t > 29 && f))
                        return t < 29 && i < 25 ? (h(Y, "greset"),
                            Y.style.opacity = 1,
                            W(g)) : void 0;
                    e.close()
                }
            },
            multipointEnd: function () {
                setTimeout((function () {
                    b = !1
                }
                ), 50)
            },
            multipointStart: function () {
                b = !0,
                    m = x || 1
            },
            pinch: function (e) {
                if (!f || p)
                    return !1;
                b = !0,
                    f.scaleX = f.scaleY = m * e.zoom;
                var t = m * e.zoom;
                if (S = !0,
                    t <= 1)
                    return S = !1,
                        t = 1,
                        k = null,
                        C = null,
                        w = null,
                        T = null,
                        void f.setAttribute("style", "");
                t > 4.5 && (t = 4.5),
                    f.style.transform = "scale3d(".concat(t, ", ").concat(t, ", 1)"),
                    x = t
            },
            pressMove: function (e) {
                if (S && !b) {
                    var t = P.pageX - O.pageX
                        , i = P.pageY - O.pageY;
                    C && (t += C),
                        k && (i += k),
                        w = t,
                        T = i;
                    var n = "translate3d(".concat(t, "px, ").concat(i, "px, 0)");
                    x && (n += " scale3d(".concat(x, ", ").concat(x, ", 1)")),
                        v(f, n)
                }
            },
            swipe: function (t) {
                if (!S)
                    if (b)
                        b = !1;
                    else {
                        if ("Left" == t.direction) {
                            if (e.index == e.elements.length - 1)
                                return W(g);
                            e.nextSlide()
                        }
                        if ("Right" == t.direction) {
                            if (0 == e.index)
                                return W(g);
                            e.prevSlide()
                        }
                    }
            }
        });
        e.events.touch = q
    }
    var H = function () {
        function e(i, n) {
            var s = this
                , l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
            if (t(this, e),
                this.img = i,
                this.slide = n,
                this.onclose = l,
                this.img.setZoomEvents)
                return !1;
            this.active = !1,
                this.zoomedIn = !1,
                this.dragging = !1,
                this.currentX = null,
                this.currentY = null,
                this.initialX = null,
                this.initialY = null,
                this.xOffset = 0,
                this.yOffset = 0,
                this.img.addEventListener("mousedown", (function (e) {
                    return s.dragStart(e)
                }
                ), !1),
                this.img.addEventListener("mouseup", (function (e) {
                    return s.dragEnd(e)
                }
                ), !1),
                this.img.addEventListener("mousemove", (function (e) {
                    return s.drag(e)
                }
                ), !1),
                this.img.addEventListener("click", (function (e) {
                    return s.slide.classList.contains("dragging-nav") ? (s.zoomOut(),
                        !1) : s.zoomedIn ? void (s.zoomedIn && !s.dragging && s.zoomOut()) : s.zoomIn()
                }
                ), !1),
                this.img.setZoomEvents = !0
        }
        return n(e, [{
            key: "zoomIn",
            value: function () {
                var e = this.widowWidth();
                if (!(this.zoomedIn || e <= 768)) {
                    var t = this.img;
                    if (t.setAttribute("data-style", t.getAttribute("style")),
                        t.style.maxWidth = t.naturalWidth + "px",
                        t.style.maxHeight = t.naturalHeight + "px",
                        t.naturalWidth > e) {
                        var i = e / 2 - t.naturalWidth / 2;
                        this.setTranslate(this.img.parentNode, i, 0)
                    }
                    this.slide.classList.add("zoomed"),
                        this.zoomedIn = !0
                }
            }
        }, {
            key: "zoomOut",
            value: function () {
                this.img.parentNode.setAttribute("style", ""),
                    this.img.setAttribute("style", this.img.getAttribute("data-style")),
                    this.slide.classList.remove("zoomed"),
                    this.zoomedIn = !1,
                    this.currentX = null,
                    this.currentY = null,
                    this.initialX = null,
                    this.initialY = null,
                    this.xOffset = 0,
                    this.yOffset = 0,
                    this.onclose && "function" == typeof this.onclose && this.onclose()
            }
        }, {
            key: "dragStart",
            value: function (e) {
                e.preventDefault(),
                    this.zoomedIn ? ("touchstart" === e.type ? (this.initialX = e.touches[0].clientX - this.xOffset,
                        this.initialY = e.touches[0].clientY - this.yOffset) : (this.initialX = e.clientX - this.xOffset,
                            this.initialY = e.clientY - this.yOffset),
                        e.target === this.img && (this.active = !0,
                            this.img.classList.add("dragging"))) : this.active = !1
            }
        }, {
            key: "dragEnd",
            value: function (e) {
                var t = this;
                e.preventDefault(),
                    this.initialX = this.currentX,
                    this.initialY = this.currentY,
                    this.active = !1,
                    setTimeout((function () {
                        t.dragging = !1,
                            t.img.isDragging = !1,
                            t.img.classList.remove("dragging")
                    }
                    ), 100)
            }
        }, {
            key: "drag",
            value: function (e) {
                this.active && (e.preventDefault(),
                    "touchmove" === e.type ? (this.currentX = e.touches[0].clientX - this.initialX,
                        this.currentY = e.touches[0].clientY - this.initialY) : (this.currentX = e.clientX - this.initialX,
                            this.currentY = e.clientY - this.initialY),
                    this.xOffset = this.currentX,
                    this.yOffset = this.currentY,
                    this.img.isDragging = !0,
                    this.dragging = !0,
                    this.setTranslate(this.img, this.currentX, this.currentY))
            }
        }, {
            key: "onMove",
            value: function (e) {
                if (this.zoomedIn) {
                    var t = e.clientX - this.img.naturalWidth / 2
                        , i = e.clientY - this.img.naturalHeight / 2;
                    this.setTranslate(this.img, t, i)
                }
            }
        }, {
            key: "setTranslate",
            value: function (e, t, i) {
                e.style.transform = "translate3d(" + t + "px, " + i + "px, 0)"
            }
        }, {
            key: "widowWidth",
            value: function () {
                return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
            }
        }]),
            e
    }()
        , V = function () {
            function e() {
                var i = this
                    , n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                t(this, e);
                var s = n.dragEl
                    , l = n.toleranceX
                    , o = void 0 === l ? 40 : l
                    , r = n.toleranceY
                    , a = void 0 === r ? 65 : r
                    , h = n.slide
                    , d = void 0 === h ? null : h
                    , c = n.instance
                    , u = void 0 === c ? null : c;
                this.el = s,
                    this.active = !1,
                    this.dragging = !1,
                    this.currentX = null,
                    this.currentY = null,
                    this.initialX = null,
                    this.initialY = null,
                    this.xOffset = 0,
                    this.yOffset = 0,
                    this.direction = null,
                    this.lastDirection = null,
                    this.toleranceX = o,
                    this.toleranceY = a,
                    this.toleranceReached = !1,
                    this.dragContainer = this.el,
                    this.slide = d,
                    this.instance = u,
                    this.el.addEventListener("mousedown", (function (e) {
                        return i.dragStart(e)
                    }
                    ), !1),
                    this.el.addEventListener("mouseup", (function (e) {
                        return i.dragEnd(e)
                    }
                    ), !1),
                    this.el.addEventListener("mousemove", (function (e) {
                        return i.drag(e)
                    }
                    ), !1)
            }
            return n(e, [{
                key: "dragStart",
                value: function (e) {
                    if (this.slide.classList.contains("zoomed"))
                        this.active = !1;
                    else {
                        "touchstart" === e.type ? (this.initialX = e.touches[0].clientX - this.xOffset,
                            this.initialY = e.touches[0].clientY - this.yOffset) : (this.initialX = e.clientX - this.xOffset,
                                this.initialY = e.clientY - this.yOffset);
                        var t = e.target.nodeName.toLowerCase();
                        e.target.classList.contains("nodrag") || u(e.target, ".nodrag") || -1 !== ["input", "select", "textarea", "button", "a"].indexOf(t) ? this.active = !1 : (e.preventDefault(),
                            (e.target === this.el || "img" !== t && u(e.target, ".gslide-inline")) && (this.active = !0,
                                this.el.classList.add("dragging"),
                                this.dragContainer = u(e.target, ".ginner-container")))
                    }
                }
            }, {
                key: "dragEnd",
                value: function (e) {
                    var t = this;
                    e && e.preventDefault(),
                        this.initialX = 0,
                        this.initialY = 0,
                        this.currentX = null,
                        this.currentY = null,
                        this.initialX = null,
                        this.initialY = null,
                        this.xOffset = 0,
                        this.yOffset = 0,
                        this.active = !1,
                        this.doSlideChange && (this.instance.preventOutsideClick = !0,
                            "right" == this.doSlideChange && this.instance.prevSlide(),
                            "left" == this.doSlideChange && this.instance.nextSlide()),
                        this.doSlideClose && this.instance.close(),
                        this.toleranceReached || this.setTranslate(this.dragContainer, 0, 0, !0),
                        setTimeout((function () {
                            t.instance.preventOutsideClick = !1,
                                t.toleranceReached = !1,
                                t.lastDirection = null,
                                t.dragging = !1,
                                t.el.isDragging = !1,
                                t.el.classList.remove("dragging"),
                                t.slide.classList.remove("dragging-nav"),
                                t.dragContainer.style.transform = "",
                                t.dragContainer.style.transition = ""
                        }
                        ), 100)
                }
            }, {
                key: "drag",
                value: function (e) {
                    if (this.active) {
                        e.preventDefault(),
                            this.slide.classList.add("dragging-nav"),
                            "touchmove" === e.type ? (this.currentX = e.touches[0].clientX - this.initialX,
                                this.currentY = e.touches[0].clientY - this.initialY) : (this.currentX = e.clientX - this.initialX,
                                    this.currentY = e.clientY - this.initialY),
                            this.xOffset = this.currentX,
                            this.yOffset = this.currentY,
                            this.el.isDragging = !0,
                            this.dragging = !0,
                            this.doSlideChange = !1,
                            this.doSlideClose = !1;
                        var t = Math.abs(this.currentX)
                            , i = Math.abs(this.currentY);
                        if (t > 0 && t >= Math.abs(this.currentY) && (!this.lastDirection || "x" == this.lastDirection)) {
                            this.yOffset = 0,
                                this.lastDirection = "x",
                                this.setTranslate(this.dragContainer, this.currentX, 0);
                            var n = this.shouldChange();
                            if (!this.instance.settings.dragAutoSnap && n && (this.doSlideChange = n),
                                this.instance.settings.dragAutoSnap && n)
                                return this.instance.preventOutsideClick = !0,
                                    this.toleranceReached = !0,
                                    this.active = !1,
                                    this.instance.preventOutsideClick = !0,
                                    this.dragEnd(null),
                                    "right" == n && this.instance.prevSlide(),
                                    void ("left" == n && this.instance.nextSlide())
                        }
                        if (this.toleranceY > 0 && i > 0 && i >= t && (!this.lastDirection || "y" == this.lastDirection)) {
                            this.xOffset = 0,
                                this.lastDirection = "y",
                                this.setTranslate(this.dragContainer, 0, this.currentY);
                            var s = this.shouldClose();
                            return !this.instance.settings.dragAutoSnap && s && (this.doSlideClose = !0),
                                void (this.instance.settings.dragAutoSnap && s && this.instance.close())
                        }
                    }
                }
            }, {
                key: "shouldChange",
                value: function () {
                    var e = !1;
                    if (Math.abs(this.currentX) >= this.toleranceX) {
                        var t = this.currentX > 0 ? "right" : "left";
                        ("left" == t && this.slide !== this.slide.parentNode.lastChild || "right" == t && this.slide !== this.slide.parentNode.firstChild) && (e = t)
                    }
                    return e
                }
            }, {
                key: "shouldClose",
                value: function () {
                    var e = !1;
                    return Math.abs(this.currentY) >= this.toleranceY && (e = !0),
                        e
                }
            }, {
                key: "setTranslate",
                value: function (e, t, i) {
                    var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                    e.style.transition = n ? "all .2s ease" : "",
                        e.style.transform = "translate3d(".concat(t, "px, ").concat(i, "px, 0)")
                }
            }]),
                e
        }();
    function j(e, t, i, n) {
        var s = e.querySelector(".gslide-media")
            , l = new Image
            , o = "gSlideTitle_" + i
            , r = "gSlideDesc_" + i;
        l.addEventListener("load", (function () {
            T(n) && n()
        }
        ), !1),
            l.src = t.href,
            "" != t.sizes && "" != t.srcset && (l.sizes = t.sizes,
                l.srcset = t.srcset),
            l.alt = "",
            I(t.alt) || "" === t.alt || (l.alt = t.alt),
            "" !== t.title && l.setAttribute("aria-labelledby", o),
            "" !== t.description && l.setAttribute("aria-describedby", r),
            t.hasOwnProperty("_hasCustomWidth") && t._hasCustomWidth && (l.style.width = t.width),
            t.hasOwnProperty("_hasCustomHeight") && t._hasCustomHeight && (l.style.height = t.height),
            s.insertBefore(l, s.firstChild)
    }
    function F(e, t, i, n) {
        var s = this
            , l = e.querySelector(".ginner-container")
            , o = "gvideo" + i
            , r = e.querySelector(".gslide-media")
            , a = this.getAllPlayers();
        h(l, "gvideo-container"),
            r.insertBefore(m('<div class="gvideo-wrapper"></div>'), r.firstChild);
        var d = e.querySelector(".gvideo-wrapper");
        S(this.settings.plyr.css, "Plyr");
        var c = t.href
            , u = location.protocol.replace(":", "")
            , g = ""
            , v = ""
            , f = !1;
        "file" == u && (u = "http"),
            r.style.maxWidth = t.width,
            S(this.settings.plyr.js, "Plyr", (function () {
                if (c.match(/vimeo\.com\/([0-9]*)/)) {
                    var l = /vimeo.*\/(\d+)/i.exec(c);
                    g = "vimeo",
                        v = l[1]
                }
                if (c.match(/(youtube\.com|youtube-nocookie\.com)\/watch\?v=([a-zA-Z0-9\-_]+)/) || c.match(/youtu\.be\/([a-zA-Z0-9\-_]+)/) || c.match(/(youtube\.com|youtube-nocookie\.com)\/embed\/([a-zA-Z0-9\-_]+)/)) {
                    var r = function (e) {
                        var t = "";
                        t = void 0 !== (e = e.replace(/(>|<)/gi, "").split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/)/))[2] ? (t = e[2].split(/[^0-9a-z_\-]/i))[0] : e;
                        return t
                    }(c);
                    g = "youtube",
                        v = r
                }
                if (null !== c.match(/\.(mp4|ogg|webm|mov)$/)) {
                    g = "local";
                    var u = '<video id="' + o + '" ';
                    u += 'style="background:#000; max-width: '.concat(t.width, ';" '),
                        u += 'preload="metadata" ',
                        u += 'x-webkit-airplay="allow" ',
                        u += "playsinline ",
                        u += "controls ",
                        u += 'class="gvideo-local">';
                    var p = c.toLowerCase().split(".").pop()
                        , y = {
                            mp4: "",
                            ogg: "",
                            webm: ""
                        };
                    for (var x in y[p = "mov" == p ? "mp4" : p] = c,
                        y)
                        if (y.hasOwnProperty(x)) {
                            var S = y[x];
                            t.hasOwnProperty(x) && (S = t[x]),
                                "" !== S && (u += '<source src="'.concat(S, '" type="video/').concat(x, '">'))
                        }
                    f = m(u += "</video>")
                }
                var w = f || m('<div id="'.concat(o, '" data-plyr-provider="').concat(g, '" data-plyr-embed-id="').concat(v, '"></div>'));
                h(d, "".concat(g, "-video gvideo")),
                    d.appendChild(w),
                    d.setAttribute("data-id", o),
                    d.setAttribute("data-index", i);
                var C = O(s.settings.plyr, "config") ? s.settings.plyr.config : {}
                    , k = new Plyr("#" + o, C);
                k.on("ready", (function (e) {
                    var t = e.detail.plyr;
                    a[o] = t,
                        T(n) && n()
                }
                )),
                    b((function () {
                        return e.querySelector("iframe") && "true" == e.querySelector("iframe").dataset.ready
                    }
                    ), (function () {
                        s.resize(e)
                    }
                    )),
                    k.on("enterfullscreen", R),
                    k.on("exitfullscreen", R)
            }
            ))
    }
    function R(e) {
        var t = u(e.target, ".gslide-media");
        "enterfullscreen" == e.type && h(t, "fullscreen"),
            "exitfullscreen" == e.type && d(t, "fullscreen")
    }
    function G(e, t, i, n) {
        var s, l = this, o = e.querySelector(".gslide-media"), r = !(!O(t, "href") || !t.href) && t.href.split("#").pop().trim(), d = !(!O(t, "content") || !t.content) && t.content;
        if (d && (C(d) && (s = m('<div class="ginlined-content">'.concat(d, "</div>"))),
            k(d))) {
            "none" == d.style.display && (d.style.display = "block");
            var c = document.createElement("div");
            c.className = "ginlined-content",
                c.appendChild(d),
                s = c
        }
        if (r) {
            var u = document.getElementById(r);
            if (!u)
                return !1;
            var g = u.cloneNode(!0);
            g.style.height = t.height,
                g.style.maxWidth = t.width,
                h(g, "ginlined-content"),
                s = g
        }
        if (!s)
            return console.error("Unable to append inline slide content", t),
                !1;
        o.style.height = t.height,
            o.style.width = t.width,
            o.appendChild(s),
            this.events["inlineclose" + r] = a("click", {
                onElement: o.querySelectorAll(".gtrigger-close"),
                withCallback: function (e) {
                    e.preventDefault(),
                        l.close()
                }
            }),
            T(n) && n()
    }
    function Z(e, t, i, n) {
        var s = e.querySelector(".gslide-media")
            , l = function (e) {
                var t = e.url
                    , i = e.allow
                    , n = e.callback
                    , s = e.appendTo
                    , l = document.createElement("iframe");
                return l.className = "vimeo-video gvideo",
                    l.src = t,
                    l.style.width = "100%",
                    l.style.height = "100%",
                    i && l.setAttribute("allow", i),
                    l.onload = function () {
                        h(l, "node-ready"),
                            T(n) && n()
                    }
                    ,
                    s && s.appendChild(l),
                    l
            }({
                url: t.href,
                callback: n
            });
        s.parentNode.style.maxWidth = t.width,
            s.parentNode.style.height = t.height,
            s.appendChild(l)
    }
    var $ = function () {
        function e() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            t(this, e),
                this.defaults = {
                    href: "",
                    sizes: "",
                    srcset: "",
                    title: "",
                    type: "",
                    description: "",
                    alt: "",
                    descPosition: "bottom",
                    effect: "",
                    width: "",
                    height: "",
                    content: !1,
                    zoomable: !0,
                    draggable: !0
                },
                L(i) && (this.defaults = l(this.defaults, i))
        }
        return n(e, [{
            key: "sourceType",
            value: function (e) {
                var t = e;
                if (null !== (e = e.toLowerCase()).match(/\.(jpeg|jpg|jpe|gif|png|apn|webp|avif|svg)/))
                    return "image";
                if (e.match(/(youtube\.com|youtube-nocookie\.com)\/watch\?v=([a-zA-Z0-9\-_]+)/) || e.match(/youtu\.be\/([a-zA-Z0-9\-_]+)/) || e.match(/(youtube\.com|youtube-nocookie\.com)\/embed\/([a-zA-Z0-9\-_]+)/))
                    return "video";
                if (e.match(/vimeo\.com\/([0-9]*)/))
                    return "video";
                if (null !== e.match(/\.(mp4|ogg|webm|mov)/))
                    return "video";
                if (null !== e.match(/\.(mp3|wav|wma|aac|ogg)/))
                    return "audio";
                if (e.indexOf("#") > -1 && "" !== t.split("#").pop().trim())
                    return "inline";
                return e.indexOf("goajax=true") > -1 ? "ajax" : "external"
            }
        }, {
            key: "parseConfig",
            value: function (e, t) {
                var i = this
                    , n = l({
                        descPosition: t.descPosition
                    }, this.defaults);
                if (L(e) && !k(e)) {
                    O(e, "type") || (O(e, "content") && e.content ? e.type = "inline" : O(e, "href") && (e.type = this.sourceType(e.href)));
                    var s = l(n, e);
                    return this.setSize(s, t),
                        s
                }
                var r = ""
                    , a = e.getAttribute("data-glightbox")
                    , h = e.nodeName.toLowerCase();
                if ("a" === h && (r = e.href),
                    "img" === h && (r = e.src,
                        n.alt = e.alt),
                    n.href = r,
                    o(n, (function (s, l) {
                        O(t, l) && "width" !== l && (n[l] = t[l]);
                        var o = e.dataset[l];
                        I(o) || (n[l] = i.sanitizeValue(o))
                    }
                    )),
                    n.content && (n.type = "inline"),
                    !n.type && r && (n.type = this.sourceType(r)),
                    I(a)) {
                    if (!n.title && "a" == h) {
                        var d = e.title;
                        I(d) || "" === d || (n.title = d)
                    }
                    if (!n.title && "img" == h) {
                        var c = e.alt;
                        I(c) || "" === c || (n.title = c)
                    }
                } else {
                    var u = [];
                    o(n, (function (e, t) {
                        u.push(";\\s?" + t)
                    }
                    )),
                        u = u.join("\\s?:|"),
                        "" !== a.trim() && o(n, (function (e, t) {
                            var s = a
                                , l = new RegExp("s?" + t + "s?:s?(.*?)(" + u + "s?:|$)")
                                , o = s.match(l);
                            if (o && o.length && o[1]) {
                                var r = o[1].trim().replace(/;\s*$/, "");
                                n[t] = i.sanitizeValue(r)
                            }
                        }
                        ))
                }
                if (n.description && "." === n.description.substring(0, 1)) {
                    var g;
                    try {
                        g = document.querySelector(n.description).innerHTML
                    } catch (e) {
                        if (!(e instanceof DOMException))
                            throw e
                    }
                    g && (n.description = g)
                }
                if (!n.description) {
                    var v = e.querySelector(".glightbox-desc");
                    v && (n.description = v.innerHTML)
                }
                return this.setSize(n, t, e),
                    this.slideConfig = n,
                    n
            }
        }, {
            key: "setSize",
            value: function (e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                    , n = "video" == e.type ? this.checkSize(t.videosWidth) : this.checkSize(t.width)
                    , s = this.checkSize(t.height);
                return e.width = O(e, "width") && "" !== e.width ? this.checkSize(e.width) : n,
                    e.height = O(e, "height") && "" !== e.height ? this.checkSize(e.height) : s,
                    i && "image" == e.type && (e._hasCustomWidth = !!i.dataset.width,
                        e._hasCustomHeight = !!i.dataset.height),
                    e
            }
        }, {
            key: "checkSize",
            value: function (e) {
                return M(e) ? "".concat(e, "px") : e
            }
        }, {
            key: "sanitizeValue",
            value: function (e) {
                return "true" !== e && "false" !== e ? e : "true" === e
            }
        }]),
            e
    }()
        , U = function () {
            function e(i, n, s) {
                t(this, e),
                    this.element = i,
                    this.instance = n,
                    this.index = s
            }
            return n(e, [{
                key: "setContent",
                value: function () {
                    var e = this
                        , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                        , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (c(t, "loaded"))
                        return !1;
                    var n = this.instance.settings
                        , s = this.slideConfig
                        , l = w();
                    T(n.beforeSlideLoad) && n.beforeSlideLoad({
                        index: this.index,
                        slide: t,
                        player: !1
                    });
                    var o = s.type
                        , r = s.descPosition
                        , a = t.querySelector(".gslide-media")
                        , d = t.querySelector(".gslide-title")
                        , u = t.querySelector(".gslide-desc")
                        , g = t.querySelector(".gdesc-inner")
                        , v = i
                        , f = "gSlideTitle_" + this.index
                        , p = "gSlideDesc_" + this.index;
                    if (T(n.afterSlideLoad) && (v = function () {
                        T(i) && i(),
                            n.afterSlideLoad({
                                index: e.index,
                                slide: t,
                                player: e.instance.getSlidePlayerInstance(e.index)
                            })
                    }
                    ),
                        "" == s.title && "" == s.description ? g && g.parentNode.parentNode.removeChild(g.parentNode) : (d && "" !== s.title ? (d.id = f,
                            d.innerHTML = s.title) : d.parentNode.removeChild(d),
                            u && "" !== s.description ? (u.id = p,
                                l && n.moreLength > 0 ? (s.smallDescription = this.slideShortDesc(s.description, n.moreLength, n.moreText),
                                    u.innerHTML = s.smallDescription,
                                    this.descriptionEvents(u, s)) : u.innerHTML = s.description) : u.parentNode.removeChild(u),
                            h(a.parentNode, "desc-".concat(r)),
                            h(g.parentNode, "description-".concat(r))),
                        h(a, "gslide-".concat(o)),
                        h(t, "loaded"),
                        "video" !== o) {
                        if ("external" !== o)
                            return "inline" === o ? (G.apply(this.instance, [t, s, this.index, v]),
                                void (s.draggable && new V({
                                    dragEl: t.querySelector(".gslide-inline"),
                                    toleranceX: n.dragToleranceX,
                                    toleranceY: n.dragToleranceY,
                                    slide: t,
                                    instance: this.instance
                                }))) : void ("image" !== o ? T(v) && v() : j(t, s, this.index, (function () {
                                    var i = t.querySelector("img");
                                    s.draggable && new V({
                                        dragEl: i,
                                        toleranceX: n.dragToleranceX,
                                        toleranceY: n.dragToleranceY,
                                        slide: t,
                                        instance: e.instance
                                    }),
                                        s.zoomable && i.naturalWidth > i.offsetWidth && (h(i, "zoomable"),
                                            new H(i, t, (function () {
                                                e.instance.resize()
                                            }
                                            ))),
                                        T(v) && v()
                                }
                                )));
                        Z.apply(this, [t, s, this.index, v])
                    } else
                        F.apply(this.instance, [t, s, this.index, v])
                }
            }, {
                key: "slideShortDesc",
                value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50
                        , i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                        , n = document.createElement("div");
                    n.innerHTML = e;
                    var s = n.innerText
                        , l = i;
                    if ((e = s.trim()).length <= t)
                        return e;
                    var o = e.substr(0, t - 1);
                    return l ? (n = null,
                        o + '... <a href="#" class="desc-more">' + i + "</a>") : o
                }
            }, {
                key: "descriptionEvents",
                value: function (e, t) {
                    var i = this
                        , n = e.querySelector(".desc-more");
                    if (!n)
                        return !1;
                    a("click", {
                        onElement: n,
                        withCallback: function (e, n) {
                            e.preventDefault();
                            var s = document.body
                                , l = u(n, ".gslide-desc");
                            if (!l)
                                return !1;
                            l.innerHTML = t.description,
                                h(s, "gdesc-open");
                            var o = a("click", {
                                onElement: [s, u(l, ".gslide-description")],
                                withCallback: function (e, n) {
                                    "a" !== e.target.nodeName.toLowerCase() && (d(s, "gdesc-open"),
                                        h(s, "gdesc-closed"),
                                        l.innerHTML = t.smallDescription,
                                        i.descriptionEvents(l, t),
                                        setTimeout((function () {
                                            d(s, "gdesc-closed")
                                        }
                                        ), 400),
                                        o.destroy())
                                }
                            })
                        }
                    })
                }
            }, {
                key: "create",
                value: function () {
                    return m(this.instance.settings.slideHTML)
                }
            }, {
                key: "getConfig",
                value: function () {
                    k(this.element) || this.element.hasOwnProperty("draggable") || (this.element.draggable = this.instance.settings.draggable);
                    var e = new $(this.instance.settings.slideExtraAttributes);
                    return this.slideConfig = e.parseConfig(this.element, this.instance.settings),
                        this.slideConfig
                }
            }]),
                e
        }()
        , J = w()
        , K = null !== w() || void 0 !== document.createTouch || "ontouchstart" in window || "onmsgesturechange" in window || navigator.msMaxTouchPoints
        , Q = document.getElementsByTagName("html")[0]
        , ee = {
            selector: ".glightbox",
            elements: null,
            skin: "clean",
            theme: "clean",
            closeButton: !0,
            startAt: null,
            autoplayVideos: !0,
            autofocusVideos: !0,
            descPosition: "bottom",
            width: "900px",
            height: "506px",
            videosWidth: "960px",
            beforeSlideChange: null,
            afterSlideChange: null,
            beforeSlideLoad: null,
            afterSlideLoad: null,
            slideInserted: null,
            slideRemoved: null,
            slideExtraAttributes: null,
            onOpen: null,
            onClose: null,
            loop: !1,
            zoomable: !0,
            draggable: !0,
            dragAutoSnap: !1,
            dragToleranceX: 40,
            dragToleranceY: 65,
            preload: !0,
            oneSlidePerOpen: !1,
            touchNavigation: !0,
            touchFollowAxis: !0,
            keyboardNavigation: !0,
            closeOnOutsideClick: !0,
            plugins: !1,
            plyr: {
                css: "https://cdn.plyr.io/3.6.8/plyr.css",
                js: "https://cdn.plyr.io/3.6.8/plyr.js",
                config: {
                    ratio: "16:9",
                    fullscreen: {
                        enabled: !0,
                        iosNative: !0
                    },
                    youtube: {
                        noCookie: !0,
                        rel: 0,
                        showinfo: 0,
                        iv_load_policy: 3
                    },
                    vimeo: {
                        byline: !1,
                        portrait: !1,
                        title: !1,
                        transparent: !1
                    }
                }
            },
            openEffect: "zoom",
            closeEffect: "zoom",
            slideEffect: "slide",
            moreText: "See more",
            moreLength: 60,
            cssEfects: {
                fade: {
                    in: "fadeIn",
                    out: "fadeOut"
                },
                zoom: {
                    in: "zoomIn",
                    out: "zoomOut"
                },
                slide: {
                    in: "slideInRight",
                    out: "slideOutLeft"
                },
                slideBack: {
                    in: "slideInLeft",
                    out: "slideOutRight"
                },
                none: {
                    in: "none",
                    out: "none"
                }
            },
            svg: {
                close: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" xml:space="preserve"><g><g><path d="M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306C514.019,27.23,514.019,14.135,505.943,6.058z"/></g></g><g><g><path d="M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z"/></g></g></svg>',
                next: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"> <g><path d="M360.731,229.075l-225.1-225.1c-5.3-5.3-13.8-5.3-19.1,0s-5.3,13.8,0,19.1l215.5,215.5l-215.5,215.5c-5.3,5.3-5.3,13.8,0,19.1c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-4l225.1-225.1C365.931,242.875,365.931,234.275,360.731,229.075z"/></g></svg>',
                prev: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"><g><path d="M145.188,238.575l215.5-215.5c5.3-5.3,5.3-13.8,0-19.1s-13.8-5.3-19.1,0l-225.1,225.1c-5.3,5.3-5.3,13.8,0,19.1l225.1,225c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4c5.3-5.3,5.3-13.8,0-19.1L145.188,238.575z"/></g></svg>'
            },
            slideHTML: '<div class="gslide">\n    <div class="gslide-inner-content">\n        <div class="ginner-container">\n            <div class="gslide-media">\n            </div>\n            <div class="gslide-description">\n                <div class="gdesc-inner">\n                    <h4 class="gslide-title"></h4>\n                    <div class="gslide-desc"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>',
            lightboxHTML: '<div id="glightbox-body" class="glightbox-container" tabindex="-1" role="dialog" aria-hidden="false">\n    <div class="gloader visible"></div>\n    <div class="goverlay"></div>\n    <div class="gcontainer">\n    <div id="glightbox-slider" class="gslider"></div>\n    <button class="gclose gbtn" aria-label="Close" data-taborder="3">{closeSVG}</button>\n    <button class="gprev gbtn" aria-label="Previous" data-taborder="2">{prevSVG}</button>\n    <button class="gnext gbtn" aria-label="Next" data-taborder="1">{nextSVG}</button>\n</div>\n</div>'
        }
        , te = function () {
            function e() {
                var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                t(this, e),
                    this.customOptions = i,
                    this.settings = l(ee, i),
                    this.effectsClasses = this.getAnimationClasses(),
                    this.videoPlayers = {},
                    this.apiEvents = [],
                    this.fullElementsList = !1
            }
            return n(e, [{
                key: "init",
                value: function () {
                    var e = this
                        , t = this.getSelector();
                    t && (this.baseEvents = a("click", {
                        onElement: t,
                        withCallback: function (t, i) {
                            t.preventDefault(),
                                e.open(i)
                        }
                    })),
                        this.elements = this.getElements()
                }
            }, {
                key: "open",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                        , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    if (0 == this.elements.length)
                        return !1;
                    this.activeSlide = null,
                        this.prevActiveSlideIndex = null,
                        this.prevActiveSlide = null;
                    var i = M(t) ? t : this.settings.startAt;
                    if (k(e)) {
                        var n = e.getAttribute("data-gallery");
                        n && (this.fullElementsList = this.elements,
                            this.elements = this.getGalleryElements(this.elements, n)),
                            I(i) && (i = this.getElementIndex(e)) < 0 && (i = 0)
                    }
                    M(i) || (i = 0),
                        this.build(),
                        g(this.overlay, "none" == this.settings.openEffect ? "none" : this.settings.cssEfects.fade.in);
                    var s = document.body
                        , l = window.innerWidth - document.documentElement.clientWidth;
                    if (l > 0) {
                        var o = document.createElement("style");
                        o.type = "text/css",
                            o.className = "gcss-styles",
                            o.innerText = ".gscrollbar-fixer {margin-right: ".concat(l, "px}"),
                            document.head.appendChild(o),
                            h(s, "gscrollbar-fixer")
                    }
                    h(s, "glightbox-open"),
                        h(Q, "glightbox-open"),
                        J && (h(document.body, "glightbox-mobile"),
                            this.settings.slideEffect = "slide"),
                        this.showSlide(i, !0),
                        1 == this.elements.length ? (h(this.prevButton, "glightbox-button-hidden"),
                            h(this.nextButton, "glightbox-button-hidden")) : (d(this.prevButton, "glightbox-button-hidden"),
                                d(this.nextButton, "glightbox-button-hidden")),
                        this.lightboxOpen = !0,
                        this.trigger("open"),
                        T(this.settings.onOpen) && this.settings.onOpen(),
                        K && this.settings.touchNavigation && B(this),
                        this.settings.keyboardNavigation && X(this)
                }
            }, {
                key: "openAt",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.open(null, e)
                }
            }, {
                key: "showSlide",
                value: function () {
                    var e = this
                        , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                        , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    f(this.loader),
                        this.index = parseInt(t);
                    var n = this.slidesContainer.querySelector(".current");
                    n && d(n, "current"),
                        this.slideAnimateOut();
                    var s = this.slidesContainer.querySelectorAll(".gslide")[t];
                    if (c(s, "loaded"))
                        this.slideAnimateIn(s, i),
                            p(this.loader);
                    else {
                        f(this.loader);
                        var l = this.elements[t]
                            , o = {
                                index: this.index,
                                slide: s,
                                slideNode: s,
                                slideConfig: l.slideConfig,
                                slideIndex: this.index,
                                trigger: l.node,
                                player: null
                            };
                        this.trigger("slide_before_load", o),
                            l.instance.setContent(s, (function () {
                                p(e.loader),
                                    e.resize(),
                                    e.slideAnimateIn(s, i),
                                    e.trigger("slide_after_load", o)
                            }
                            ))
                    }
                    this.slideDescription = s.querySelector(".gslide-description"),
                        this.slideDescriptionContained = this.slideDescription && c(this.slideDescription.parentNode, "gslide-media"),
                        this.settings.preload && (this.preloadSlide(t + 1),
                            this.preloadSlide(t - 1)),
                        this.updateNavigationClasses(),
                        this.activeSlide = s
                }
            }, {
                key: "preloadSlide",
                value: function (e) {
                    var t = this;
                    if (e < 0 || e > this.elements.length - 1)
                        return !1;
                    if (I(this.elements[e]))
                        return !1;
                    var i = this.slidesContainer.querySelectorAll(".gslide")[e];
                    if (c(i, "loaded"))
                        return !1;
                    var n = this.elements[e]
                        , s = n.type
                        , l = {
                            index: e,
                            slide: i,
                            slideNode: i,
                            slideConfig: n.slideConfig,
                            slideIndex: e,
                            trigger: n.node,
                            player: null
                        };
                    this.trigger("slide_before_load", l),
                        "video" == s || "external" == s ? setTimeout((function () {
                            n.instance.setContent(i, (function () {
                                t.trigger("slide_after_load", l)
                            }
                            ))
                        }
                        ), 200) : n.instance.setContent(i, (function () {
                            t.trigger("slide_after_load", l)
                        }
                        ))
                }
            }, {
                key: "prevSlide",
                value: function () {
                    this.goToSlide(this.index - 1)
                }
            }, {
                key: "nextSlide",
                value: function () {
                    this.goToSlide(this.index + 1)
                }
            }, {
                key: "goToSlide",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    if (this.prevActiveSlide = this.activeSlide,
                        this.prevActiveSlideIndex = this.index,
                        !this.loop() && (e < 0 || e > this.elements.length - 1))
                        return !1;
                    e < 0 ? e = this.elements.length - 1 : e >= this.elements.length && (e = 0),
                        this.showSlide(e)
                }
            }, {
                key: "insertSlide",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                        , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;
                    t < 0 && (t = this.elements.length);
                    var i = new U(e, this, t)
                        , n = i.getConfig()
                        , s = l({}, n)
                        , o = i.create()
                        , r = this.elements.length - 1;
                    s.index = t,
                        s.node = !1,
                        s.instance = i,
                        s.slideConfig = n,
                        this.elements.splice(t, 0, s);
                    var a = null
                        , h = null;
                    if (this.slidesContainer) {
                        if (t > r)
                            this.slidesContainer.appendChild(o);
                        else {
                            var d = this.slidesContainer.querySelectorAll(".gslide")[t];
                            this.slidesContainer.insertBefore(o, d)
                        }
                        (this.settings.preload && 0 == this.index && 0 == t || this.index - 1 == t || this.index + 1 == t) && this.preloadSlide(t),
                            0 == this.index && 0 == t && (this.index = 1),
                            this.updateNavigationClasses(),
                            a = this.slidesContainer.querySelectorAll(".gslide")[t],
                            h = this.getSlidePlayerInstance(t),
                            s.slideNode = a
                    }
                    this.trigger("slide_inserted", {
                        index: t,
                        slide: a,
                        slideNode: a,
                        slideConfig: n,
                        slideIndex: t,
                        trigger: null,
                        player: h
                    }),
                        T(this.settings.slideInserted) && this.settings.slideInserted({
                            index: t,
                            slide: a,
                            player: h
                        })
                }
            }, {
                key: "removeSlide",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;
                    if (e < 0 || e > this.elements.length - 1)
                        return !1;
                    var t = this.slidesContainer && this.slidesContainer.querySelectorAll(".gslide")[e];
                    t && (this.getActiveSlideIndex() == e && (e == this.elements.length - 1 ? this.prevSlide() : this.nextSlide()),
                        t.parentNode.removeChild(t)),
                        this.elements.splice(e, 1),
                        this.trigger("slide_removed", e),
                        T(this.settings.slideRemoved) && this.settings.slideRemoved(e)
                }
            }, {
                key: "slideAnimateIn",
                value: function (e, t) {
                    var i = this
                        , n = e.querySelector(".gslide-media")
                        , s = e.querySelector(".gslide-description")
                        , l = {
                            index: this.prevActiveSlideIndex,
                            slide: this.prevActiveSlide,
                            slideNode: this.prevActiveSlide,
                            slideIndex: this.prevActiveSlide,
                            slideConfig: I(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].slideConfig,
                            trigger: I(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].node,
                            player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)
                        }
                        , o = {
                            index: this.index,
                            slide: this.activeSlide,
                            slideNode: this.activeSlide,
                            slideConfig: this.elements[this.index].slideConfig,
                            slideIndex: this.index,
                            trigger: this.elements[this.index].node,
                            player: this.getSlidePlayerInstance(this.index)
                        };
                    if (n.offsetWidth > 0 && s && (p(s),
                        s.style.display = ""),
                        d(e, this.effectsClasses),
                        t)
                        g(e, this.settings.cssEfects[this.settings.openEffect].in, (function () {
                            i.settings.autoplayVideos && i.slidePlayerPlay(e),
                                i.trigger("slide_changed", {
                                    prev: l,
                                    current: o
                                }),
                                T(i.settings.afterSlideChange) && i.settings.afterSlideChange.apply(i, [l, o])
                        }
                        ));
                    else {
                        var r = this.settings.slideEffect
                            , a = "none" !== r ? this.settings.cssEfects[r].in : r;
                        this.prevActiveSlideIndex > this.index && "slide" == this.settings.slideEffect && (a = this.settings.cssEfects.slideBack.in),
                            g(e, a, (function () {
                                i.settings.autoplayVideos && i.slidePlayerPlay(e),
                                    i.trigger("slide_changed", {
                                        prev: l,
                                        current: o
                                    }),
                                    T(i.settings.afterSlideChange) && i.settings.afterSlideChange.apply(i, [l, o])
                            }
                            ))
                    }
                    setTimeout((function () {
                        i.resize(e)
                    }
                    ), 100),
                        h(e, "current")
                }
            }, {
                key: "slideAnimateOut",
                value: function () {
                    if (!this.prevActiveSlide)
                        return !1;
                    var e = this.prevActiveSlide;
                    d(e, this.effectsClasses),
                        h(e, "prev");
                    var t = this.settings.slideEffect
                        , i = "none" !== t ? this.settings.cssEfects[t].out : t;
                    this.slidePlayerPause(e),
                        this.trigger("slide_before_change", {
                            prev: {
                                index: this.prevActiveSlideIndex,
                                slide: this.prevActiveSlide,
                                slideNode: this.prevActiveSlide,
                                slideIndex: this.prevActiveSlideIndex,
                                slideConfig: I(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].slideConfig,
                                trigger: I(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].node,
                                player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)
                            },
                            current: {
                                index: this.index,
                                slide: this.activeSlide,
                                slideNode: this.activeSlide,
                                slideIndex: this.index,
                                slideConfig: this.elements[this.index].slideConfig,
                                trigger: this.elements[this.index].node,
                                player: this.getSlidePlayerInstance(this.index)
                            }
                        }),
                        T(this.settings.beforeSlideChange) && this.settings.beforeSlideChange.apply(this, [{
                            index: this.prevActiveSlideIndex,
                            slide: this.prevActiveSlide,
                            player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)
                        }, {
                            index: this.index,
                            slide: this.activeSlide,
                            player: this.getSlidePlayerInstance(this.index)
                        }]),
                        this.prevActiveSlideIndex > this.index && "slide" == this.settings.slideEffect && (i = this.settings.cssEfects.slideBack.out),
                        g(e, i, (function () {
                            var t = e.querySelector(".ginner-container")
                                , i = e.querySelector(".gslide-media")
                                , n = e.querySelector(".gslide-description");
                            t.style.transform = "",
                                i.style.transform = "",
                                d(i, "greset"),
                                i.style.opacity = "",
                                n && (n.style.opacity = ""),
                                d(e, "prev")
                        }
                        ))
                }
            }, {
                key: "getAllPlayers",
                value: function () {
                    return this.videoPlayers
                }
            }, {
                key: "getSlidePlayerInstance",
                value: function (e) {
                    var t = "gvideo" + e
                        , i = this.getAllPlayers();
                    return !(!O(i, t) || !i[t]) && i[t]
                }
            }, {
                key: "stopSlideVideo",
                value: function (e) {
                    if (k(e)) {
                        var t = e.querySelector(".gvideo-wrapper");
                        t && (e = t.getAttribute("data-index"))
                    }
                    console.log("stopSlideVideo is deprecated, use slidePlayerPause");
                    var i = this.getSlidePlayerInstance(e);
                    i && i.playing && i.pause()
                }
            }, {
                key: "slidePlayerPause",
                value: function (e) {
                    if (k(e)) {
                        var t = e.querySelector(".gvideo-wrapper");
                        t && (e = t.getAttribute("data-index"))
                    }
                    var i = this.getSlidePlayerInstance(e);
                    i && i.playing && i.pause()
                }
            }, {
                key: "playSlideVideo",
                value: function (e) {
                    if (k(e)) {
                        var t = e.querySelector(".gvideo-wrapper");
                        t && (e = t.getAttribute("data-index"))
                    }
                    console.log("playSlideVideo is deprecated, use slidePlayerPlay");
                    var i = this.getSlidePlayerInstance(e);
                    i && !i.playing && i.play()
                }
            }, {
                key: "slidePlayerPlay",
                value: function (e) {
                    if (k(e)) {
                        var t = e.querySelector(".gvideo-wrapper");
                        t && (e = t.getAttribute("data-index"))
                    }
                    var i = this.getSlidePlayerInstance(e);
                    i && !i.playing && (i.play(),
                        this.settings.autofocusVideos && i.elements.container.focus())
                }
            }, {
                key: "setElements",
                value: function (e) {
                    var t = this;
                    this.settings.elements = !1;
                    var i = [];
                    e && e.length && o(e, (function (e, n) {
                        var s = new U(e, t, n)
                            , o = s.getConfig()
                            , r = l({}, o);
                        r.slideConfig = o,
                            r.instance = s,
                            r.index = n,
                            i.push(r)
                    }
                    )),
                        this.elements = i,
                        this.lightboxOpen && (this.slidesContainer.innerHTML = "",
                            this.elements.length && (o(this.elements, (function () {
                                var e = m(t.settings.slideHTML);
                                t.slidesContainer.appendChild(e)
                            }
                            )),
                                this.showSlide(0, !0)))
                }
            }, {
                key: "getElementIndex",
                value: function (e) {
                    var t = !1;
                    return o(this.elements, (function (i, n) {
                        if (O(i, "node") && i.node == e)
                            return t = n,
                                !0
                    }
                    )),
                        t
                }
            }, {
                key: "getElements",
                value: function () {
                    var e = this
                        , t = [];
                    this.elements = this.elements ? this.elements : [],
                        !I(this.settings.elements) && E(this.settings.elements) && this.settings.elements.length && o(this.settings.elements, (function (i, n) {
                            var s = new U(i, e, n)
                                , o = s.getConfig()
                                , r = l({}, o);
                            r.node = !1,
                                r.index = n,
                                r.instance = s,
                                r.slideConfig = o,
                                t.push(r)
                        }
                        ));
                    var i = !1;
                    return this.getSelector() && (i = document.querySelectorAll(this.getSelector())),
                        i ? (o(i, (function (i, n) {
                            var s = new U(i, e, n)
                                , o = s.getConfig()
                                , r = l({}, o);
                            r.node = i,
                                r.index = n,
                                r.instance = s,
                                r.slideConfig = o,
                                r.gallery = i.getAttribute("data-gallery"),
                                t.push(r)
                        }
                        )),
                            t) : t
                }
            }, {
                key: "getGalleryElements",
                value: function (e, t) {
                    return e.filter((function (e) {
                        return e.gallery == t
                    }
                    ))
                }
            }, {
                key: "getSelector",
                value: function () {
                    return !this.settings.elements && (this.settings.selector && "data-" == this.settings.selector.substring(0, 5) ? "*[".concat(this.settings.selector, "]") : this.settings.selector)
                }
            }, {
                key: "getActiveSlide",
                value: function () {
                    return this.slidesContainer.querySelectorAll(".gslide")[this.index]
                }
            }, {
                key: "getActiveSlideIndex",
                value: function () {
                    return this.index
                }
            }, {
                key: "getAnimationClasses",
                value: function () {
                    var e = [];
                    for (var t in this.settings.cssEfects)
                        if (this.settings.cssEfects.hasOwnProperty(t)) {
                            var i = this.settings.cssEfects[t];
                            e.push("g".concat(i.in)),
                                e.push("g".concat(i.out))
                        }
                    return e.join(" ")
                }
            }, {
                key: "build",
                value: function () {
                    var e = this;
                    if (this.built)
                        return !1;
                    var t = document.body.childNodes
                        , i = [];
                    o(t, (function (e) {
                        e.parentNode == document.body && "#" !== e.nodeName.charAt(0) && e.hasAttribute && !e.hasAttribute("aria-hidden") && (i.push(e),
                            e.setAttribute("aria-hidden", "true"))
                    }
                    ));
                    var n = O(this.settings.svg, "next") ? this.settings.svg.next : ""
                        , s = O(this.settings.svg, "prev") ? this.settings.svg.prev : ""
                        , l = O(this.settings.svg, "close") ? this.settings.svg.close : ""
                        , r = this.settings.lightboxHTML;
                    r = m(r = (r = (r = r.replace(/{nextSVG}/g, n)).replace(/{prevSVG}/g, s)).replace(/{closeSVG}/g, l)),
                        document.body.appendChild(r);
                    var d = document.getElementById("glightbox-body");
                    this.modal = d;
                    var g = d.querySelector(".gclose");
                    this.prevButton = d.querySelector(".gprev"),
                        this.nextButton = d.querySelector(".gnext"),
                        this.overlay = d.querySelector(".goverlay"),
                        this.loader = d.querySelector(".gloader"),
                        this.slidesContainer = document.getElementById("glightbox-slider"),
                        this.bodyHiddenChildElms = i,
                        this.events = {},
                        h(this.modal, "glightbox-" + this.settings.skin),
                        this.settings.closeButton && g && (this.events.close = a("click", {
                            onElement: g,
                            withCallback: function (t, i) {
                                t.preventDefault(),
                                    e.close()
                            }
                        })),
                        g && !this.settings.closeButton && g.parentNode.removeChild(g),
                        this.nextButton && (this.events.next = a("click", {
                            onElement: this.nextButton,
                            withCallback: function (t, i) {
                                t.preventDefault(),
                                    e.nextSlide()
                            }
                        })),
                        this.prevButton && (this.events.prev = a("click", {
                            onElement: this.prevButton,
                            withCallback: function (t, i) {
                                t.preventDefault(),
                                    e.prevSlide()
                            }
                        })),
                        this.settings.closeOnOutsideClick && (this.events.outClose = a("click", {
                            onElement: d,
                            withCallback: function (t, i) {
                                e.preventOutsideClick || c(document.body, "glightbox-mobile") || u(t.target, ".ginner-container") || u(t.target, ".gbtn") || c(t.target, "gnext") || c(t.target, "gprev") || e.close()
                            }
                        })),
                        o(this.elements, (function (t, i) {
                            e.slidesContainer.appendChild(t.instance.create()),
                                t.slideNode = e.slidesContainer.querySelectorAll(".gslide")[i]
                        }
                        )),
                        K && h(document.body, "glightbox-touch"),
                        this.events.resize = a("resize", {
                            onElement: window,
                            withCallback: function () {
                                e.resize()
                            }
                        }),
                        this.built = !0
                }
            }, {
                key: "resize",
                value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    if ((e = e || this.activeSlide) && !c(e, "zoomed")) {
                        var t = y()
                            , i = e.querySelector(".gvideo-wrapper")
                            , n = e.querySelector(".gslide-image")
                            , s = this.slideDescription
                            , l = t.width
                            , o = t.height;
                        if (l <= 768 ? h(document.body, "glightbox-mobile") : d(document.body, "glightbox-mobile"),
                            i || n) {
                            var r = !1;
                            if (s && (c(s, "description-bottom") || c(s, "description-top")) && !c(s, "gabsolute") && (r = !0),
                                n)
                                if (l <= 768)
                                    n.querySelector("img");
                                else if (r) {
                                    var a = s.offsetHeight
                                        , u = n.querySelector("img");
                                    u.setAttribute("style", "max-height: calc(100vh - ".concat(a, "px)")),
                                        s.setAttribute("style", "max-width: ".concat(u.offsetWidth, "px;"))
                                }
                            if (i) {
                                var g = O(this.settings.plyr.config, "ratio") ? this.settings.plyr.config.ratio : "";
                                if (!g) {
                                    var v = i.clientWidth
                                        , f = i.clientHeight
                                        , p = v / f;
                                    g = "".concat(v / p, ":").concat(f / p)
                                }
                                var m = g.split(":")
                                    , x = this.settings.videosWidth
                                    , b = this.settings.videosWidth
                                    , S = (b = M(x) || -1 !== x.indexOf("px") ? parseInt(x) : -1 !== x.indexOf("vw") ? l * parseInt(x) / 100 : -1 !== x.indexOf("vh") ? o * parseInt(x) / 100 : -1 !== x.indexOf("%") ? l * parseInt(x) / 100 : parseInt(i.clientWidth)) / (parseInt(m[0]) / parseInt(m[1]));
                                if (S = Math.floor(S),
                                    r && (o -= s.offsetHeight),
                                    b > l || S > o || o < S && l > b) {
                                    var w = i.offsetWidth
                                        , T = i.offsetHeight
                                        , C = o / T
                                        , k = {
                                            width: w * C,
                                            height: T * C
                                        };
                                    i.parentNode.setAttribute("style", "max-width: ".concat(k.width, "px")),
                                        r && s.setAttribute("style", "max-width: ".concat(k.width, "px;"))
                                } else
                                    i.parentNode.style.maxWidth = "".concat(x),
                                        r && s.setAttribute("style", "max-width: ".concat(x, ";"))
                            }
                        }
                    }
                }
            }, {
                key: "reload",
                value: function () {
                    this.init()
                }
            }, {
                key: "updateNavigationClasses",
                value: function () {
                    var e = this.loop();
                    d(this.nextButton, "disabled"),
                        d(this.prevButton, "disabled"),
                        0 == this.index && this.elements.length - 1 == 0 ? (h(this.prevButton, "disabled"),
                            h(this.nextButton, "disabled")) : 0 !== this.index || e ? this.index !== this.elements.length - 1 || e || h(this.nextButton, "disabled") : h(this.prevButton, "disabled")
                }
            }, {
                key: "loop",
                value: function () {
                    var e = O(this.settings, "loopAtEnd") ? this.settings.loopAtEnd : null;
                    return e = O(this.settings, "loop") ? this.settings.loop : e,
                        e
                }
            }, {
                key: "close",
                value: function () {
                    var e = this;
                    if (!this.lightboxOpen) {
                        if (this.events) {
                            for (var t in this.events)
                                this.events.hasOwnProperty(t) && this.events[t].destroy();
                            this.events = null
                        }
                        return !1
                    }
                    if (this.closing)
                        return !1;
                    this.closing = !0,
                        this.slidePlayerPause(this.activeSlide),
                        this.fullElementsList && (this.elements = this.fullElementsList),
                        this.bodyHiddenChildElms.length && o(this.bodyHiddenChildElms, (function (e) {
                            e.removeAttribute("aria-hidden")
                        }
                        )),
                        h(this.modal, "glightbox-closing"),
                        g(this.overlay, "none" == this.settings.openEffect ? "none" : this.settings.cssEfects.fade.out),
                        g(this.activeSlide, this.settings.cssEfects[this.settings.closeEffect].out, (function () {
                            if (e.activeSlide = null,
                                e.prevActiveSlideIndex = null,
                                e.prevActiveSlide = null,
                                e.built = !1,
                                e.events) {
                                for (var t in e.events)
                                    e.events.hasOwnProperty(t) && e.events[t].destroy();
                                e.events = null
                            }
                            var i = document.body;
                            d(Q, "glightbox-open"),
                                d(i, "glightbox-open touching gdesc-open glightbox-touch glightbox-mobile gscrollbar-fixer"),
                                e.modal.parentNode.removeChild(e.modal),
                                e.trigger("close"),
                                T(e.settings.onClose) && e.settings.onClose();
                            var n = document.querySelector(".gcss-styles");
                            n && n.parentNode.removeChild(n),
                                e.lightboxOpen = !1,
                                e.closing = null
                        }
                        ))
                }
            }, {
                key: "destroy",
                value: function () {
                    this.close(),
                        this.clearAllEvents(),
                        this.baseEvents && this.baseEvents.destroy()
                }
            }, {
                key: "on",
                value: function (e, t) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    if (!e || !T(t))
                        throw new TypeError("Event name and callback must be defined");
                    this.apiEvents.push({
                        evt: e,
                        once: i,
                        callback: t
                    })
                }
            }, {
                key: "once",
                value: function (e, t) {
                    this.on(e, t, !0)
                }
            }, {
                key: "trigger",
                value: function (e) {
                    var t = this
                        , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
                        , n = [];
                    o(this.apiEvents, (function (t, s) {
                        var l = t.evt
                            , o = t.once
                            , r = t.callback;
                        l == e && (r(i),
                            o && n.push(s))
                    }
                    )),
                        n.length && o(n, (function (e) {
                            return t.apiEvents.splice(e, 1)
                        }
                        ))
                }
            }, {
                key: "clearAllEvents",
                value: function () {
                    this.apiEvents.splice(0, this.apiEvents.length)
                }
            }, {
                key: "version",
                value: function () {
                    return "3.1.1"
                }
            }]),
                e
        }();
    return function () {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
            , t = new te(e);
        return t.init(),
            t
    }
}
));


/* flatpickr v4.6.9,, @license MIT */
!function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).flatpickr = t()
}(this, (function () {
    "use strict";
    var e = function () {
        return (e = Object.assign || function (e) {
            for (var t, n = 1, a = arguments.length; n < a; n++)
                for (var i in t = arguments[n])
                    Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
            return e
        }
        ).apply(this, arguments)
    };
    function t() {
        for (var e = 0, t = 0, n = arguments.length; t < n; t++)
            e += arguments[t].length;
        var a = Array(e)
            , i = 0;
        for (t = 0; t < n; t++)
            for (var o = arguments[t], r = 0, l = o.length; r < l; r++,
                i++)
                a[i] = o[r];
        return a
    }
    var n = ["onChange", "onClose", "onDayCreate", "onDestroy", "onKeyDown", "onMonthChange", "onOpen", "onParseConfig", "onReady", "onValueUpdate", "onYearChange", "onPreCalendarPosition"]
        , a = {
            _disable: [],
            allowInput: !1,
            allowInvalidPreload: !1,
            altFormat: "F j, Y",
            altInput: !1,
            altInputClass: "form-control input",
            animate: "object" == typeof window && -1 === window.navigator.userAgent.indexOf("MSIE"),
            ariaDateFormat: "F j, Y",
            autoFillDefaultTime: !0,
            clickOpens: !0,
            closeOnSelect: !0,
            conjunction: ", ",
            dateFormat: "Y-m-d",
            defaultHour: 12,
            defaultMinute: 0,
            defaultSeconds: 0,
            disable: [],
            disableMobile: !1,
            enableSeconds: !1,
            enableTime: !1,
            errorHandler: function (e) {
                return "undefined" != typeof console && console.warn(e)
            },
            getWeek: function (e) {
                var t = new Date(e.getTime());
                t.setHours(0, 0, 0, 0),
                    t.setDate(t.getDate() + 3 - (t.getDay() + 6) % 7);
                var n = new Date(t.getFullYear(), 0, 4);
                return 1 + Math.round(((t.getTime() - n.getTime()) / 864e5 - 3 + (n.getDay() + 6) % 7) / 7)
            },
            hourIncrement: 1,
            ignoredFocusElements: [],
            inline: !1,
            locale: "default",
            minuteIncrement: 5,
            mode: "single",
            monthSelectorType: "dropdown",
            nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
            noCalendar: !1,
            now: new Date,
            onChange: [],
            onClose: [],
            onDayCreate: [],
            onDestroy: [],
            onKeyDown: [],
            onMonthChange: [],
            onOpen: [],
            onParseConfig: [],
            onReady: [],
            onValueUpdate: [],
            onYearChange: [],
            onPreCalendarPosition: [],
            plugins: [],
            position: "auto",
            positionElement: void 0,
            prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
            shorthandCurrentMonth: !1,
            showMonths: 1,
            static: !1,
            time_24hr: !1,
            weekNumbers: !1,
            wrap: !1
        }
        , i = {
            weekdays: {
                shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
            },
            months: {
                shorthand: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                longhand: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
            },
            daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
            firstDayOfWeek: 0,
            ordinal: function (e) {
                var t = e % 100;
                if (t > 3 && t < 21)
                    return "th";
                switch (t % 10) {
                    case 1:
                        return "st";
                    case 2:
                        return "nd";
                    case 3:
                        return "rd";
                    default:
                        return "th"
                }
            },
            rangeSeparator: " to ",
            weekAbbreviation: "Wk",
            scrollTitle: "Scroll to increment",
            toggleTitle: "Click to toggle",
            amPM: ["AM", "PM"],
            yearAriaLabel: "Year",
            monthAriaLabel: "Month",
            hourAriaLabel: "Hour",
            minuteAriaLabel: "Minute",
            time_24hr: !1
        }
        , o = function (e, t) {
            return void 0 === t && (t = 2),
                ("000" + e).slice(-1 * t)
        }
        , r = function (e) {
            return !0 === e ? 1 : 0
        };
    function l(e, t) {
        var n;
        return function () {
            var a = this;
            clearTimeout(n),
                n = setTimeout((function () {
                    return e.apply(a, arguments)
                }
                ), t)
        }
    }
    var c = function (e) {
        return e instanceof Array ? e : [e]
    };
    function d(e, t, n) {
        if (!0 === n)
            return e.classList.add(t);
        e.classList.remove(t)
    }
    function s(e, t, n) {
        var a = window.document.createElement(e);
        return t = t || "",
            n = n || "",
            a.className = t,
            void 0 !== n && (a.textContent = n),
            a
    }
    function u(e) {
        for (; e.firstChild;)
            e.removeChild(e.firstChild)
    }
    function f(e, t) {
        return t(e) ? e : e.parentNode ? f(e.parentNode, t) : void 0
    }
    function m(e, t) {
        var n = s("div", "numInputWrapper")
            , a = s("input", "numInput " + e)
            , i = s("span", "arrowUp")
            , o = s("span", "arrowDown");
        if (-1 === navigator.userAgent.indexOf("MSIE 9.0") ? a.type = "number" : (a.type = "text",
            a.pattern = "\\d*"),
            void 0 !== t)
            for (var r in t)
                a.setAttribute(r, t[r]);
        return n.appendChild(a),
            n.appendChild(i),
            n.appendChild(o),
            n
    }
    function g(e) {
        try {
            return "function" == typeof e.composedPath ? e.composedPath()[0] : e.target
        } catch (t) {
            return e.target
        }
    }
    var p = function () { }
        , h = function (e, t, n) {
            return n.months[t ? "shorthand" : "longhand"][e]
        }
        , v = {
            D: p,
            F: function (e, t, n) {
                e.setMonth(n.months.longhand.indexOf(t))
            },
            G: function (e, t) {
                e.setHours(parseFloat(t))
            },
            H: function (e, t) {
                e.setHours(parseFloat(t))
            },
            J: function (e, t) {
                e.setDate(parseFloat(t))
            },
            K: function (e, t, n) {
                e.setHours(e.getHours() % 12 + 12 * r(new RegExp(n.amPM[1], "i").test(t)))
            },
            M: function (e, t, n) {
                e.setMonth(n.months.shorthand.indexOf(t))
            },
            S: function (e, t) {
                e.setSeconds(parseFloat(t))
            },
            U: function (e, t) {
                return new Date(1e3 * parseFloat(t))
            },
            W: function (e, t, n) {
                var a = parseInt(t)
                    , i = new Date(e.getFullYear(), 0, 2 + 7 * (a - 1), 0, 0, 0, 0);
                return i.setDate(i.getDate() - i.getDay() + n.firstDayOfWeek),
                    i
            },
            Y: function (e, t) {
                e.setFullYear(parseFloat(t))
            },
            Z: function (e, t) {
                return new Date(t)
            },
            d: function (e, t) {
                e.setDate(parseFloat(t))
            },
            h: function (e, t) {
                e.setHours(parseFloat(t))
            },
            i: function (e, t) {
                e.setMinutes(parseFloat(t))
            },
            j: function (e, t) {
                e.setDate(parseFloat(t))
            },
            l: p,
            m: function (e, t) {
                e.setMonth(parseFloat(t) - 1)
            },
            n: function (e, t) {
                e.setMonth(parseFloat(t) - 1)
            },
            s: function (e, t) {
                e.setSeconds(parseFloat(t))
            },
            u: function (e, t) {
                return new Date(parseFloat(t))
            },
            w: p,
            y: function (e, t) {
                e.setFullYear(2e3 + parseFloat(t))
            }
        }
        , D = {
            D: "(\\w+)",
            F: "(\\w+)",
            G: "(\\d\\d|\\d)",
            H: "(\\d\\d|\\d)",
            J: "(\\d\\d|\\d)\\w+",
            K: "",
            M: "(\\w+)",
            S: "(\\d\\d|\\d)",
            U: "(.+)",
            W: "(\\d\\d|\\d)",
            Y: "(\\d{4})",
            Z: "(.+)",
            d: "(\\d\\d|\\d)",
            h: "(\\d\\d|\\d)",
            i: "(\\d\\d|\\d)",
            j: "(\\d\\d|\\d)",
            l: "(\\w+)",
            m: "(\\d\\d|\\d)",
            n: "(\\d\\d|\\d)",
            s: "(\\d\\d|\\d)",
            u: "(.+)",
            w: "(\\d\\d|\\d)",
            y: "(\\d{2})"
        }
        , w = {
            Z: function (e) {
                return e.toISOString()
            },
            D: function (e, t, n) {
                return t.weekdays.shorthand[w.w(e, t, n)]
            },
            F: function (e, t, n) {
                return h(w.n(e, t, n) - 1, !1, t)
            },
            G: function (e, t, n) {
                return o(w.h(e, t, n))
            },
            H: function (e) {
                return o(e.getHours())
            },
            J: function (e, t) {
                return void 0 !== t.ordinal ? e.getDate() + t.ordinal(e.getDate()) : e.getDate()
            },
            K: function (e, t) {
                return t.amPM[r(e.getHours() > 11)]
            },
            M: function (e, t) {
                return h(e.getMonth(), !0, t)
            },
            S: function (e) {
                return o(e.getSeconds())
            },
            U: function (e) {
                return e.getTime() / 1e3
            },
            W: function (e, t, n) {
                return n.getWeek(e)
            },
            Y: function (e) {
                return o(e.getFullYear(), 4)
            },
            d: function (e) {
                return o(e.getDate())
            },
            h: function (e) {
                return e.getHours() % 12 ? e.getHours() % 12 : 12
            },
            i: function (e) {
                return o(e.getMinutes())
            },
            j: function (e) {
                return e.getDate()
            },
            l: function (e, t) {
                return t.weekdays.longhand[e.getDay()]
            },
            m: function (e) {
                return o(e.getMonth() + 1)
            },
            n: function (e) {
                return e.getMonth() + 1
            },
            s: function (e) {
                return e.getSeconds()
            },
            u: function (e) {
                return e.getTime()
            },
            w: function (e) {
                return e.getDay()
            },
            y: function (e) {
                return String(e.getFullYear()).substring(2)
            }
        }
        , b = function (e) {
            var t = e.config
                , n = void 0 === t ? a : t
                , o = e.l10n
                , r = void 0 === o ? i : o
                , l = e.isMobile
                , c = void 0 !== l && l;
            return function (e, t, a) {
                var i = a || r;
                return void 0 === n.formatDate || c ? t.split("").map((function (t, a, o) {
                    return w[t] && "\\" !== o[a - 1] ? w[t](e, i, n) : "\\" !== t ? t : ""
                }
                )).join("") : n.formatDate(e, t, i)
            }
        }
        , C = function (e) {
            var t = e.config
                , n = void 0 === t ? a : t
                , o = e.l10n
                , r = void 0 === o ? i : o;
            return function (e, t, i, o) {
                if (0 === e || e) {
                    var l, c = o || r, d = e;
                    if (e instanceof Date)
                        l = new Date(e.getTime());
                    else if ("string" != typeof e && void 0 !== e.toFixed)
                        l = new Date(e);
                    else if ("string" == typeof e) {
                        var s = t || (n || a).dateFormat
                            , u = String(e).trim();
                        if ("today" === u)
                            l = new Date,
                                i = !0;
                        else if (/Z$/.test(u) || /GMT$/.test(u))
                            l = new Date(e);
                        else if (n && n.parseDate)
                            l = n.parseDate(e, s);
                        else {
                            l = n && n.noCalendar ? new Date((new Date).setHours(0, 0, 0, 0)) : new Date((new Date).getFullYear(), 0, 1, 0, 0, 0, 0);
                            for (var f = void 0, m = [], g = 0, p = 0, h = ""; g < s.length; g++) {
                                var w = s[g]
                                    , b = "\\" === w
                                    , C = "\\" === s[g - 1] || b;
                                if (D[w] && !C) {
                                    h += D[w];
                                    var M = new RegExp(h).exec(e);
                                    M && (f = !0) && m["Y" !== w ? "push" : "unshift"]({
                                        fn: v[w],
                                        val: M[++p]
                                    })
                                } else
                                    b || (h += ".");
                                m.forEach((function (e) {
                                    var t = e.fn
                                        , n = e.val;
                                    return l = t(l, n, c) || l
                                }
                                ))
                            }
                            l = f ? l : void 0
                        }
                    }
                    if (l instanceof Date && !isNaN(l.getTime()))
                        return !0 === i && l.setHours(0, 0, 0, 0),
                            l;
                    n.errorHandler(new Error("Invalid date provided: " + d))
                }
            }
        };
    function M(e, t, n) {
        return void 0 === n && (n = !0),
            !1 !== n ? new Date(e.getTime()).setHours(0, 0, 0, 0) - new Date(t.getTime()).setHours(0, 0, 0, 0) : e.getTime() - t.getTime()
    }
    var y = 864e5;
    function x(e) {
        var t = e.defaultHour
            , n = e.defaultMinute
            , a = e.defaultSeconds;
        if (void 0 !== e.minDate) {
            var i = e.minDate.getHours()
                , o = e.minDate.getMinutes()
                , r = e.minDate.getSeconds();
            t < i && (t = i),
                t === i && n < o && (n = o),
                t === i && n === o && a < r && (a = e.minDate.getSeconds())
        }
        if (void 0 !== e.maxDate) {
            var l = e.maxDate.getHours()
                , c = e.maxDate.getMinutes();
            (t = Math.min(t, l)) === l && (n = Math.min(c, n)),
                t === l && n === c && (a = e.maxDate.getSeconds())
        }
        return {
            hours: t,
            minutes: n,
            seconds: a
        }
    }
    "function" != typeof Object.assign && (Object.assign = function (e) {
        for (var t = [], n = 1; n < arguments.length; n++)
            t[n - 1] = arguments[n];
        if (!e)
            throw TypeError("Cannot convert undefined or null to object");
        for (var a = function (t) {
            t && Object.keys(t).forEach((function (n) {
                return e[n] = t[n]
            }
            ))
        }, i = 0, o = t; i < o.length; i++) {
            var r = o[i];
            a(r)
        }
        return e
    }
    );
    function E(p, v) {
        var w = {
            config: e(e({}, a), T.defaultConfig),
            l10n: i
        };
        function E(e) {
            return e.bind(w)
        }
        function k() {
            var e = w.config;
            !1 === e.weekNumbers && 1 === e.showMonths || !0 !== e.noCalendar && window.requestAnimationFrame((function () {
                if (void 0 !== w.calendarContainer && (w.calendarContainer.style.visibility = "hidden",
                    w.calendarContainer.style.display = "block"),
                    void 0 !== w.daysContainer) {
                    var t = (w.days.offsetWidth + 1) * e.showMonths;
                    w.daysContainer.style.width = t + "px",
                        w.calendarContainer.style.width = t + (void 0 !== w.weekWrapper ? w.weekWrapper.offsetWidth : 0) + "px",
                        w.calendarContainer.style.removeProperty("visibility"),
                        w.calendarContainer.style.removeProperty("display")
                }
            }
            ))
        }
        function I(e) {
            if (0 === w.selectedDates.length) {
                var t = void 0 === w.config.minDate || M(new Date, w.config.minDate) >= 0 ? new Date : new Date(w.config.minDate.getTime())
                    , n = x(w.config);
                t.setHours(n.hours, n.minutes, n.seconds, t.getMilliseconds()),
                    w.selectedDates = [t],
                    w.latestSelectedDateObj = t
            }
            void 0 !== e && "blur" !== e.type && function (e) {
                e.preventDefault();
                var t = "keydown" === e.type
                    , n = g(e)
                    , a = n;
                void 0 !== w.amPM && n === w.amPM && (w.amPM.textContent = w.l10n.amPM[r(w.amPM.textContent === w.l10n.amPM[0])]);
                var i = parseFloat(a.getAttribute("min"))
                    , l = parseFloat(a.getAttribute("max"))
                    , c = parseFloat(a.getAttribute("step"))
                    , d = parseInt(a.value, 10)
                    , s = e.delta || (t ? 38 === e.which ? 1 : -1 : 0)
                    , u = d + c * s;
                if (void 0 !== a.value && 2 === a.value.length) {
                    var f = a === w.hourElement
                        , m = a === w.minuteElement;
                    u < i ? (u = l + u + r(!f) + (r(f) && r(!w.amPM)),
                        m && j(void 0, -1, w.hourElement)) : u > l && (u = a === w.hourElement ? u - l - r(!w.amPM) : i,
                            m && j(void 0, 1, w.hourElement)),
                        w.amPM && f && (1 === c ? u + d === 23 : Math.abs(u - d) > c) && (w.amPM.textContent = w.l10n.amPM[r(w.amPM.textContent === w.l10n.amPM[0])]),
                        a.value = o(u)
                }
            }(e);
            var a = w._input.value;
            S(),
                be(),
                w._input.value !== a && w._debouncedChange()
        }
        function S() {
            if (void 0 !== w.hourElement && void 0 !== w.minuteElement) {
                var e, t, n = (parseInt(w.hourElement.value.slice(-2), 10) || 0) % 24, a = (parseInt(w.minuteElement.value, 10) || 0) % 60, i = void 0 !== w.secondElement ? (parseInt(w.secondElement.value, 10) || 0) % 60 : 0;
                void 0 !== w.amPM && (e = n,
                    t = w.amPM.textContent,
                    n = e % 12 + 12 * r(t === w.l10n.amPM[1]));
                var o = void 0 !== w.config.minTime || w.config.minDate && w.minDateHasTime && w.latestSelectedDateObj && 0 === M(w.latestSelectedDateObj, w.config.minDate, !0);
                if (void 0 !== w.config.maxTime || w.config.maxDate && w.maxDateHasTime && w.latestSelectedDateObj && 0 === M(w.latestSelectedDateObj, w.config.maxDate, !0)) {
                    var l = void 0 !== w.config.maxTime ? w.config.maxTime : w.config.maxDate;
                    (n = Math.min(n, l.getHours())) === l.getHours() && (a = Math.min(a, l.getMinutes())),
                        a === l.getMinutes() && (i = Math.min(i, l.getSeconds()))
                }
                if (o) {
                    var c = void 0 !== w.config.minTime ? w.config.minTime : w.config.minDate;
                    (n = Math.max(n, c.getHours())) === c.getHours() && a < c.getMinutes() && (a = c.getMinutes()),
                        a === c.getMinutes() && (i = Math.max(i, c.getSeconds()))
                }
                O(n, a, i)
            }
        }
        function _(e) {
            var t = e || w.latestSelectedDateObj;
            t && O(t.getHours(), t.getMinutes(), t.getSeconds())
        }
        function O(e, t, n) {
            void 0 !== w.latestSelectedDateObj && w.latestSelectedDateObj.setHours(e % 24, t, n || 0, 0),
                w.hourElement && w.minuteElement && !w.isMobile && (w.hourElement.value = o(w.config.time_24hr ? e : (12 + e) % 12 + 12 * r(e % 12 == 0)),
                    w.minuteElement.value = o(t),
                    void 0 !== w.amPM && (w.amPM.textContent = w.l10n.amPM[r(e >= 12)]),
                    void 0 !== w.secondElement && (w.secondElement.value = o(n)))
        }
        function F(e) {
            var t = g(e)
                , n = parseInt(t.value) + (e.delta || 0);
            (n / 1e3 > 1 || "Enter" === e.key && !/[^\d]/.test(n.toString())) && Q(n)
        }
        function A(e, t, n, a) {
            return t instanceof Array ? t.forEach((function (t) {
                return A(e, t, n, a)
            }
            )) : e instanceof Array ? e.forEach((function (e) {
                return A(e, t, n, a)
            }
            )) : (e.addEventListener(t, n, a),
                void w._handlers.push({
                    remove: function () {
                        return e.removeEventListener(t, n)
                    }
                }))
        }
        function N() {
            pe("onChange")
        }
        function P(e, t) {
            var n = void 0 !== e ? w.parseDate(e) : w.latestSelectedDateObj || (w.config.minDate && w.config.minDate > w.now ? w.config.minDate : w.config.maxDate && w.config.maxDate < w.now ? w.config.maxDate : w.now)
                , a = w.currentYear
                , i = w.currentMonth;
            try {
                void 0 !== n && (w.currentYear = n.getFullYear(),
                    w.currentMonth = n.getMonth())
            } catch (e) {
                e.message = "Invalid date supplied: " + n,
                    w.config.errorHandler(e)
            }
            t && w.currentYear !== a && (pe("onYearChange"),
                K()),
                !t || w.currentYear === a && w.currentMonth === i || pe("onMonthChange"),
                w.redraw()
        }
        function Y(e) {
            var t = g(e);
            ~t.className.indexOf("arrow") && j(e, t.classList.contains("arrowUp") ? 1 : -1)
        }
        function j(e, t, n) {
            var a = e && g(e)
                , i = n || a && a.parentNode && a.parentNode.firstChild
                , o = he("increment");
            o.delta = t,
                i && i.dispatchEvent(o)
        }
        function H(e, t, n, a) {
            var i = X(t, !0)
                , o = s("span", "flatpickr-day " + e, t.getDate().toString());
            return o.dateObj = t,
                o.$i = a,
                o.setAttribute("aria-label", w.formatDate(t, w.config.ariaDateFormat)),
                -1 === e.indexOf("hidden") && 0 === M(t, w.now) && (w.todayDateElem = o,
                    o.classList.add("today"),
                    o.setAttribute("aria-current", "date")),
                i ? (o.tabIndex = -1,
                    ve(t) && (o.classList.add("selected"),
                        w.selectedDateElem = o,
                        "range" === w.config.mode && (d(o, "startRange", w.selectedDates[0] && 0 === M(t, w.selectedDates[0], !0)),
                            d(o, "endRange", w.selectedDates[1] && 0 === M(t, w.selectedDates[1], !0)),
                            "nextMonthDay" === e && o.classList.add("inRange")))) : o.classList.add("flatpickr-disabled"),
                "range" === w.config.mode && function (e) {
                    return !("range" !== w.config.mode || w.selectedDates.length < 2) && (M(e, w.selectedDates[0]) >= 0 && M(e, w.selectedDates[1]) <= 0)
                }(t) && !ve(t) && o.classList.add("inRange"),
                w.weekNumbers && 1 === w.config.showMonths && "prevMonthDay" !== e && n % 7 == 1 && w.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + w.config.getWeek(t) + "</span>"),
                pe("onDayCreate", o),
                o
        }
        function L(e) {
            e.focus(),
                "range" === w.config.mode && ae(e)
        }
        function W(e) {
            for (var t = e > 0 ? 0 : w.config.showMonths - 1, n = e > 0 ? w.config.showMonths : -1, a = t; a != n; a += e)
                for (var i = w.daysContainer.children[a], o = e > 0 ? 0 : i.children.length - 1, r = e > 0 ? i.children.length : -1, l = o; l != r; l += e) {
                    var c = i.children[l];
                    if (-1 === c.className.indexOf("hidden") && X(c.dateObj))
                        return c
                }
        }
        function R(e, t) {
            var n = ee(document.activeElement || document.body)
                , a = void 0 !== e ? e : n ? document.activeElement : void 0 !== w.selectedDateElem && ee(w.selectedDateElem) ? w.selectedDateElem : void 0 !== w.todayDateElem && ee(w.todayDateElem) ? w.todayDateElem : W(t > 0 ? 1 : -1);
            void 0 === a ? w._input.focus() : n ? function (e, t) {
                for (var n = -1 === e.className.indexOf("Month") ? e.dateObj.getMonth() : w.currentMonth, a = t > 0 ? w.config.showMonths : -1, i = t > 0 ? 1 : -1, o = n - w.currentMonth; o != a; o += i)
                    for (var r = w.daysContainer.children[o], l = n - w.currentMonth === o ? e.$i + t : t < 0 ? r.children.length - 1 : 0, c = r.children.length, d = l; d >= 0 && d < c && d != (t > 0 ? c : -1); d += i) {
                        var s = r.children[d];
                        if (-1 === s.className.indexOf("hidden") && X(s.dateObj) && Math.abs(e.$i - d) >= Math.abs(t))
                            return L(s)
                    }
                w.changeMonth(i),
                    R(W(i), 0)
            }(a, t) : L(a)
        }
        function B(e, t) {
            for (var n = (new Date(e, t, 1).getDay() - w.l10n.firstDayOfWeek + 7) % 7, a = w.utils.getDaysInMonth((t - 1 + 12) % 12, e), i = w.utils.getDaysInMonth(t, e), o = window.document.createDocumentFragment(), r = w.config.showMonths > 1, l = r ? "prevMonthDay hidden" : "prevMonthDay", c = r ? "nextMonthDay hidden" : "nextMonthDay", d = a + 1 - n, u = 0; d <= a; d++,
                u++)
                o.appendChild(H(l, new Date(e, t - 1, d), d, u));
            for (d = 1; d <= i; d++,
                u++)
                o.appendChild(H("", new Date(e, t, d), d, u));
            for (var f = i + 1; f <= 42 - n && (1 === w.config.showMonths || u % 7 != 0); f++,
                u++)
                o.appendChild(H(c, new Date(e, t + 1, f % i), f, u));
            var m = s("div", "dayContainer");
            return m.appendChild(o),
                m
        }
        function J() {
            if (void 0 !== w.daysContainer) {
                u(w.daysContainer),
                    w.weekNumbers && u(w.weekNumbers);
                for (var e = document.createDocumentFragment(), t = 0; t < w.config.showMonths; t++) {
                    var n = new Date(w.currentYear, w.currentMonth, 1);
                    n.setMonth(w.currentMonth + t),
                        e.appendChild(B(n.getFullYear(), n.getMonth()))
                }
                w.daysContainer.appendChild(e),
                    w.days = w.daysContainer.firstChild,
                    "range" === w.config.mode && 1 === w.selectedDates.length && ae()
            }
        }
        function K() {
            if (!(w.config.showMonths > 1 || "dropdown" !== w.config.monthSelectorType)) {
                var e = function (e) {
                    return !(void 0 !== w.config.minDate && w.currentYear === w.config.minDate.getFullYear() && e < w.config.minDate.getMonth()) && !(void 0 !== w.config.maxDate && w.currentYear === w.config.maxDate.getFullYear() && e > w.config.maxDate.getMonth())
                };
                w.monthsDropdownContainer.tabIndex = -1,
                    w.monthsDropdownContainer.innerHTML = "";
                for (var t = 0; t < 12; t++)
                    if (e(t)) {
                        var n = s("option", "flatpickr-monthDropdown-month");
                        n.value = new Date(w.currentYear, t).getMonth().toString(),
                            n.textContent = h(t, w.config.shorthandCurrentMonth, w.l10n),
                            n.tabIndex = -1,
                            w.currentMonth === t && (n.selected = !0),
                            w.monthsDropdownContainer.appendChild(n)
                    }
            }
        }
        function U() {
            var e, t = s("div", "flatpickr-month"), n = window.document.createDocumentFragment();
            w.config.showMonths > 1 || "static" === w.config.monthSelectorType ? e = s("span", "cur-month") : (w.monthsDropdownContainer = s("select", "flatpickr-monthDropdown-months"),
                w.monthsDropdownContainer.setAttribute("aria-label", w.l10n.monthAriaLabel),
                A(w.monthsDropdownContainer, "change", (function (e) {
                    var t = g(e)
                        , n = parseInt(t.value, 10);
                    w.changeMonth(n - w.currentMonth),
                        pe("onMonthChange")
                }
                )),
                K(),
                e = w.monthsDropdownContainer);
            var a = m("cur-year", {
                tabindex: "-1"
            })
                , i = a.getElementsByTagName("input")[0];
            i.setAttribute("aria-label", w.l10n.yearAriaLabel),
                w.config.minDate && i.setAttribute("min", w.config.minDate.getFullYear().toString()),
                w.config.maxDate && (i.setAttribute("max", w.config.maxDate.getFullYear().toString()),
                    i.disabled = !!w.config.minDate && w.config.minDate.getFullYear() === w.config.maxDate.getFullYear());
            var o = s("div", "flatpickr-current-month");
            return o.appendChild(e),
                o.appendChild(a),
                n.appendChild(o),
                t.appendChild(n),
            {
                container: t,
                yearElement: i,
                monthElement: e
            }
        }
        function q() {
            u(w.monthNav),
                w.monthNav.appendChild(w.prevMonthNav),
                w.config.showMonths && (w.yearElements = [],
                    w.monthElements = []);
            for (var e = w.config.showMonths; e--;) {
                var t = U();
                w.yearElements.push(t.yearElement),
                    w.monthElements.push(t.monthElement),
                    w.monthNav.appendChild(t.container)
            }
            w.monthNav.appendChild(w.nextMonthNav)
        }
        function $() {
            w.weekdayContainer ? u(w.weekdayContainer) : w.weekdayContainer = s("div", "flatpickr-weekdays");
            for (var e = w.config.showMonths; e--;) {
                var t = s("div", "flatpickr-weekdaycontainer");
                w.weekdayContainer.appendChild(t)
            }
            return z(),
                w.weekdayContainer
        }
        function z() {
            if (w.weekdayContainer) {
                var e = w.l10n.firstDayOfWeek
                    , n = t(w.l10n.weekdays.shorthand);
                e > 0 && e < n.length && (n = t(n.splice(e, n.length), n.splice(0, e)));
                for (var a = w.config.showMonths; a--;)
                    w.weekdayContainer.children[a].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + n.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      "
            }
        }
        function G(e, t) {
            void 0 === t && (t = !0);
            var n = t ? e : e - w.currentMonth;
            n < 0 && !0 === w._hidePrevMonthArrow || n > 0 && !0 === w._hideNextMonthArrow || (w.currentMonth += n,
                (w.currentMonth < 0 || w.currentMonth > 11) && (w.currentYear += w.currentMonth > 11 ? 1 : -1,
                    w.currentMonth = (w.currentMonth + 12) % 12,
                    pe("onYearChange"),
                    K()),
                J(),
                pe("onMonthChange"),
                De())
        }
        function V(e) {
            return !(!w.config.appendTo || !w.config.appendTo.contains(e)) || w.calendarContainer.contains(e)
        }
        function Z(e) {
            if (w.isOpen && !w.config.inline) {
                var t = g(e)
                    , n = V(t)
                    , a = t === w.input || t === w.altInput || w.element.contains(t) || e.path && e.path.indexOf && (~e.path.indexOf(w.input) || ~e.path.indexOf(w.altInput))
                    , i = "blur" === e.type ? a && e.relatedTarget && !V(e.relatedTarget) : !a && !n && !V(e.relatedTarget)
                    , o = !w.config.ignoredFocusElements.some((function (e) {
                        return e.contains(t)
                    }
                    ));
                i && o && (void 0 !== w.timeContainer && void 0 !== w.minuteElement && void 0 !== w.hourElement && "" !== w.input.value && void 0 !== w.input.value && I(),
                    w.close(),
                    w.config && "range" === w.config.mode && 1 === w.selectedDates.length && (w.clear(!1),
                        w.redraw()))
            }
        }
        function Q(e) {
            if (!(!e || w.config.minDate && e < w.config.minDate.getFullYear() || w.config.maxDate && e > w.config.maxDate.getFullYear())) {
                var t = e
                    , n = w.currentYear !== t;
                w.currentYear = t || w.currentYear,
                    w.config.maxDate && w.currentYear === w.config.maxDate.getFullYear() ? w.currentMonth = Math.min(w.config.maxDate.getMonth(), w.currentMonth) : w.config.minDate && w.currentYear === w.config.minDate.getFullYear() && (w.currentMonth = Math.max(w.config.minDate.getMonth(), w.currentMonth)),
                    n && (w.redraw(),
                        pe("onYearChange"),
                        K())
            }
        }
        function X(e, t) {
            var n;
            void 0 === t && (t = !0);
            var a = w.parseDate(e, void 0, t);
            if (w.config.minDate && a && M(a, w.config.minDate, void 0 !== t ? t : !w.minDateHasTime) < 0 || w.config.maxDate && a && M(a, w.config.maxDate, void 0 !== t ? t : !w.maxDateHasTime) > 0)
                return !1;
            if (!w.config.enable && 0 === w.config.disable.length)
                return !0;
            if (void 0 === a)
                return !1;
            for (var i = !!w.config.enable, o = null !== (n = w.config.enable) && void 0 !== n ? n : w.config.disable, r = 0, l = void 0; r < o.length; r++) {
                if ("function" == typeof (l = o[r]) && l(a))
                    return i;
                if (l instanceof Date && void 0 !== a && l.getTime() === a.getTime())
                    return i;
                if ("string" == typeof l) {
                    var c = w.parseDate(l, void 0, !0);
                    return c && c.getTime() === a.getTime() ? i : !i
                }
                if ("object" == typeof l && void 0 !== a && l.from && l.to && a.getTime() >= l.from.getTime() && a.getTime() <= l.to.getTime())
                    return i
            }
            return !i
        }
        function ee(e) {
            return void 0 !== w.daysContainer && (-1 === e.className.indexOf("hidden") && -1 === e.className.indexOf("flatpickr-disabled") && w.daysContainer.contains(e))
        }
        function te(e) {
            !(e.target === w._input) || !(w.selectedDates.length > 0 || w._input.value.length > 0) || e.relatedTarget && V(e.relatedTarget) || w.setDate(w._input.value, !0, e.target === w.altInput ? w.config.altFormat : w.config.dateFormat)
        }
        function ne(e) {
            var t = g(e)
                , n = w.config.wrap ? p.contains(t) : t === w._input
                , a = w.config.allowInput
                , i = w.isOpen && (!a || !n)
                , o = w.config.inline && n && !a;
            if (13 === e.keyCode && n) {
                if (a)
                    return w.setDate(w._input.value, !0, t === w.altInput ? w.config.altFormat : w.config.dateFormat),
                        t.blur();
                w.open()
            } else if (V(t) || i || o) {
                var r = !!w.timeContainer && w.timeContainer.contains(t);
                switch (e.keyCode) {
                    case 13:
                        r ? (e.preventDefault(),
                            I(),
                            se()) : ue(e);
                        break;
                    case 27:
                        e.preventDefault(),
                            se();
                        break;
                    case 8:
                    case 46:
                        n && !w.config.allowInput && (e.preventDefault(),
                            w.clear());
                        break;
                    case 37:
                    case 39:
                        if (r || n)
                            w.hourElement && w.hourElement.focus();
                        else if (e.preventDefault(),
                            void 0 !== w.daysContainer && (!1 === a || document.activeElement && ee(document.activeElement))) {
                            var l = 39 === e.keyCode ? 1 : -1;
                            e.ctrlKey ? (e.stopPropagation(),
                                G(l),
                                R(W(1), 0)) : R(void 0, l)
                        }
                        break;
                    case 38:
                    case 40:
                        e.preventDefault();
                        var c = 40 === e.keyCode ? 1 : -1;
                        w.daysContainer && void 0 !== t.$i || t === w.input || t === w.altInput ? e.ctrlKey ? (e.stopPropagation(),
                            Q(w.currentYear - c),
                            R(W(1), 0)) : r || R(void 0, 7 * c) : t === w.currentYearElement ? Q(w.currentYear - c) : w.config.enableTime && (!r && w.hourElement && w.hourElement.focus(),
                                I(e),
                                w._debouncedChange());
                        break;
                    case 9:
                        if (r) {
                            var d = [w.hourElement, w.minuteElement, w.secondElement, w.amPM].concat(w.pluginElements).filter((function (e) {
                                return e
                            }
                            ))
                                , s = d.indexOf(t);
                            if (-1 !== s) {
                                var u = d[s + (e.shiftKey ? -1 : 1)];
                                e.preventDefault(),
                                    (u || w._input).focus()
                            }
                        } else
                            !w.config.noCalendar && w.daysContainer && w.daysContainer.contains(t) && e.shiftKey && (e.preventDefault(),
                                w._input.focus())
                }
            }
            if (void 0 !== w.amPM && t === w.amPM)
                switch (e.key) {
                    case w.l10n.amPM[0].charAt(0):
                    case w.l10n.amPM[0].charAt(0).toLowerCase():
                        w.amPM.textContent = w.l10n.amPM[0],
                            S(),
                            be();
                        break;
                    case w.l10n.amPM[1].charAt(0):
                    case w.l10n.amPM[1].charAt(0).toLowerCase():
                        w.amPM.textContent = w.l10n.amPM[1],
                            S(),
                            be()
                }
            (n || V(t)) && pe("onKeyDown", e)
        }
        function ae(e) {
            if (1 === w.selectedDates.length && (!e || e.classList.contains("flatpickr-day") && !e.classList.contains("flatpickr-disabled"))) {
                for (var t = e ? e.dateObj.getTime() : w.days.firstElementChild.dateObj.getTime(), n = w.parseDate(w.selectedDates[0], void 0, !0).getTime(), a = Math.min(t, w.selectedDates[0].getTime()), i = Math.max(t, w.selectedDates[0].getTime()), o = !1, r = 0, l = 0, c = a; c < i; c += y)
                    X(new Date(c), !0) || (o = o || c > a && c < i,
                        c < n && (!r || c > r) ? r = c : c > n && (!l || c < l) && (l = c));
                for (var d = 0; d < w.config.showMonths; d++)
                    for (var s = w.daysContainer.children[d], u = function (a, i) {
                        var c, d, u, f = s.children[a], m = f.dateObj.getTime(), g = r > 0 && m < r || l > 0 && m > l;
                        return g ? (f.classList.add("notAllowed"),
                            ["inRange", "startRange", "endRange"].forEach((function (e) {
                                f.classList.remove(e)
                            }
                            )),
                            "continue") : o && !g ? "continue" : (["startRange", "inRange", "endRange", "notAllowed"].forEach((function (e) {
                                f.classList.remove(e)
                            }
                            )),
                                void (void 0 !== e && (e.classList.add(t <= w.selectedDates[0].getTime() ? "startRange" : "endRange"),
                                    n < t && m === n ? f.classList.add("startRange") : n > t && m === n && f.classList.add("endRange"),
                                    m >= r && (0 === l || m <= l) && (d = n,
                                        u = t,
                                        (c = m) > Math.min(d, u) && c < Math.max(d, u)) && f.classList.add("inRange"))))
                    }, f = 0, m = s.children.length; f < m; f++)
                        u(f)
            }
        }
        function ie() {
            !w.isOpen || w.config.static || w.config.inline || ce()
        }
        function oe(e) {
            return function (t) {
                var n = w.config["_" + e + "Date"] = w.parseDate(t, w.config.dateFormat)
                    , a = w.config["_" + ("min" === e ? "max" : "min") + "Date"];
                void 0 !== n && (w["min" === e ? "minDateHasTime" : "maxDateHasTime"] = n.getHours() > 0 || n.getMinutes() > 0 || n.getSeconds() > 0),
                    w.selectedDates && (w.selectedDates = w.selectedDates.filter((function (e) {
                        return X(e)
                    }
                    )),
                        w.selectedDates.length || "min" !== e || _(n),
                        be()),
                    w.daysContainer && (de(),
                        void 0 !== n ? w.currentYearElement[e] = n.getFullYear().toString() : w.currentYearElement.removeAttribute(e),
                        w.currentYearElement.disabled = !!a && void 0 !== n && a.getFullYear() === n.getFullYear())
            }
        }
        function re() {
            return w.config.wrap ? p.querySelector("[data-input]") : p
        }
        function le() {
            "object" != typeof w.config.locale && void 0 === T.l10ns[w.config.locale] && w.config.errorHandler(new Error("flatpickr: invalid locale " + w.config.locale)),
                w.l10n = e(e({}, T.l10ns.default), "object" == typeof w.config.locale ? w.config.locale : "default" !== w.config.locale ? T.l10ns[w.config.locale] : void 0),
                D.K = "(" + w.l10n.amPM[0] + "|" + w.l10n.amPM[1] + "|" + w.l10n.amPM[0].toLowerCase() + "|" + w.l10n.amPM[1].toLowerCase() + ")",
                void 0 === e(e({}, v), JSON.parse(JSON.stringify(p.dataset || {}))).time_24hr && void 0 === T.defaultConfig.time_24hr && (w.config.time_24hr = w.l10n.time_24hr),
                w.formatDate = b(w),
                w.parseDate = C({
                    config: w.config,
                    l10n: w.l10n
                })
        }
        function ce(e) {
            if ("function" != typeof w.config.position) {
                if (void 0 !== w.calendarContainer) {
                    pe("onPreCalendarPosition");
                    var t = e || w._positionElement
                        , n = Array.prototype.reduce.call(w.calendarContainer.children, (function (e, t) {
                            return e + t.offsetHeight
                        }
                        ), 0)
                        , a = w.calendarContainer.offsetWidth
                        , i = w.config.position.split(" ")
                        , o = i[0]
                        , r = i.length > 1 ? i[1] : null
                        , l = t.getBoundingClientRect()
                        , c = window.innerHeight - l.bottom
                        , s = "above" === o || "below" !== o && c < n && l.top > n
                        , u = window.pageYOffset + l.top + (s ? -n - 2 : t.offsetHeight + 2);
                    if (d(w.calendarContainer, "arrowTop", !s),
                        d(w.calendarContainer, "arrowBottom", s),
                        !w.config.inline) {
                        var f = window.pageXOffset + l.left
                            , m = !1
                            , g = !1;
                        "center" === r ? (f -= (a - l.width) / 2,
                            m = !0) : "right" === r && (f -= a - l.width,
                                g = !0),
                            d(w.calendarContainer, "arrowLeft", !m && !g),
                            d(w.calendarContainer, "arrowCenter", m),
                            d(w.calendarContainer, "arrowRight", g);
                        var p = window.document.body.offsetWidth - (window.pageXOffset + l.right)
                            , h = f + a > window.document.body.offsetWidth
                            , v = p + a > window.document.body.offsetWidth;
                        if (d(w.calendarContainer, "rightMost", h),
                            !w.config.static)
                            if (w.calendarContainer.style.top = u + "px",
                                h)
                                if (v) {
                                    var D = function () {
                                        for (var e = null, t = 0; t < document.styleSheets.length; t++) {
                                            var n = document.styleSheets[t];
                                            try {
                                                n.cssRules
                                            } catch (e) {
                                                continue
                                            }
                                            e = n;
                                            break
                                        }
                                        return null != e ? e : (a = document.createElement("style"),
                                            document.head.appendChild(a),
                                            a.sheet);
                                        var a
                                    }();
                                    if (void 0 === D)
                                        return;
                                    var b = window.document.body.offsetWidth
                                        , C = Math.max(0, b / 2 - a / 2)
                                        , M = D.cssRules.length
                                        , y = "{left:" + l.left + "px;right:auto;}";
                                    d(w.calendarContainer, "rightMost", !1),
                                        d(w.calendarContainer, "centerMost", !0),
                                        D.insertRule(".flatpickr-calendar.centerMost:before,.flatpickr-calendar.centerMost:after" + y, M),
                                        w.calendarContainer.style.left = C + "px",
                                        w.calendarContainer.style.right = "auto"
                                } else
                                    w.calendarContainer.style.left = "auto",
                                        w.calendarContainer.style.right = p + "px";
                            else
                                w.calendarContainer.style.left = f + "px",
                                    w.calendarContainer.style.right = "auto"
                    }
                }
            } else
                w.config.position(w, e)
        }
        function de() {
            w.config.noCalendar || w.isMobile || (K(),
                De(),
                J())
        }
        function se() {
            w._input.focus(),
                -1 !== window.navigator.userAgent.indexOf("MSIE") || void 0 !== navigator.msMaxTouchPoints ? setTimeout(w.close, 0) : w.close()
        }
        function ue(e) {
            e.preventDefault(),
                e.stopPropagation();
            var t = f(g(e), (function (e) {
                return e.classList && e.classList.contains("flatpickr-day") && !e.classList.contains("flatpickr-disabled") && !e.classList.contains("notAllowed")
            }
            ));
            if (void 0 !== t) {
                var n = t
                    , a = w.latestSelectedDateObj = new Date(n.dateObj.getTime())
                    , i = (a.getMonth() < w.currentMonth || a.getMonth() > w.currentMonth + w.config.showMonths - 1) && "range" !== w.config.mode;
                if (w.selectedDateElem = n,
                    "single" === w.config.mode)
                    w.selectedDates = [a];
                else if ("multiple" === w.config.mode) {
                    var o = ve(a);
                    o ? w.selectedDates.splice(parseInt(o), 1) : w.selectedDates.push(a)
                } else
                    "range" === w.config.mode && (2 === w.selectedDates.length && w.clear(!1, !1),
                        w.latestSelectedDateObj = a,
                        w.selectedDates.push(a),
                        0 !== M(a, w.selectedDates[0], !0) && w.selectedDates.sort((function (e, t) {
                            return e.getTime() - t.getTime()
                        }
                        )));
                if (S(),
                    i) {
                    var r = w.currentYear !== a.getFullYear();
                    w.currentYear = a.getFullYear(),
                        w.currentMonth = a.getMonth(),
                        r && (pe("onYearChange"),
                            K()),
                        pe("onMonthChange")
                }
                if (De(),
                    J(),
                    be(),
                    i || "range" === w.config.mode || 1 !== w.config.showMonths ? void 0 !== w.selectedDateElem && void 0 === w.hourElement && w.selectedDateElem && w.selectedDateElem.focus() : L(n),
                    void 0 !== w.hourElement && void 0 !== w.hourElement && w.hourElement.focus(),
                    w.config.closeOnSelect) {
                    var l = "single" === w.config.mode && !w.config.enableTime
                        , c = "range" === w.config.mode && 2 === w.selectedDates.length && !w.config.enableTime;
                    (l || c) && se()
                }
                N()
            }
        }
        w.parseDate = C({
            config: w.config,
            l10n: w.l10n
        }),
            w._handlers = [],
            w.pluginElements = [],
            w.loadedPlugins = [],
            w._bind = A,
            w._setHoursFromDate = _,
            w._positionCalendar = ce,
            w.changeMonth = G,
            w.changeYear = Q,
            w.clear = function (e, t) {
                void 0 === e && (e = !0);
                void 0 === t && (t = !0);
                w.input.value = "",
                    void 0 !== w.altInput && (w.altInput.value = "");
                void 0 !== w.mobileInput && (w.mobileInput.value = "");
                w.selectedDates = [],
                    w.latestSelectedDateObj = void 0,
                    !0 === t && (w.currentYear = w._initialDate.getFullYear(),
                        w.currentMonth = w._initialDate.getMonth());
                if (!0 === w.config.enableTime) {
                    var n = x(w.config)
                        , a = n.hours
                        , i = n.minutes
                        , o = n.seconds;
                    O(a, i, o)
                }
                w.redraw(),
                    e && pe("onChange")
            }
            ,
            w.close = function () {
                w.isOpen = !1,
                    w.isMobile || (void 0 !== w.calendarContainer && w.calendarContainer.classList.remove("open"),
                        void 0 !== w._input && w._input.classList.remove("active"));
                pe("onClose")
            }
            ,
            w._createElement = s,
            w.destroy = function () {
                void 0 !== w.config && pe("onDestroy");
                for (var e = w._handlers.length; e--;)
                    w._handlers[e].remove();
                if (w._handlers = [],
                    w.mobileInput)
                    w.mobileInput.parentNode && w.mobileInput.parentNode.removeChild(w.mobileInput),
                        w.mobileInput = void 0;
                else if (w.calendarContainer && w.calendarContainer.parentNode)
                    if (w.config.static && w.calendarContainer.parentNode) {
                        var t = w.calendarContainer.parentNode;
                        if (t.lastChild && t.removeChild(t.lastChild),
                            t.parentNode) {
                            for (; t.firstChild;)
                                t.parentNode.insertBefore(t.firstChild, t);
                            t.parentNode.removeChild(t)
                        }
                    } else
                        w.calendarContainer.parentNode.removeChild(w.calendarContainer);
                w.altInput && (w.input.type = "text",
                    w.altInput.parentNode && w.altInput.parentNode.removeChild(w.altInput),
                    delete w.altInput);
                w.input && (w.input.type = w.input._type,
                    w.input.classList.remove("flatpickr-input"),
                    w.input.removeAttribute("readonly"));
                ["_showTimeInput", "latestSelectedDateObj", "_hideNextMonthArrow", "_hidePrevMonthArrow", "__hideNextMonthArrow", "__hidePrevMonthArrow", "isMobile", "isOpen", "selectedDateElem", "minDateHasTime", "maxDateHasTime", "days", "daysContainer", "_input", "_positionElement", "innerContainer", "rContainer", "monthNav", "todayDateElem", "calendarContainer", "weekdayContainer", "prevMonthNav", "nextMonthNav", "monthsDropdownContainer", "currentMonthElement", "currentYearElement", "navigationCurrentMonth", "selectedDateElem", "config"].forEach((function (e) {
                    try {
                        delete w[e]
                    } catch (e) { }
                }
                ))
            }
            ,
            w.isEnabled = X,
            w.jumpToDate = P,
            w.open = function (e, t) {
                void 0 === t && (t = w._positionElement);
                if (!0 === w.isMobile) {
                    if (e) {
                        e.preventDefault();
                        var n = g(e);
                        n && n.blur()
                    }
                    return void 0 !== w.mobileInput && (w.mobileInput.focus(),
                        w.mobileInput.click()),
                        void pe("onOpen")
                }
                if (w._input.disabled || w.config.inline)
                    return;
                var a = w.isOpen;
                w.isOpen = !0,
                    a || (w.calendarContainer.classList.add("open"),
                        w._input.classList.add("active"),
                        pe("onOpen"),
                        ce(t));
                !0 === w.config.enableTime && !0 === w.config.noCalendar && (!1 !== w.config.allowInput || void 0 !== e && w.timeContainer.contains(e.relatedTarget) || setTimeout((function () {
                    return w.hourElement.select()
                }
                ), 50))
            }
            ,
            w.redraw = de,
            w.set = function (e, t) {
                if (null !== e && "object" == typeof e)
                    for (var a in Object.assign(w.config, e),
                        e)
                        void 0 !== fe[a] && fe[a].forEach((function (e) {
                            return e()
                        }
                        ));
                else
                    w.config[e] = t,
                        void 0 !== fe[e] ? fe[e].forEach((function (e) {
                            return e()
                        }
                        )) : n.indexOf(e) > -1 && (w.config[e] = c(t));
                w.redraw(),
                    be(!0)
            }
            ,
            w.setDate = function (e, t, n) {
                void 0 === t && (t = !1);
                void 0 === n && (n = w.config.dateFormat);
                if (0 !== e && !e || e instanceof Array && 0 === e.length)
                    return w.clear(t);
                me(e, n),
                    w.latestSelectedDateObj = w.selectedDates[w.selectedDates.length - 1],
                    w.redraw(),
                    P(void 0, t),
                    _(),
                    0 === w.selectedDates.length && w.clear(!1);
                be(t),
                    t && pe("onChange")
            }
            ,
            w.toggle = function (e) {
                if (!0 === w.isOpen)
                    return w.close();
                w.open(e)
            }
            ;
        var fe = {
            locale: [le, z],
            showMonths: [q, k, $],
            minDate: [P],
            maxDate: [P],
            clickOpens: [function () {
                !0 === w.config.clickOpens ? (A(w._input, "focus", w.open),
                    A(w._input, "click", w.open)) : (w._input.removeEventListener("focus", w.open),
                        w._input.removeEventListener("click", w.open))
            }
            ]
        };
        function me(e, t) {
            var n = [];
            if (e instanceof Array)
                n = e.map((function (e) {
                    return w.parseDate(e, t)
                }
                ));
            else if (e instanceof Date || "number" == typeof e)
                n = [w.parseDate(e, t)];
            else if ("string" == typeof e)
                switch (w.config.mode) {
                    case "single":
                    case "time":
                        n = [w.parseDate(e, t)];
                        break;
                    case "multiple":
                        n = e.split(w.config.conjunction).map((function (e) {
                            return w.parseDate(e, t)
                        }
                        ));
                        break;
                    case "range":
                        n = e.split(w.l10n.rangeSeparator).map((function (e) {
                            return w.parseDate(e, t)
                        }
                        ))
                }
            else
                w.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(e)));
            w.selectedDates = w.config.allowInvalidPreload ? n : n.filter((function (e) {
                return e instanceof Date && X(e, !1)
            }
            )),
                "range" === w.config.mode && w.selectedDates.sort((function (e, t) {
                    return e.getTime() - t.getTime()
                }
                ))
        }
        function ge(e) {
            return e.slice().map((function (e) {
                return "string" == typeof e || "number" == typeof e || e instanceof Date ? w.parseDate(e, void 0, !0) : e && "object" == typeof e && e.from && e.to ? {
                    from: w.parseDate(e.from, void 0),
                    to: w.parseDate(e.to, void 0)
                } : e
            }
            )).filter((function (e) {
                return e
            }
            ))
        }
        function pe(e, t) {
            if (void 0 !== w.config) {
                var n = w.config[e];
                if (void 0 !== n && n.length > 0)
                    for (var a = 0; n[a] && a < n.length; a++)
                        n[a](w.selectedDates, w.input.value, w, t);
                "onChange" === e && (w.input.dispatchEvent(he("change")),
                    w.input.dispatchEvent(he("input")))
            }
        }
        function he(e) {
            var t = document.createEvent("Event");
            return t.initEvent(e, !0, !0),
                t
        }
        function ve(e) {
            for (var t = 0; t < w.selectedDates.length; t++)
                if (0 === M(w.selectedDates[t], e))
                    return "" + t;
            return !1
        }
        function De() {
            w.config.noCalendar || w.isMobile || !w.monthNav || (w.yearElements.forEach((function (e, t) {
                var n = new Date(w.currentYear, w.currentMonth, 1);
                n.setMonth(w.currentMonth + t),
                    w.config.showMonths > 1 || "static" === w.config.monthSelectorType ? w.monthElements[t].textContent = h(n.getMonth(), w.config.shorthandCurrentMonth, w.l10n) + " " : w.monthsDropdownContainer.value = n.getMonth().toString(),
                    e.value = n.getFullYear().toString()
            }
            )),
                w._hidePrevMonthArrow = void 0 !== w.config.minDate && (w.currentYear === w.config.minDate.getFullYear() ? w.currentMonth <= w.config.minDate.getMonth() : w.currentYear < w.config.minDate.getFullYear()),
                w._hideNextMonthArrow = void 0 !== w.config.maxDate && (w.currentYear === w.config.maxDate.getFullYear() ? w.currentMonth + 1 > w.config.maxDate.getMonth() : w.currentYear > w.config.maxDate.getFullYear()))
        }
        function we(e) {
            return w.selectedDates.map((function (t) {
                return w.formatDate(t, e)
            }
            )).filter((function (e, t, n) {
                return "range" !== w.config.mode || w.config.enableTime || n.indexOf(e) === t
            }
            )).join("range" !== w.config.mode ? w.config.conjunction : w.l10n.rangeSeparator)
        }
        function be(e) {
            void 0 === e && (e = !0),
                void 0 !== w.mobileInput && w.mobileFormatStr && (w.mobileInput.value = void 0 !== w.latestSelectedDateObj ? w.formatDate(w.latestSelectedDateObj, w.mobileFormatStr) : ""),
                w.input.value = we(w.config.dateFormat),
                void 0 !== w.altInput && (w.altInput.value = we(w.config.altFormat)),
                !1 !== e && pe("onValueUpdate")
        }
        function Ce(e) {
            var t = g(e)
                , n = w.prevMonthNav.contains(t)
                , a = w.nextMonthNav.contains(t);
            n || a ? G(n ? -1 : 1) : w.yearElements.indexOf(t) >= 0 ? t.select() : t.classList.contains("arrowUp") ? w.changeYear(w.currentYear + 1) : t.classList.contains("arrowDown") && w.changeYear(w.currentYear - 1)
        }
        return function () {
            w.element = w.input = p,
                w.isOpen = !1,
                function () {
                    var t = ["wrap", "weekNumbers", "allowInput", "allowInvalidPreload", "clickOpens", "time_24hr", "enableTime", "noCalendar", "altInput", "shorthandCurrentMonth", "inline", "static", "enableSeconds", "disableMobile"]
                        , i = e(e({}, JSON.parse(JSON.stringify(p.dataset || {}))), v)
                        , o = {};
                    w.config.parseDate = i.parseDate,
                        w.config.formatDate = i.formatDate,
                        Object.defineProperty(w.config, "enable", {
                            get: function () {
                                return w.config._enable
                            },
                            set: function (e) {
                                w.config._enable = ge(e)
                            }
                        }),
                        Object.defineProperty(w.config, "disable", {
                            get: function () {
                                return w.config._disable
                            },
                            set: function (e) {
                                w.config._disable = ge(e)
                            }
                        });
                    var r = "time" === i.mode;
                    if (!i.dateFormat && (i.enableTime || r)) {
                        var l = T.defaultConfig.dateFormat || a.dateFormat;
                        o.dateFormat = i.noCalendar || r ? "H:i" + (i.enableSeconds ? ":S" : "") : l + " H:i" + (i.enableSeconds ? ":S" : "")
                    }
                    if (i.altInput && (i.enableTime || r) && !i.altFormat) {
                        var d = T.defaultConfig.altFormat || a.altFormat;
                        o.altFormat = i.noCalendar || r ? "h:i" + (i.enableSeconds ? ":S K" : " K") : d + " h:i" + (i.enableSeconds ? ":S" : "") + " K"
                    }
                    Object.defineProperty(w.config, "minDate", {
                        get: function () {
                            return w.config._minDate
                        },
                        set: oe("min")
                    }),
                        Object.defineProperty(w.config, "maxDate", {
                            get: function () {
                                return w.config._maxDate
                            },
                            set: oe("max")
                        });
                    var s = function (e) {
                        return function (t) {
                            w.config["min" === e ? "_minTime" : "_maxTime"] = w.parseDate(t, "H:i:S")
                        }
                    };
                    Object.defineProperty(w.config, "minTime", {
                        get: function () {
                            return w.config._minTime
                        },
                        set: s("min")
                    }),
                        Object.defineProperty(w.config, "maxTime", {
                            get: function () {
                                return w.config._maxTime
                            },
                            set: s("max")
                        }),
                        "time" === i.mode && (w.config.noCalendar = !0,
                            w.config.enableTime = !0);
                    Object.assign(w.config, o, i);
                    for (var u = 0; u < t.length; u++)
                        w.config[t[u]] = !0 === w.config[t[u]] || "true" === w.config[t[u]];
                    n.filter((function (e) {
                        return void 0 !== w.config[e]
                    }
                    )).forEach((function (e) {
                        w.config[e] = c(w.config[e] || []).map(E)
                    }
                    )),
                        w.isMobile = !w.config.disableMobile && !w.config.inline && "single" === w.config.mode && !w.config.disable.length && !w.config.enable && !w.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
                    for (u = 0; u < w.config.plugins.length; u++) {
                        var f = w.config.plugins[u](w) || {};
                        for (var m in f)
                            n.indexOf(m) > -1 ? w.config[m] = c(f[m]).map(E).concat(w.config[m]) : void 0 === i[m] && (w.config[m] = f[m])
                    }
                    i.altInputClass || (w.config.altInputClass = re().className + " " + w.config.altInputClass);
                    pe("onParseConfig")
                }(),
                le(),
                function () {
                    if (w.input = re(),
                        !w.input)
                        return void w.config.errorHandler(new Error("Invalid input element specified"));
                    w.input._type = w.input.type,
                        w.input.type = "text",
                        w.input.classList.add("flatpickr-input"),
                        w._input = w.input,
                        w.config.altInput && (w.altInput = s(w.input.nodeName, w.config.altInputClass),
                            w._input = w.altInput,
                            w.altInput.placeholder = w.input.placeholder,
                            w.altInput.disabled = w.input.disabled,
                            w.altInput.required = w.input.required,
                            w.altInput.tabIndex = w.input.tabIndex,
                            w.altInput.type = "text",
                            w.input.setAttribute("type", "hidden"),
                            !w.config.static && w.input.parentNode && w.input.parentNode.insertBefore(w.altInput, w.input.nextSibling));
                    w.config.allowInput || w._input.setAttribute("readonly", "readonly");
                    w._positionElement = w.config.positionElement || w._input
                }(),
                function () {
                    w.selectedDates = [],
                        w.now = w.parseDate(w.config.now) || new Date;
                    var e = w.config.defaultDate || ("INPUT" !== w.input.nodeName && "TEXTAREA" !== w.input.nodeName || !w.input.placeholder || w.input.value !== w.input.placeholder ? w.input.value : null);
                    e && me(e, w.config.dateFormat);
                    w._initialDate = w.selectedDates.length > 0 ? w.selectedDates[0] : w.config.minDate && w.config.minDate.getTime() > w.now.getTime() ? w.config.minDate : w.config.maxDate && w.config.maxDate.getTime() < w.now.getTime() ? w.config.maxDate : w.now,
                        w.currentYear = w._initialDate.getFullYear(),
                        w.currentMonth = w._initialDate.getMonth(),
                        w.selectedDates.length > 0 && (w.latestSelectedDateObj = w.selectedDates[0]);
                    void 0 !== w.config.minTime && (w.config.minTime = w.parseDate(w.config.minTime, "H:i"));
                    void 0 !== w.config.maxTime && (w.config.maxTime = w.parseDate(w.config.maxTime, "H:i"));
                    w.minDateHasTime = !!w.config.minDate && (w.config.minDate.getHours() > 0 || w.config.minDate.getMinutes() > 0 || w.config.minDate.getSeconds() > 0),
                        w.maxDateHasTime = !!w.config.maxDate && (w.config.maxDate.getHours() > 0 || w.config.maxDate.getMinutes() > 0 || w.config.maxDate.getSeconds() > 0)
                }(),
                w.utils = {
                    getDaysInMonth: function (e, t) {
                        return void 0 === e && (e = w.currentMonth),
                            void 0 === t && (t = w.currentYear),
                            1 === e && (t % 4 == 0 && t % 100 != 0 || t % 400 == 0) ? 29 : w.l10n.daysInMonth[e]
                    }
                },
                w.isMobile || function () {
                    var e = window.document.createDocumentFragment();
                    if (w.calendarContainer = s("div", "flatpickr-calendar"),
                        w.calendarContainer.tabIndex = -1,
                        !w.config.noCalendar) {
                        if (e.appendChild((w.monthNav = s("div", "flatpickr-months"),
                            w.yearElements = [],
                            w.monthElements = [],
                            w.prevMonthNav = s("span", "flatpickr-prev-month"),
                            w.prevMonthNav.innerHTML = w.config.prevArrow,
                            w.nextMonthNav = s("span", "flatpickr-next-month"),
                            w.nextMonthNav.innerHTML = w.config.nextArrow,
                            q(),
                            Object.defineProperty(w, "_hidePrevMonthArrow", {
                                get: function () {
                                    return w.__hidePrevMonthArrow
                                },
                                set: function (e) {
                                    w.__hidePrevMonthArrow !== e && (d(w.prevMonthNav, "flatpickr-disabled", e),
                                        w.__hidePrevMonthArrow = e)
                                }
                            }),
                            Object.defineProperty(w, "_hideNextMonthArrow", {
                                get: function () {
                                    return w.__hideNextMonthArrow
                                },
                                set: function (e) {
                                    w.__hideNextMonthArrow !== e && (d(w.nextMonthNav, "flatpickr-disabled", e),
                                        w.__hideNextMonthArrow = e)
                                }
                            }),
                            w.currentYearElement = w.yearElements[0],
                            De(),
                            w.monthNav)),
                            w.innerContainer = s("div", "flatpickr-innerContainer"),
                            w.config.weekNumbers) {
                            var t = function () {
                                w.calendarContainer.classList.add("hasWeeks");
                                var e = s("div", "flatpickr-weekwrapper");
                                e.appendChild(s("span", "flatpickr-weekday", w.l10n.weekAbbreviation));
                                var t = s("div", "flatpickr-weeks");
                                return e.appendChild(t),
                                {
                                    weekWrapper: e,
                                    weekNumbers: t
                                }
                            }()
                                , n = t.weekWrapper
                                , a = t.weekNumbers;
                            w.innerContainer.appendChild(n),
                                w.weekNumbers = a,
                                w.weekWrapper = n
                        }
                        w.rContainer = s("div", "flatpickr-rContainer"),
                            w.rContainer.appendChild($()),
                            w.daysContainer || (w.daysContainer = s("div", "flatpickr-days"),
                                w.daysContainer.tabIndex = -1),
                            J(),
                            w.rContainer.appendChild(w.daysContainer),
                            w.innerContainer.appendChild(w.rContainer),
                            e.appendChild(w.innerContainer)
                    }
                    w.config.enableTime && e.appendChild(function () {
                        w.calendarContainer.classList.add("hasTime"),
                            w.config.noCalendar && w.calendarContainer.classList.add("noCalendar");
                        var e = x(w.config);
                        w.timeContainer = s("div", "flatpickr-time"),
                            w.timeContainer.tabIndex = -1;
                        var t = s("span", "flatpickr-time-separator", ":")
                            , n = m("flatpickr-hour", {
                                "aria-label": w.l10n.hourAriaLabel
                            });
                        w.hourElement = n.getElementsByTagName("input")[0];
                        var a = m("flatpickr-minute", {
                            "aria-label": w.l10n.minuteAriaLabel
                        });
                        w.minuteElement = a.getElementsByTagName("input")[0],
                            w.hourElement.tabIndex = w.minuteElement.tabIndex = -1,
                            w.hourElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getHours() : w.config.time_24hr ? e.hours : function (e) {
                                switch (e % 24) {
                                    case 0:
                                    case 12:
                                        return 12;
                                    default:
                                        return e % 12
                                }
                            }(e.hours)),
                            w.minuteElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getMinutes() : e.minutes),
                            w.hourElement.setAttribute("step", w.config.hourIncrement.toString()),
                            w.minuteElement.setAttribute("step", w.config.minuteIncrement.toString()),
                            w.hourElement.setAttribute("min", w.config.time_24hr ? "0" : "1"),
                            w.hourElement.setAttribute("max", w.config.time_24hr ? "23" : "12"),
                            w.hourElement.setAttribute("maxlength", "2"),
                            w.minuteElement.setAttribute("min", "0"),
                            w.minuteElement.setAttribute("max", "59"),
                            w.minuteElement.setAttribute("maxlength", "2"),
                            w.timeContainer.appendChild(n),
                            w.timeContainer.appendChild(t),
                            w.timeContainer.appendChild(a),
                            w.config.time_24hr && w.timeContainer.classList.add("time24hr");
                        if (w.config.enableSeconds) {
                            w.timeContainer.classList.add("hasSeconds");
                            var i = m("flatpickr-second");
                            w.secondElement = i.getElementsByTagName("input")[0],
                                w.secondElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getSeconds() : e.seconds),
                                w.secondElement.setAttribute("step", w.minuteElement.getAttribute("step")),
                                w.secondElement.setAttribute("min", "0"),
                                w.secondElement.setAttribute("max", "59"),
                                w.secondElement.setAttribute("maxlength", "2"),
                                w.timeContainer.appendChild(s("span", "flatpickr-time-separator", ":")),
                                w.timeContainer.appendChild(i)
                        }
                        w.config.time_24hr || (w.amPM = s("span", "flatpickr-am-pm", w.l10n.amPM[r((w.latestSelectedDateObj ? w.hourElement.value : w.config.defaultHour) > 11)]),
                            w.amPM.title = w.l10n.toggleTitle,
                            w.amPM.tabIndex = -1,
                            w.timeContainer.appendChild(w.amPM));
                        return w.timeContainer
                    }());
                    d(w.calendarContainer, "rangeMode", "range" === w.config.mode),
                        d(w.calendarContainer, "animate", !0 === w.config.animate),
                        d(w.calendarContainer, "multiMonth", w.config.showMonths > 1),
                        w.calendarContainer.appendChild(e);
                    var i = void 0 !== w.config.appendTo && void 0 !== w.config.appendTo.nodeType;
                    if ((w.config.inline || w.config.static) && (w.calendarContainer.classList.add(w.config.inline ? "inline" : "static"),
                        w.config.inline && (!i && w.element.parentNode ? w.element.parentNode.insertBefore(w.calendarContainer, w._input.nextSibling) : void 0 !== w.config.appendTo && w.config.appendTo.appendChild(w.calendarContainer)),
                        w.config.static)) {
                        var l = s("div", "flatpickr-wrapper");
                        w.element.parentNode && w.element.parentNode.insertBefore(l, w.element),
                            l.appendChild(w.element),
                            w.altInput && l.appendChild(w.altInput),
                            l.appendChild(w.calendarContainer)
                    }
                    w.config.static || w.config.inline || (void 0 !== w.config.appendTo ? w.config.appendTo : window.document.body).appendChild(w.calendarContainer)
                }(),
                function () {
                    w.config.wrap && ["open", "close", "toggle", "clear"].forEach((function (e) {
                        Array.prototype.forEach.call(w.element.querySelectorAll("[data-" + e + "]"), (function (t) {
                            return A(t, "click", w[e])
                        }
                        ))
                    }
                    ));
                    if (w.isMobile)
                        return void function () {
                            var e = w.config.enableTime ? w.config.noCalendar ? "time" : "datetime-local" : "date";
                            w.mobileInput = s("input", w.input.className + " flatpickr-mobile"),
                                w.mobileInput.tabIndex = 1,
                                w.mobileInput.type = e,
                                w.mobileInput.disabled = w.input.disabled,
                                w.mobileInput.required = w.input.required,
                                w.mobileInput.placeholder = w.input.placeholder,
                                w.mobileFormatStr = "datetime-local" === e ? "Y-m-d\\TH:i:S" : "date" === e ? "Y-m-d" : "H:i:S",
                                w.selectedDates.length > 0 && (w.mobileInput.defaultValue = w.mobileInput.value = w.formatDate(w.selectedDates[0], w.mobileFormatStr));
                            w.config.minDate && (w.mobileInput.min = w.formatDate(w.config.minDate, "Y-m-d"));
                            w.config.maxDate && (w.mobileInput.max = w.formatDate(w.config.maxDate, "Y-m-d"));
                            w.input.getAttribute("step") && (w.mobileInput.step = String(w.input.getAttribute("step")));
                            w.input.type = "hidden",
                                void 0 !== w.altInput && (w.altInput.type = "hidden");
                            try {
                                w.input.parentNode && w.input.parentNode.insertBefore(w.mobileInput, w.input.nextSibling)
                            } catch (e) { }
                            A(w.mobileInput, "change", (function (e) {
                                w.setDate(g(e).value, !1, w.mobileFormatStr),
                                    pe("onChange"),
                                    pe("onClose")
                            }
                            ))
                        }();
                    var e = l(ie, 50);
                    w._debouncedChange = l(N, 300),
                        w.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent) && A(w.daysContainer, "mouseover", (function (e) {
                            "range" === w.config.mode && ae(g(e))
                        }
                        ));
                    A(window.document.body, "keydown", ne),
                        w.config.inline || w.config.static || A(window, "resize", e);
                    void 0 !== window.ontouchstart ? A(window.document, "touchstart", Z) : A(window.document, "mousedown", Z);
                    A(window.document, "focus", Z, {
                        capture: !0
                    }),
                        !0 === w.config.clickOpens && (A(w._input, "focus", w.open),
                            A(w._input, "click", w.open));
                    void 0 !== w.daysContainer && (A(w.monthNav, "click", Ce),
                        A(w.monthNav, ["keyup", "increment"], F),
                        A(w.daysContainer, "click", ue));
                    if (void 0 !== w.timeContainer && void 0 !== w.minuteElement && void 0 !== w.hourElement) {
                        var t = function (e) {
                            return g(e).select()
                        };
                        A(w.timeContainer, ["increment"], I),
                            A(w.timeContainer, "blur", I, {
                                capture: !0
                            }),
                            A(w.timeContainer, "click", Y),
                            A([w.hourElement, w.minuteElement], ["focus", "click"], t),
                            void 0 !== w.secondElement && A(w.secondElement, "focus", (function () {
                                return w.secondElement && w.secondElement.select()
                            }
                            )),
                            void 0 !== w.amPM && A(w.amPM, "click", (function (e) {
                                I(e),
                                    N()
                            }
                            ))
                    }
                    w.config.allowInput && A(w._input, "blur", te)
                }(),
                (w.selectedDates.length || w.config.noCalendar) && (w.config.enableTime && _(w.config.noCalendar ? w.latestSelectedDateObj : void 0),
                    be(!1)),
                k();
            var t = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            !w.isMobile && t && ce(),
                pe("onReady")
        }(),
            w
    }
    function k(e, t) {
        for (var n = Array.prototype.slice.call(e).filter((function (e) {
            return e instanceof HTMLElement
        }
        )), a = [], i = 0; i < n.length; i++) {
            var o = n[i];
            try {
                if (null !== o.getAttribute("data-fp-omit"))
                    continue;
                void 0 !== o._flatpickr && (o._flatpickr.destroy(),
                    o._flatpickr = void 0),
                    o._flatpickr = E(o, t || {}),
                    a.push(o._flatpickr)
            } catch (e) {
                console.error(e)
            }
        }
        return 1 === a.length ? a[0] : a
    }
    "undefined" != typeof HTMLElement && "undefined" != typeof HTMLCollection && "undefined" != typeof NodeList && (HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (e) {
        return k(this, e)
    }
        ,
        HTMLElement.prototype.flatpickr = function (e) {
            return k([this], e)
        }
    );
    var T = function (e, t) {
        return "string" == typeof e ? k(window.document.querySelectorAll(e), t) : e instanceof Node ? k([e], t) : k(e, t)
    };
    return T.defaultConfig = {},
        T.l10ns = {
            en: e({}, i),
            default: e({}, i)
        },
        T.localize = function (t) {
            T.l10ns.default = e(e({}, T.l10ns.default), t)
        }
        ,
        T.setDefaults = function (t) {
            T.defaultConfig = e(e({}, T.defaultConfig), t)
        }
        ,
        T.parseDate = C({}),
        T.formatDate = b({}),
        T.compareDates = M,
        "undefined" != typeof jQuery && void 0 !== jQuery.fn && (jQuery.fn.flatpickr = function (e) {
            return k(this, e)
        }
        ),
        Date.prototype.fp_incr = function (e) {
            return new Date(this.getFullYear(), this.getMonth(), this.getDate() + ("string" == typeof e ? parseInt(e, 10) : e))
        }
        ,
        "undefined" != typeof window && (window.flatpickr = T),
        T
}
));



"object" == typeof navigator && function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("Plyr", t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).Plyr = t()
}(this, (function () {
    "use strict";
    function e(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = i,
            e
    }
    function t(e, t) {
        for (var i = 0; i < t.length; i++) {
            var s = t[i];
            s.enumerable = s.enumerable || !1,
                s.configurable = !0,
                "value" in s && (s.writable = !0),
                Object.defineProperty(e, s.key, s)
        }
    }
    function i(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = i,
            e
    }
    function s(e, t) {
        var i = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var s = Object.getOwnPropertySymbols(e);
            t && (s = s.filter((function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }
            ))),
                i.push.apply(i, s)
        }
        return i
    }
    function n(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? s(Object(n), !0).forEach((function (t) {
                i(e, t, n[t])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : s(Object(n)).forEach((function (t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            }
            ))
        }
        return e
    }
    var a = {
        addCSS: !0,
        thumbWidth: 15,
        watch: !0
    };
    function l(e, t) {
        return function () {
            return Array.from(document.querySelectorAll(t)).includes(this)
        }
            .call(e, t)
    }
    var o = function (e) {
        return null != e ? e.constructor : null
    }
        , r = function (e, t) {
            return !!(e && t && e instanceof t)
        }
        , c = function (e) {
            return null == e
        }
        , h = function (e) {
            return o(e) === Object
        }
        , u = function (e) {
            return o(e) === String
        }
        , d = function (e) {
            return Array.isArray(e)
        }
        , m = function (e) {
            return r(e, NodeList)
        }
        , p = u
        , g = d
        , f = m
        , b = function (e) {
            return r(e, Element)
        }
        , y = function (e) {
            return r(e, Event)
        }
        , v = function (e) {
            return c(e) || (u(e) || d(e) || m(e)) && !e.length || h(e) && !Object.keys(e).length
        };
    function w(e, t) {
        if (1 > t) {
            var i = function (e) {
                var t = "".concat(e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0
            }(t);
            return parseFloat(e.toFixed(i))
        }
        return Math.round(e / t) * t
    }
    var T = function () {
        function e(t, i) {
            (function (e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            )(this, e),
                b(t) ? this.element = t : p(t) && (this.element = document.querySelector(t)),
                b(this.element) && v(this.element.rangeTouch) && (this.config = n({}, a, {}, i),
                    this.init())
        }
        return function (e, i, s) {
            i && t(e.prototype, i),
                s && t(e, s)
        }(e, [{
            key: "init",
            value: function () {
                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "none",
                    this.element.style.webKitUserSelect = "none",
                    this.element.style.touchAction = "manipulation"),
                    this.listeners(!0),
                    this.element.rangeTouch = this)
            }
        }, {
            key: "destroy",
            value: function () {
                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "",
                    this.element.style.webKitUserSelect = "",
                    this.element.style.touchAction = ""),
                    this.listeners(!1),
                    this.element.rangeTouch = null)
            }
        }, {
            key: "listeners",
            value: function (e) {
                var t = this
                    , i = e ? "addEventListener" : "removeEventListener";
                ["touchstart", "touchmove", "touchend"].forEach((function (e) {
                    t.element[i](e, (function (e) {
                        return t.set(e)
                    }
                    ), !1)
                }
                ))
            }
        }, {
            key: "get",
            value: function (t) {
                if (!e.enabled || !y(t))
                    return null;
                var i, s = t.target, n = t.changedTouches[0], a = parseFloat(s.getAttribute("min")) || 0, l = parseFloat(s.getAttribute("max")) || 100, o = parseFloat(s.getAttribute("step")) || 1, r = s.getBoundingClientRect(), c = 100 / r.width * (this.config.thumbWidth / 2) / 100;
                return 0 > (i = 100 / r.width * (n.clientX - r.left)) ? i = 0 : 100 < i && (i = 100),
                    50 > i ? i -= (100 - 2 * i) * c : 50 < i && (i += 2 * (i - 50) * c),
                    a + w(i / 100 * (l - a), o)
            }
        }, {
            key: "set",
            value: function (t) {
                e.enabled && y(t) && !t.target.disabled && (t.preventDefault(),
                    t.target.value = this.get(t),
                    function (e, t) {
                        if (e && t) {
                            var i = new Event(t, {
                                bubbles: !0
                            });
                            e.dispatchEvent(i)
                        }
                    }(t.target, "touchend" === t.type ? "change" : "input"))
            }
        }], [{
            key: "setup",
            value: function (t) {
                var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}
                    , s = null;
                if (v(t) || p(t) ? s = Array.from(document.querySelectorAll(p(t) ? t : 'input[type="range"]')) : b(t) ? s = [t] : f(t) ? s = Array.from(t) : g(t) && (s = t.filter(b)),
                    v(s))
                    return null;
                var o = n({}, a, {}, i);
                if (p(t) && o.watch) {
                    var r = new MutationObserver((function (i) {
                        Array.from(i).forEach((function (i) {
                            Array.from(i.addedNodes).forEach((function (i) {
                                b(i) && l(i, t) && new e(i, o)
                            }
                            ))
                        }
                        ))
                    }
                    ));
                    r.observe(document.body, {
                        childList: !0,
                        subtree: !0
                    })
                }
                return s.map((function (t) {
                    return new e(t, i)
                }
                ))
            }
        }, {
            key: "enabled",
            get: function () {
                return "ontouchstart" in document.documentElement
            }
        }]),
            e
    }();
    const k = e => null != e ? e.constructor : null
        , C = (e, t) => Boolean(e && t && e instanceof t)
        , A = e => null == e
        , S = e => k(e) === Object
        , E = e => k(e) === String
        , P = e => k(e) === Function
        , N = e => Array.isArray(e)
        , x = e => C(e, NodeList)
        , M = e => A(e) || (E(e) || N(e) || x(e)) && !e.length || S(e) && !Object.keys(e).length;
    var I = A
        , L = S
        , $ = e => k(e) === Number && !Number.isNaN(e)
        , _ = E
        , O = e => k(e) === Boolean
        , j = P
        , q = N
        , D = x
        , H = e => null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument
        , F = e => C(e, Event)
        , R = e => C(e, KeyboardEvent)
        , V = e => C(e, TextTrack) || !A(e) && E(e.kind)
        , B = e => C(e, Promise) && P(e.then)
        , U = e => {
            if (C(e, window.URL))
                return !0;
            if (!E(e))
                return !1;
            let t = e;
            e.startsWith("http://") && e.startsWith("https://") || (t = `http://${e}`);
            try {
                return !M(new URL(t).hostname)
            } catch (e) {
                return !1
            }
        }
        , W = M;
    const z = (() => {
        const e = document.createElement("span")
            , t = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            }
            , i = Object.keys(t).find((t => void 0 !== e.style[t]));
        return !!_(i) && t[i]
    }
    )();
    function K(e, t) {
        setTimeout((() => {
            try {
                e.hidden = !0,
                    e.offsetHeight,
                    e.hidden = !1
            } catch (e) { }
        }
        ), t)
    }
    const Y = {
        isIE: Boolean(window.document.documentMode),
        isEdge: window.navigator.userAgent.includes("Edge"),
        isWebkit: "WebkitAppearance" in document.documentElement.style && !/Edge/.test(navigator.userAgent),
        isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),
        isIos: "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || /(iPad|iPhone|iPod)/gi.test(navigator.platform)
    };
    function Q(e, t) {
        return t.split(".").reduce(((e, t) => e && e[t]), e)
    }
    function X(e = {}, ...t) {
        if (!t.length)
            return e;
        const i = t.shift();
        return L(i) ? (Object.keys(i).forEach((t => {
            L(i[t]) ? (Object.keys(e).includes(t) || Object.assign(e, {
                [t]: {}
            }),
                X(e[t], i[t])) : Object.assign(e, {
                    [t]: i[t]
                })
        }
        )),
            X(e, ...t)) : e
    }
    function J(e, t) {
        const i = e.length ? e : [e];
        Array.from(i).reverse().forEach(((e, i) => {
            const s = i > 0 ? t.cloneNode(!0) : t
                , n = e.parentNode
                , a = e.nextSibling;
            s.appendChild(e),
                a ? n.insertBefore(s, a) : n.appendChild(s)
        }
        ))
    }
    function G(e, t) {
        H(e) && !W(t) && Object.entries(t).filter((([, e]) => !I(e))).forEach((([t, i]) => e.setAttribute(t, i)))
    }
    function Z(e, t, i) {
        const s = document.createElement(e);
        return L(t) && G(s, t),
            _(i) && (s.innerText = i),
            s
    }
    function ee(e, t, i, s) {
        H(t) && t.appendChild(Z(e, i, s))
    }
    function te(e) {
        D(e) || q(e) ? Array.from(e).forEach(te) : H(e) && H(e.parentNode) && e.parentNode.removeChild(e)
    }
    function ie(e) {
        if (!H(e))
            return;
        let { length: t } = e.childNodes;
        for (; t > 0;)
            e.removeChild(e.lastChild),
                t -= 1
    }
    function se(e, t) {
        return H(t) && H(t.parentNode) && H(e) ? (t.parentNode.replaceChild(e, t),
            e) : null
    }
    function ne(e, t) {
        if (!_(e) || W(e))
            return {};
        const i = {}
            , s = X({}, t);
        return e.split(",").forEach((e => {
            const t = e.trim()
                , n = t.replace(".", "")
                , a = t.replace(/[[\]]/g, "").split("=")
                , [l] = a
                , o = a.length > 1 ? a[1].replace(/["']/g, "") : "";
            switch (t.charAt(0)) {
                case ".":
                    _(s.class) ? i.class = `${s.class} ${n}` : i.class = n;
                    break;
                case "#":
                    i.id = t.replace("#", "");
                    break;
                case "[":
                    i[l] = o
            }
        }
        )),
            X(s, i)
    }
    function ae(e, t) {
        if (!H(e))
            return;
        let i = t;
        O(i) || (i = !e.hidden),
            e.hidden = i
    }
    function le(e, t, i) {
        if (D(e))
            return Array.from(e).map((e => le(e, t, i)));
        if (H(e)) {
            let s = "toggle";
            return void 0 !== i && (s = i ? "add" : "remove"),
                e.classList[s](t),
                e.classList.contains(t)
        }
        return !1
    }
    function oe(e, t) {
        return H(e) && e.classList.contains(t)
    }
    function re(e, t) {
        const { prototype: i } = Element;
        return (i.matches || i.webkitMatchesSelector || i.mozMatchesSelector || i.msMatchesSelector || function () {
            return Array.from(document.querySelectorAll(t)).includes(this)
        }
        ).call(e, t)
    }
    function ce(e) {
        return this.elements.container.querySelectorAll(e)
    }
    function he(e) {
        return this.elements.container.querySelector(e)
    }
    function ue(e = null, t = !1) {
        H(e) && (e.focus({
            preventScroll: !0
        }),
            t && le(e, this.config.classNames.tabFocus))
    }
    const de = {
        "audio/ogg": "vorbis",
        "audio/wav": "1",
        "video/webm": "vp8, vorbis",
        "video/mp4": "avc1.42E01E, mp4a.40.2",
        "video/ogg": "theora"
    }
        , me = {
            audio: "canPlayType" in document.createElement("audio"),
            video: "canPlayType" in document.createElement("video"),
            check(e, t, i) {
                const s = Y.isIPhone && i && me.playsinline
                    , n = me[e] || "html5" !== t;
                return {
                    api: n,
                    ui: n && me.rangeInput && ("video" !== e || !Y.isIPhone || s)
                }
            },
            pip: !(Y.isIPhone || !j(Z("video").webkitSetPresentationMode) && (!document.pictureInPictureEnabled || Z("video").disablePictureInPicture)),
            airplay: j(window.WebKitPlaybackTargetAvailabilityEvent),
            playsinline: "playsInline" in document.createElement("video"),
            mime(e) {
                if (W(e))
                    return !1;
                const [t] = e.split("/");
                let i = e;
                if (!this.isHTML5 || t !== this.type)
                    return !1;
                Object.keys(de).includes(i) && (i += `; codecs="${de[e]}"`);
                try {
                    return Boolean(i && this.media.canPlayType(i).replace(/no/, ""))
                } catch (e) {
                    return !1
                }
            },
            textTracks: "textTracks" in document.createElement("video"),
            rangeInput: (() => {
                const e = document.createElement("input");
                return e.type = "range",
                    "range" === e.type
            }
            )(),
            touch: "ontouchstart" in document.documentElement,
            transitions: !1 !== z,
            reducedMotion: "matchMedia" in window && window.matchMedia("(prefers-reduced-motion)").matches
        }
        , pe = (() => {
            let e = !1;
            try {
                const t = Object.defineProperty({}, "passive", {
                    get: () => (e = !0,
                        null)
                });
                window.addEventListener("test", null, t),
                    window.removeEventListener("test", null, t)
            } catch (e) { }
            return e
        }
        )();
    function ge(e, t, i, s = !1, n = !0, a = !1) {
        if (!e || !("addEventListener" in e) || W(t) || !j(i))
            return;
        const l = t.split(" ");
        let o = a;
        pe && (o = {
            passive: n,
            capture: a
        }),
            l.forEach((t => {
                this && this.eventListeners && s && this.eventListeners.push({
                    element: e,
                    type: t,
                    callback: i,
                    options: o
                }),
                    e[s ? "addEventListener" : "removeEventListener"](t, i, o)
            }
            ))
    }
    function fe(e, t = "", i, s = !0, n = !1) {
        ge.call(this, e, t, i, !0, s, n)
    }
    function be(e, t = "", i, s = !0, n = !1) {
        ge.call(this, e, t, i, !1, s, n)
    }
    function ye(e, t = "", i, s = !0, n = !1) {
        const a = (...l) => {
            be(e, t, a, s, n),
                i.apply(this, l)
        }
            ;
        ge.call(this, e, t, a, !0, s, n)
    }
    function ve(e, t = "", i = !1, s = {}) {
        if (!H(e) || W(t))
            return;
        const n = new CustomEvent(t, {
            bubbles: i,
            detail: {
                ...s,
                plyr: this
            }
        });
        e.dispatchEvent(n)
    }
    function we() {
        this && this.eventListeners && (this.eventListeners.forEach((e => {
            const { element: t, type: i, callback: s, options: n } = e;
            t.removeEventListener(i, s, n)
        }
        )),
            this.eventListeners = [])
    }
    function Te() {
        return new Promise((e => this.ready ? setTimeout(e, 0) : fe.call(this, this.elements.container, "ready", e))).then((() => { }
        ))
    }
    function ke(e) {
        B(e) && e.then(null, (() => { }
        ))
    }
    function Ce(e) {
        return q(e) ? e.filter(((t, i) => e.indexOf(t) === i)) : e
    }
    function Ae(e, t) {
        return q(e) && e.length ? e.reduce(((e, i) => Math.abs(i - t) < Math.abs(e - t) ? i : e)) : null
    }
    function Se(e) {
        return !(!window || !window.CSS) && window.CSS.supports(e)
    }
    const Ee = [[1, 1], [4, 3], [3, 4], [5, 4], [4, 5], [3, 2], [2, 3], [16, 10], [10, 16], [16, 9], [9, 16], [21, 9], [9, 21], [32, 9], [9, 32]].reduce(((e, [t, i]) => ({
        ...e,
        [t / i]: [t, i]
    })), {});
    function Pe(e) {
        if (!(q(e) || _(e) && e.includes(":")))
            return !1;
        return (q(e) ? e : e.split(":")).map(Number).every($)
    }
    function Ne(e) {
        if (!q(e) || !e.every($))
            return null;
        const [t, i] = e
            , s = (e, t) => 0 === t ? e : s(t, e % t)
            , n = s(t, i);
        return [t / n, i / n]
    }
    function xe(e) {
        const t = e => Pe(e) ? e.split(":").map(Number) : null;
        let i = t(e);
        if (null === i && (i = t(this.config.ratio)),
            null === i && !W(this.embed) && q(this.embed.ratio) && ({ ratio: i } = this.embed),
            null === i && this.isHTML5) {
            const { videoWidth: e, videoHeight: t } = this.media;
            i = [e, t]
        }
        return Ne(i)
    }
    function Me(e) {
        if (!this.isVideo)
            return {};
        const { wrapper: t } = this.elements
            , i = xe.call(this, e);
        if (!q(i))
            return {};
        const [s, n] = Ne(i)
            , a = 100 / s * n;
        if (Se(`aspect-ratio: ${s}/${n}`) ? t.style.aspectRatio = `${s}/${n}` : t.style.paddingBottom = `${a}%`,
            this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {
            const e = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10)
                , i = (e - a) / (e / 50);
            this.fullscreen.active ? t.style.paddingBottom = null : this.media.style.transform = `translateY(-${i}%)`
        } else
            this.isHTML5 && t.classList.add(this.config.classNames.videoFixedRatio);
        return {
            padding: a,
            ratio: i
        }
    }
    function Ie(e, t, i = .05) {
        const s = e / t
            , n = Ae(Object.keys(Ee), s);
        return Math.abs(n - s) <= i ? Ee[n] : [e, t]
    }
    const Le = {
        getSources() {
            if (!this.isHTML5)
                return [];
            return Array.from(this.media.querySelectorAll("source")).filter((e => {
                const t = e.getAttribute("type");
                return !!W(t) || me.mime.call(this, t)
            }
            ))
        },
        getQualityOptions() {
            return this.config.quality.forced ? this.config.quality.options : Le.getSources.call(this).map((e => Number(e.getAttribute("size")))).filter(Boolean)
        },
        setup() {
            if (!this.isHTML5)
                return;
            const e = this;
            e.options.speed = e.config.speed.options,
                W(this.config.ratio) || Me.call(e),
                Object.defineProperty(e.media, "quality", {
                    get() {
                        const t = Le.getSources.call(e).find((t => t.getAttribute("src") === e.source));
                        return t && Number(t.getAttribute("size"))
                    },
                    set(t) {
                        if (e.quality !== t) {
                            if (e.config.quality.forced && j(e.config.quality.onChange))
                                e.config.quality.onChange(t);
                            else {
                                const i = Le.getSources.call(e).find((e => Number(e.getAttribute("size")) === t));
                                if (!i)
                                    return;
                                const { currentTime: s, paused: n, preload: a, readyState: l, playbackRate: o } = e.media;
                                e.media.src = i.getAttribute("src"),
                                    ("none" !== a || l) && (e.once("loadedmetadata", (() => {
                                        e.speed = o,
                                            e.currentTime = s,
                                            n || ke(e.play())
                                    }
                                    )),
                                        e.media.load())
                            }
                            ve.call(e, e.media, "qualitychange", !1, {
                                quality: t
                            })
                        }
                    }
                })
        },
        cancelRequests() {
            this.isHTML5 && (te(Le.getSources.call(this)),
                this.media.setAttribute("src", this.config.blankVideo),
                this.media.load(),
                this.debug.log("Cancelled network requests"))
        }
    };
    function $e(e, ...t) {
        return W(e) ? e : e.toString().replace(/{(\d+)}/g, ((e, i) => t[i].toString()))
    }
    const _e = (e = "", t = "", i = "") => e.replace(new RegExp(t.toString().replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1"), "g"), i.toString())
        , Oe = (e = "") => e.toString().replace(/\w\S*/g, (e => e.charAt(0).toUpperCase() + e.substr(1).toLowerCase()));
    function je(e = "") {
        let t = e.toString();
        return t = function (e = "") {
            let t = e.toString();
            return t = _e(t, "-", " "),
                t = _e(t, "_", " "),
                t = Oe(t),
                _e(t, " ", "")
        }(t),
            t.charAt(0).toLowerCase() + t.slice(1)
    }
    function qe(e) {
        const t = document.createElement("div");
        return t.appendChild(e),
            t.innerHTML
    }
    const De = {
        pip: "PIP",
        airplay: "AirPlay",
        html5: "HTML5",
        vimeo: "Vimeo",
        youtube: "YouTube"
    }
        , He = {
            get(e = "", t = {}) {
                if (W(e) || W(t))
                    return "";
                let i = Q(t.i18n, e);
                if (W(i))
                    return Object.keys(De).includes(e) ? De[e] : "";
                const s = {
                    "{seektime}": t.seekTime,
                    "{title}": t.title
                };
                return Object.entries(s).forEach((([e, t]) => {
                    i = _e(i, e, t)
                }
                )),
                    i
            }
        };
    class Fe {
        constructor(t) {
            e(this, "get", (e => {
                if (!Fe.supported || !this.enabled)
                    return null;
                const t = window.localStorage.getItem(this.key);
                if (W(t))
                    return null;
                const i = JSON.parse(t);
                return _(e) && e.length ? i[e] : i
            }
            )),
                e(this, "set", (e => {
                    if (!Fe.supported || !this.enabled)
                        return;
                    if (!L(e))
                        return;
                    let t = this.get();
                    W(t) && (t = {}),
                        X(t, e);
                    try {
                        window.localStorage.setItem(this.key, JSON.stringify(t))
                    } catch (e) { }
                }
                )),
                this.enabled = t.config.storage.enabled,
                this.key = t.config.storage.key
        }
        static get supported() {
            try {
                if (!("localStorage" in window))
                    return !1;
                const e = "___test";
                return window.localStorage.setItem(e, e),
                    window.localStorage.removeItem(e),
                    !0
            } catch (e) {
                return !1
            }
        }
    }
    function Re(e, t = "text") {
        return new Promise(((i, s) => {
            try {
                const s = new XMLHttpRequest;
                if (!("withCredentials" in s))
                    return;
                s.addEventListener("load", (() => {
                    if ("text" === t)
                        try {
                            i(JSON.parse(s.responseText))
                        } catch (e) {
                            i(s.responseText)
                        }
                    else
                        i(s.response)
                }
                )),
                    s.addEventListener("error", (() => {
                        throw new Error(s.status)
                    }
                    )),
                    s.open("GET", e, !0),
                    s.responseType = t,
                    s.send()
            } catch (e) {
                s(e)
            }
        }
        ))
    }
    function Ve(e, t) {
        if (!_(e))
            return;
        const i = _(t);
        let s = !1;
        const n = () => null !== document.getElementById(t)
            , a = (e, t) => {
                e.innerHTML = t,
                    i && n() || document.body.insertAdjacentElement("afterbegin", e)
            }
            ;
        if (!i || !n()) {
            const n = Fe.supported
                , l = document.createElement("div");
            if (l.setAttribute("hidden", ""),
                i && l.setAttribute("id", t),
                n) {
                const e = window.localStorage.getItem(`cache-${t}`);
                if (s = null !== e,
                    s) {
                    const t = JSON.parse(e);
                    a(l, t.content)
                }
            }
            Re(e).then((e => {
                if (!W(e)) {
                    if (n)
                        try {
                            window.localStorage.setItem(`cache-${t}`, JSON.stringify({
                                content: e
                            }))
                        } catch (e) { }
                    a(l, e)
                }
            }
            )).catch((() => { }
            ))
        }
    }
    const Be = e => Math.trunc(e / 60 / 60 % 60, 10);
    function Ue(e = 0, t = !1, i = !1) {
        if (!$(e))
            return Ue(void 0, t, i);
        const s = e => `0 ${e}`.slice(-2);
        let n = Be(e);
        const a = (l = e,
            Math.trunc(l / 60 % 60, 10));
        var l;
        const o = (e => Math.trunc(e % 60, 10))(e);
        return n = t || n > 0 ? `${n}:` : "",
            `${i && e > 0 ? "-" : ""}${n}${s(a)}:${s(o)}`
    }
    const We = {
        getIconUrl() {
            const e = new URL(this.config.iconUrl, window.location)
                , t = window.location.host ? window.location.host : window.top.location.host
                , i = e.host !== t || Y.isIE && !window.svg4everybody;
            return {
                url: this.config.iconUrl,
                cors: i
            }
        },
        findElements() {
            try {
                return this.elements.controls = he.call(this, this.config.selectors.controls.wrapper),
                    this.elements.buttons = {
                        play: ce.call(this, this.config.selectors.buttons.play),
                        pause: he.call(this, this.config.selectors.buttons.pause),
                        restart: he.call(this, this.config.selectors.buttons.restart),
                        rewind: he.call(this, this.config.selectors.buttons.rewind),
                        fastForward: he.call(this, this.config.selectors.buttons.fastForward),
                        mute: he.call(this, this.config.selectors.buttons.mute),
                        pip: he.call(this, this.config.selectors.buttons.pip),
                        airplay: he.call(this, this.config.selectors.buttons.airplay),
                        settings: he.call(this, this.config.selectors.buttons.settings),
                        captions: he.call(this, this.config.selectors.buttons.captions),
                        fullscreen: he.call(this, this.config.selectors.buttons.fullscreen)
                    },
                    this.elements.progress = he.call(this, this.config.selectors.progress),
                    this.elements.inputs = {
                        seek: he.call(this, this.config.selectors.inputs.seek),
                        volume: he.call(this, this.config.selectors.inputs.volume)
                    },
                    this.elements.display = {
                        buffer: he.call(this, this.config.selectors.display.buffer),
                        currentTime: he.call(this, this.config.selectors.display.currentTime),
                        duration: he.call(this, this.config.selectors.display.duration)
                    },
                    H(this.elements.progress) && (this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`)),
                    !0
            } catch (e) {
                return this.debug.warn("It looks like there is a problem with your custom controls HTML", e),
                    this.toggleNativeControls(!0),
                    !1
            }
        },
        createIcon(e, t) {
            const i = "http://www.w3.org/2000/svg"
                , s = We.getIconUrl.call(this)
                , n = `${s.cors ? "" : s.url}#${this.config.iconPrefix}`
                , a = document.createElementNS(i, "svg");
            G(a, X(t, {
                "aria-hidden": "true",
                focusable: "false"
            }));
            const l = document.createElementNS(i, "use")
                , o = `${n}-${e}`;
            return "href" in l && l.setAttributeNS("http://www.w3.org/1999/xlink", "href", o),
                l.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", o),
                a.appendChild(l),
                a
        },
        createLabel(e, t = {}) {
            const i = He.get(e, this.config);
            return Z("span", {
                ...t,
                class: [t.class, this.config.classNames.hidden].filter(Boolean).join(" ")
            }, i)
        },
        createBadge(e) {
            if (W(e))
                return null;
            const t = Z("span", {
                class: this.config.classNames.menu.value
            });
            return t.appendChild(Z("span", {
                class: this.config.classNames.menu.badge
            }, e)),
                t
        },
        createButton(e, t) {
            const i = X({}, t);
            let s = je(e);
            const n = {
                element: "button",
                toggle: !1,
                label: null,
                icon: null,
                labelPressed: null,
                iconPressed: null
            };
            switch (["element", "icon", "label"].forEach((e => {
                Object.keys(i).includes(e) && (n[e] = i[e],
                    delete i[e])
            }
            )),
            "button" !== n.element || Object.keys(i).includes("type") || (i.type = "button"),
            Object.keys(i).includes("class") ? i.class.split(" ").some((e => e === this.config.classNames.control)) || X(i, {
                class: `${i.class} ${this.config.classNames.control}`
            }) : i.class = this.config.classNames.control,
            e) {
                case "play":
                    n.toggle = !0,
                        n.label = "play",
                        n.labelPressed = "pause",
                        n.icon = "play",
                        n.iconPressed = "pause";
                    break;
                case "mute":
                    n.toggle = !0,
                        n.label = "mute",
                        n.labelPressed = "unmute",
                        n.icon = "volume",
                        n.iconPressed = "muted";
                    break;
                case "captions":
                    n.toggle = !0,
                        n.label = "enableCaptions",
                        n.labelPressed = "disableCaptions",
                        n.icon = "captions-off",
                        n.iconPressed = "captions-on";
                    break;
                case "fullscreen":
                    n.toggle = !0,
                        n.label = "enterFullscreen",
                        n.labelPressed = "exitFullscreen",
                        n.icon = "enter-fullscreen",
                        n.iconPressed = "exit-fullscreen";
                    break;
                case "play-large":
                    i.class += ` ${this.config.classNames.control}--overlaid`,
                        s = "play",
                        n.label = "play",
                        n.icon = "play";
                    break;
                default:
                    W(n.label) && (n.label = s),
                        W(n.icon) && (n.icon = e)
            }
            const a = Z(n.element);
            return n.toggle ? (a.appendChild(We.createIcon.call(this, n.iconPressed, {
                class: "icon--pressed"
            })),
                a.appendChild(We.createIcon.call(this, n.icon, {
                    class: "icon--not-pressed"
                })),
                a.appendChild(We.createLabel.call(this, n.labelPressed, {
                    class: "label--pressed"
                })),
                a.appendChild(We.createLabel.call(this, n.label, {
                    class: "label--not-pressed"
                }))) : (a.appendChild(We.createIcon.call(this, n.icon)),
                    a.appendChild(We.createLabel.call(this, n.label))),
                X(i, ne(this.config.selectors.buttons[s], i)),
                G(a, i),
                "play" === s ? (q(this.elements.buttons[s]) || (this.elements.buttons[s] = []),
                    this.elements.buttons[s].push(a)) : this.elements.buttons[s] = a,
                a
        },
        createRange(e, t) {
            const i = Z("input", X(ne(this.config.selectors.inputs[e]), {
                type: "range",
                min: 0,
                max: 100,
                step: .01,
                value: 0,
                autocomplete: "off",
                role: "slider",
                "aria-label": He.get(e, this.config),
                "aria-valuemin": 0,
                "aria-valuemax": 100,
                "aria-valuenow": 0
            }, t));
            return this.elements.inputs[e] = i,
                We.updateRangeFill.call(this, i),
                T.setup(i),
                i
        },
        createProgress(e, t) {
            const i = Z("progress", X(ne(this.config.selectors.display[e]), {
                min: 0,
                max: 100,
                value: 0,
                role: "progressbar",
                "aria-hidden": !0
            }, t));
            if ("volume" !== e) {
                i.appendChild(Z("span", null, "0"));
                const t = {
                    played: "played",
                    buffer: "buffered"
                }[e]
                    , s = t ? He.get(t, this.config) : "";
                i.innerText = `% ${s.toLowerCase()}`
            }
            return this.elements.display[e] = i,
                i
        },
        createTime(e, t) {
            const i = ne(this.config.selectors.display[e], t)
                , s = Z("div", X(i, {
                    class: `${i.class ? i.class : ""} ${this.config.classNames.display.time} `.trim(),
                    "aria-label": He.get(e, this.config)
                }), "00:00");
            return this.elements.display[e] = s,
                s
        },
        bindMenuItemShortcuts(e, t) {
            fe.call(this, e, "keydown keyup", (i => {
                if (![32, 38, 39, 40].includes(i.which))
                    return;
                if (i.preventDefault(),
                    i.stopPropagation(),
                    "keydown" === i.type)
                    return;
                const s = re(e, '[role="menuitemradio"]');
                if (!s && [32, 39].includes(i.which))
                    We.showMenuPanel.call(this, t, !0);
                else {
                    let t;
                    32 !== i.which && (40 === i.which || s && 39 === i.which ? (t = e.nextElementSibling,
                        H(t) || (t = e.parentNode.firstElementChild)) : (t = e.previousElementSibling,
                            H(t) || (t = e.parentNode.lastElementChild)),
                        ue.call(this, t, !0))
                }
            }
            ), !1),
                fe.call(this, e, "keyup", (e => {
                    13 === e.which && We.focusFirstMenuItem.call(this, null, !0)
                }
                ))
        },
        createMenuItem({ value: e, list: t, type: i, title: s, badge: n = null, checked: a = !1 }) {
            const l = ne(this.config.selectors.inputs[i])
                , o = Z("button", X(l, {
                    type: "button",
                    role: "menuitemradio",
                    class: `${this.config.classNames.control} ${l.class ? l.class : ""}`.trim(),
                    "aria-checked": a,
                    value: e
                }))
                , r = Z("span");
            r.innerHTML = s,
                H(n) && r.appendChild(n),
                o.appendChild(r),
                Object.defineProperty(o, "checked", {
                    enumerable: !0,
                    get: () => "true" === o.getAttribute("aria-checked"),
                    set(e) {
                        e && Array.from(o.parentNode.children).filter((e => re(e, '[role="menuitemradio"]'))).forEach((e => e.setAttribute("aria-checked", "false"))),
                            o.setAttribute("aria-checked", e ? "true" : "false")
                    }
                }),
                this.listeners.bind(o, "click keyup", (t => {
                    if (!R(t) || 32 === t.which) {
                        switch (t.preventDefault(),
                        t.stopPropagation(),
                        o.checked = !0,
                        i) {
                            case "language":
                                this.currentTrack = Number(e);
                                break;
                            case "quality":
                                this.quality = e;
                                break;
                            case "speed":
                                this.speed = parseFloat(e)
                        }
                        We.showMenuPanel.call(this, "home", R(t))
                    }
                }
                ), i, !1),
                We.bindMenuItemShortcuts.call(this, o, i),
                t.appendChild(o)
        },
        formatTime(e = 0, t = !1) {
            if (!$(e))
                return e;
            return Ue(e, Be(this.duration) > 0, t)
        },
        updateTimeDisplay(e = null, t = 0, i = !1) {
            H(e) && $(t) && (e.innerText = We.formatTime(t, i))
        },
        updateVolume() {
            this.supported.ui && (H(this.elements.inputs.volume) && We.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume),
                H(this.elements.buttons.mute) && (this.elements.buttons.mute.pressed = this.muted || 0 === this.volume))
        },
        setRange(e, t = 0) {
            H(e) && (e.value = t,
                We.updateRangeFill.call(this, e))
        },
        updateProgress(e) {
            if (!this.supported.ui || !F(e))
                return;
            let t = 0;
            const i = (e, t) => {
                const i = $(t) ? t : 0
                    , s = H(e) ? e : this.elements.display.buffer;
                if (H(s)) {
                    s.value = i;
                    const e = s.getElementsByTagName("span")[0];
                    H(e) && (e.childNodes[0].nodeValue = i)
                }
            }
                ;
            if (e)
                switch (e.type) {
                    case "timeupdate":
                    case "seeking":
                    case "seeked":
                        s = this.currentTime,
                            n = this.duration,
                            t = 0 === s || 0 === n || Number.isNaN(s) || Number.isNaN(n) ? 0 : (s / n * 100).toFixed(2),
                            "timeupdate" === e.type && We.setRange.call(this, this.elements.inputs.seek, t);
                        break;
                    case "playing":
                    case "progress":
                        i(this.elements.display.buffer, 100 * this.buffered)
                }
            var s, n
        },
        updateRangeFill(e) {
            const t = F(e) ? e.target : e;
            if (H(t) && "range" === t.getAttribute("type")) {
                if (re(t, this.config.selectors.inputs.seek)) {
                    t.setAttribute("aria-valuenow", this.currentTime);
                    const e = We.formatTime(this.currentTime)
                        , i = We.formatTime(this.duration)
                        , s = He.get("seekLabel", this.config);
                    t.setAttribute("aria-valuetext", s.replace("{currentTime}", e).replace("{duration}", i))
                } else if (re(t, this.config.selectors.inputs.volume)) {
                    const e = 100 * t.value;
                    t.setAttribute("aria-valuenow", e),
                        t.setAttribute("aria-valuetext", `${e.toFixed(1)}%`)
                } else
                    t.setAttribute("aria-valuenow", t.value);
                Y.isWebkit && t.style.setProperty("--value", t.value / t.max * 100 + "%")
            }
        },
        updateSeekTooltip(e) {
            if (!this.config.tooltips.seek || !H(this.elements.inputs.seek) || !H(this.elements.display.seekTooltip) || 0 === this.duration)
                return;
            const t = `${this.config.classNames.tooltip}--visible`
                , i = e => le(this.elements.display.seekTooltip, t, e);
            if (this.touch)
                return void i(!1);
            let s = 0;
            const n = this.elements.progress.getBoundingClientRect();
            if (F(e))
                s = 100 / n.width * (e.pageX - n.left);
            else {
                if (!oe(this.elements.display.seekTooltip, t))
                    return;
                s = parseFloat(this.elements.display.seekTooltip.style.left, 10)
            }
            s < 0 ? s = 0 : s > 100 && (s = 100),
                We.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * s),
                this.elements.display.seekTooltip.style.left = `${s}%`,
                F(e) && ["mouseenter", "mouseleave"].includes(e.type) && i("mouseenter" === e.type)
        },
        timeUpdate(e) {
            const t = !H(this.elements.display.duration) && this.config.invertTime;
            We.updateTimeDisplay.call(this, this.elements.display.currentTime, t ? this.duration - this.currentTime : this.currentTime, t),
                e && "timeupdate" === e.type && this.media.seeking || We.updateProgress.call(this, e)
        },
        durationUpdate() {
            if (!this.supported.ui || !this.config.invertTime && this.currentTime)
                return;
            if (this.duration >= 2 ** 32)
                return ae(this.elements.display.currentTime, !0),
                    void ae(this.elements.progress, !0);
            H(this.elements.inputs.seek) && this.elements.inputs.seek.setAttribute("aria-valuemax", this.duration);
            const e = H(this.elements.display.duration);
            !e && this.config.displayDuration && this.paused && We.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration),
                e && We.updateTimeDisplay.call(this, this.elements.display.duration, this.duration),
                We.updateSeekTooltip.call(this)
        },
        toggleMenuButton(e, t) {
            ae(this.elements.settings.buttons[e], !t)
        },
        updateSetting(e, t, i) {
            const s = this.elements.settings.panels[e];
            let n = null
                , a = t;
            if ("captions" === e)
                n = this.currentTrack;
            else {
                if (n = W(i) ? this[e] : i,
                    W(n) && (n = this.config[e].default),
                    !W(this.options[e]) && !this.options[e].includes(n))
                    return void this.debug.warn(`Unsupported value of '${n}' for ${e}`);
                if (!this.config[e].options.includes(n))
                    return void this.debug.warn(`Disabled value of '${n}' for ${e}`)
            }
            if (H(a) || (a = s && s.querySelector('[role="menu"]')),
                !H(a))
                return;
            this.elements.settings.buttons[e].querySelector(`.${this.config.classNames.menu.value}`).innerHTML = We.getLabel.call(this, e, n);
            const l = a && a.querySelector(`[value="${n}"]`);
            H(l) && (l.checked = !0)
        },
        getLabel(e, t) {
            switch (e) {
                case "speed":
                    return 1 === t ? He.get("normal", this.config) : `${t}&times;`;
                case "quality":
                    if ($(t)) {
                        const e = He.get(`qualityLabel.${t}`, this.config);
                        return e.length ? e : `${t}p`
                    }
                    return Oe(t);
                case "captions":
                    return Ye.getLabel.call(this);
                default:
                    return null
            }
        },
        setQualityMenu(e) {
            if (!H(this.elements.settings.panels.quality))
                return;
            const t = "quality"
                , i = this.elements.settings.panels.quality.querySelector('[role="menu"]');
            q(e) && (this.options.quality = Ce(e).filter((e => this.config.quality.options.includes(e))));
            const s = !W(this.options.quality) && this.options.quality.length > 1;
            if (We.toggleMenuButton.call(this, t, s),
                ie(i),
                We.checkMenu.call(this),
                !s)
                return;
            const n = e => {
                const t = He.get(`qualityBadge.${e}`, this.config);
                return t.length ? We.createBadge.call(this, t) : null
            }
                ;
            this.options.quality.sort(((e, t) => {
                const i = this.config.quality.options;
                return i.indexOf(e) > i.indexOf(t) ? 1 : -1
            }
            )).forEach((e => {
                We.createMenuItem.call(this, {
                    value: e,
                    list: i,
                    type: t,
                    title: We.getLabel.call(this, "quality", e),
                    badge: n(e)
                })
            }
            )),
                We.updateSetting.call(this, t, i)
        },
        setCaptionsMenu() {
            if (!H(this.elements.settings.panels.captions))
                return;
            const e = "captions"
                , t = this.elements.settings.panels.captions.querySelector('[role="menu"]')
                , i = Ye.getTracks.call(this)
                , s = Boolean(i.length);
            if (We.toggleMenuButton.call(this, e, s),
                ie(t),
                We.checkMenu.call(this),
                !s)
                return;
            const n = i.map(((e, i) => ({
                value: i,
                checked: this.captions.toggled && this.currentTrack === i,
                title: Ye.getLabel.call(this, e),
                badge: e.language && We.createBadge.call(this, e.language.toUpperCase()),
                list: t,
                type: "language"
            })));
            n.unshift({
                value: -1,
                checked: !this.captions.toggled,
                title: He.get("disabled", this.config),
                list: t,
                type: "language"
            }),
                n.forEach(We.createMenuItem.bind(this)),
                We.updateSetting.call(this, e, t)
        },
        setSpeedMenu() {
            if (!H(this.elements.settings.panels.speed))
                return;
            const e = "speed"
                , t = this.elements.settings.panels.speed.querySelector('[role="menu"]');
            this.options.speed = this.options.speed.filter((e => e >= this.minimumSpeed && e <= this.maximumSpeed));
            const i = !W(this.options.speed) && this.options.speed.length > 1;
            We.toggleMenuButton.call(this, e, i),
                ie(t),
                We.checkMenu.call(this),
                i && (this.options.speed.forEach((i => {
                    We.createMenuItem.call(this, {
                        value: i,
                        list: t,
                        type: e,
                        title: We.getLabel.call(this, "speed", i)
                    })
                }
                )),
                    We.updateSetting.call(this, e, t))
        },
        checkMenu() {
            const { buttons: e } = this.elements.settings
                , t = !W(e) && Object.values(e).some((e => !e.hidden));
            ae(this.elements.settings.menu, !t)
        },
        focusFirstMenuItem(e, t = !1) {
            if (this.elements.settings.popup.hidden)
                return;
            let i = e;
            H(i) || (i = Object.values(this.elements.settings.panels).find((e => !e.hidden)));
            const s = i.querySelector('[role^="menuitem"]');
            ue.call(this, s, t)
        },
        toggleMenu(e) {
            const { popup: t } = this.elements.settings
                , i = this.elements.buttons.settings;
            if (!H(t) || !H(i))
                return;
            const { hidden: s } = t;
            let n = s;
            if (O(e))
                n = e;
            else if (R(e) && 27 === e.which)
                n = !1;
            else if (F(e)) {
                const s = j(e.composedPath) ? e.composedPath()[0] : e.target
                    , a = t.contains(s);
                if (a || !a && e.target !== i && n)
                    return
            }
            i.setAttribute("aria-expanded", n),
                ae(t, !n),
                le(this.elements.container, this.config.classNames.menu.open, n),
                n && R(e) ? We.focusFirstMenuItem.call(this, null, !0) : n || s || ue.call(this, i, R(e))
        },
        getMenuSize(e) {
            const t = e.cloneNode(!0);
            t.style.position = "absolute",
                t.style.opacity = 0,
                t.removeAttribute("hidden"),
                e.parentNode.appendChild(t);
            const i = t.scrollWidth
                , s = t.scrollHeight;
            return te(t),
            {
                width: i,
                height: s
            }
        },
        showMenuPanel(e = "", t = !1) {
            const i = this.elements.container.querySelector(`#plyr-settings-${this.id}-${e}`);
            if (!H(i))
                return;
            const s = i.parentNode
                , n = Array.from(s.children).find((e => !e.hidden));
            if (me.transitions && !me.reducedMotion) {
                s.style.width = `${n.scrollWidth}px`,
                    s.style.height = `${n.scrollHeight}px`;
                const e = We.getMenuSize.call(this, i)
                    , t = e => {
                        e.target === s && ["width", "height"].includes(e.propertyName) && (s.style.width = "",
                            s.style.height = "",
                            be.call(this, s, z, t))
                    }
                    ;
                fe.call(this, s, z, t),
                    s.style.width = `${e.width}px`,
                    s.style.height = `${e.height}px`
            }
            ae(n, !0),
                ae(i, !1),
                We.focusFirstMenuItem.call(this, i, t)
        },
        setDownloadUrl() {
            const e = this.elements.buttons.download;
            H(e) && e.setAttribute("href", this.download)
        },
        create(e) {
            const { bindMenuItemShortcuts: t, createButton: i, createProgress: s, createRange: n, createTime: a, setQualityMenu: l, setSpeedMenu: o, showMenuPanel: r } = We;
            this.elements.controls = null,
                q(this.config.controls) && this.config.controls.includes("play-large") && this.elements.container.appendChild(i.call(this, "play-large"));
            const c = Z("div", ne(this.config.selectors.controls.wrapper));
            this.elements.controls = c;
            const h = {
                class: "plyr__controls__item"
            };
            return Ce(q(this.config.controls) ? this.config.controls : []).forEach((l => {
                if ("restart" === l && c.appendChild(i.call(this, "restart", h)),
                    "rewind" === l && c.appendChild(i.call(this, "rewind", h)),
                    "play" === l && c.appendChild(i.call(this, "play", h)),
                    "fast-forward" === l && c.appendChild(i.call(this, "fast-forward", h)),
                    "progress" === l) {
                    const t = Z("div", {
                        class: `${h.class} plyr__progress__container`
                    })
                        , i = Z("div", ne(this.config.selectors.progress));
                    if (i.appendChild(n.call(this, "seek", {
                        id: `plyr-seek-${e.id}`
                    })),
                        i.appendChild(s.call(this, "buffer")),
                        this.config.tooltips.seek) {
                        const e = Z("span", {
                            class: this.config.classNames.tooltip
                        }, "00:00");
                        i.appendChild(e),
                            this.elements.display.seekTooltip = e
                    }
                    this.elements.progress = i,
                        t.appendChild(this.elements.progress),
                        c.appendChild(t)
                }
                if ("current-time" === l && c.appendChild(a.call(this, "currentTime", h)),
                    "duration" === l && c.appendChild(a.call(this, "duration", h)),
                    "mute" === l || "volume" === l) {
                    let { volume: t } = this.elements;
                    if (H(t) && c.contains(t) || (t = Z("div", X({}, h, {
                        class: `${h.class} plyr__volume`.trim()
                    })),
                        this.elements.volume = t,
                        c.appendChild(t)),
                        "mute" === l && t.appendChild(i.call(this, "mute")),
                        "volume" === l && !Y.isIos) {
                        const i = {
                            max: 1,
                            step: .05,
                            value: this.config.volume
                        };
                        t.appendChild(n.call(this, "volume", X(i, {
                            id: `plyr-volume-${e.id}`
                        })))
                    }
                }
                if ("captions" === l && c.appendChild(i.call(this, "captions", h)),
                    "settings" === l && !W(this.config.settings)) {
                    const s = Z("div", X({}, h, {
                        class: `${h.class} plyr__menu`.trim(),
                        hidden: ""
                    }));
                    s.appendChild(i.call(this, "settings", {
                        "aria-haspopup": !0,
                        "aria-controls": `plyr-settings-${e.id}`,
                        "aria-expanded": !1
                    }));
                    const n = Z("div", {
                        class: "plyr__menu__container",
                        id: `plyr-settings-${e.id}`,
                        hidden: ""
                    })
                        , a = Z("div")
                        , l = Z("div", {
                            id: `plyr-settings-${e.id}-home`
                        })
                        , o = Z("div", {
                            role: "menu"
                        });
                    l.appendChild(o),
                        a.appendChild(l),
                        this.elements.settings.panels.home = l,
                        this.config.settings.forEach((i => {
                            const s = Z("button", X(ne(this.config.selectors.buttons.settings), {
                                type: "button",
                                class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,
                                role: "menuitem",
                                "aria-haspopup": !0,
                                hidden: ""
                            }));
                            t.call(this, s, i),
                                fe.call(this, s, "click", (() => {
                                    r.call(this, i, !1)
                                }
                                ));
                            const n = Z("span", null, He.get(i, this.config))
                                , l = Z("span", {
                                    class: this.config.classNames.menu.value
                                });
                            l.innerHTML = e[i],
                                n.appendChild(l),
                                s.appendChild(n),
                                o.appendChild(s);
                            const c = Z("div", {
                                id: `plyr-settings-${e.id}-${i}`,
                                hidden: ""
                            })
                                , h = Z("button", {
                                    type: "button",
                                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`
                                });
                            h.appendChild(Z("span", {
                                "aria-hidden": !0
                            }, He.get(i, this.config))),
                                h.appendChild(Z("span", {
                                    class: this.config.classNames.hidden
                                }, He.get("menuBack", this.config))),
                                fe.call(this, c, "keydown", (e => {
                                    37 === e.which && (e.preventDefault(),
                                        e.stopPropagation(),
                                        r.call(this, "home", !0))
                                }
                                ), !1),
                                fe.call(this, h, "click", (() => {
                                    r.call(this, "home", !1)
                                }
                                )),
                                c.appendChild(h),
                                c.appendChild(Z("div", {
                                    role: "menu"
                                })),
                                a.appendChild(c),
                                this.elements.settings.buttons[i] = s,
                                this.elements.settings.panels[i] = c
                        }
                        )),
                        n.appendChild(a),
                        s.appendChild(n),
                        c.appendChild(s),
                        this.elements.settings.popup = n,
                        this.elements.settings.menu = s
                }
                if ("pip" === l && me.pip && c.appendChild(i.call(this, "pip", h)),
                    "airplay" === l && me.airplay && c.appendChild(i.call(this, "airplay", h)),
                    "download" === l) {
                    const e = X({}, h, {
                        element: "a",
                        href: this.download,
                        target: "_blank"
                    });
                    this.isHTML5 && (e.download = "");
                    const { download: t } = this.config.urls;
                    !U(t) && this.isEmbed && X(e, {
                        icon: `logo-${this.provider}`,
                        label: this.provider
                    }),
                        c.appendChild(i.call(this, "download", e))
                }
                "fullscreen" === l && c.appendChild(i.call(this, "fullscreen", h))
            }
            )),
                this.isHTML5 && l.call(this, Le.getQualityOptions.call(this)),
                o.call(this),
                c
        },
        inject() {
            if (this.config.loadSprite) {
                const e = We.getIconUrl.call(this);
                e.cors && Ve(e.url, "sprite-plyr")
            }
            this.id = Math.floor(1e4 * Math.random());
            let e = null;
            this.elements.controls = null;
            const t = {
                id: this.id,
                seektime: this.config.seekTime,
                title: this.config.title
            };
            let i = !0;
            j(this.config.controls) && (this.config.controls = this.config.controls.call(this, t)),
                this.config.controls || (this.config.controls = []),
                H(this.config.controls) || _(this.config.controls) ? e = this.config.controls : (e = We.create.call(this, {
                    id: this.id,
                    seektime: this.config.seekTime,
                    speed: this.speed,
                    quality: this.quality,
                    captions: Ye.getLabel.call(this)
                }),
                    i = !1);
            let s;
            i && _(this.config.controls) && (e = (e => {
                let i = e;
                return Object.entries(t).forEach((([e, t]) => {
                    i = _e(i, `{${e}}`, t)
                }
                )),
                    i
            }
            )(e)),
                _(this.config.selectors.controls.container) && (s = document.querySelector(this.config.selectors.controls.container)),
                H(s) || (s = this.elements.container);
            if (s[H(e) ? "insertAdjacentElement" : "insertAdjacentHTML"]("afterbegin", e),
                H(this.elements.controls) || We.findElements.call(this),
                !W(this.elements.buttons)) {
                const e = e => {
                    const t = this.config.classNames.controlPressed;
                    Object.defineProperty(e, "pressed", {
                        enumerable: !0,
                        get: () => oe(e, t),
                        set(i = !1) {
                            le(e, t, i)
                        }
                    })
                }
                    ;
                Object.values(this.elements.buttons).filter(Boolean).forEach((t => {
                    q(t) || D(t) ? Array.from(t).filter(Boolean).forEach(e) : e(t)
                }
                ))
            }
            if (Y.isEdge && K(s),
                this.config.tooltips.controls) {
                const { classNames: e, selectors: t } = this.config
                    , i = `${t.controls.wrapper} ${t.labels} .${e.hidden}`
                    , s = ce.call(this, i);
                Array.from(s).forEach((e => {
                    le(e, this.config.classNames.hidden, !1),
                        le(e, this.config.classNames.tooltip, !0)
                }
                ))
            }
        }
    };
    function ze(e, t = !0) {
        let i = e;
        if (t) {
            const e = document.createElement("a");
            e.href = i,
                i = e.href
        }
        try {
            return new URL(i)
        } catch (e) {
            return null
        }
    }
    function Ke(e) {
        const t = new URLSearchParams;
        return L(e) && Object.entries(e).forEach((([e, i]) => {
            t.set(e, i)
        }
        )),
            t
    }
    const Ye = {
        setup() {
            if (!this.supported.ui)
                return;
            if (!this.isVideo || this.isYouTube || this.isHTML5 && !me.textTracks)
                return void (q(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && We.setCaptionsMenu.call(this));
            var e, t;
            if (H(this.elements.captions) || (this.elements.captions = Z("div", ne(this.config.selectors.captions)),
                e = this.elements.captions,
                t = this.elements.wrapper,
                H(e) && H(t) && t.parentNode.insertBefore(e, t.nextSibling)),
                Y.isIE && window.URL) {
                const e = this.media.querySelectorAll("track");
                Array.from(e).forEach((e => {
                    const t = e.getAttribute("src")
                        , i = ze(t);
                    null !== i && i.hostname !== window.location.href.hostname && ["http:", "https:"].includes(i.protocol) && Re(t, "blob").then((t => {
                        e.setAttribute("src", window.URL.createObjectURL(t))
                    }
                    )).catch((() => {
                        te(e)
                    }
                    ))
                }
                ))
            }
            const i = Ce((navigator.languages || [navigator.language || navigator.userLanguage || "en"]).map((e => e.split("-")[0])));
            let s = (this.storage.get("language") || this.config.captions.language || "auto").toLowerCase();
            "auto" === s && ([s] = i);
            let n = this.storage.get("captions");
            if (O(n) || ({ active: n } = this.config.captions),
                Object.assign(this.captions, {
                    toggled: !1,
                    active: n,
                    language: s,
                    languages: i
                }),
                this.isHTML5) {
                const e = this.config.captions.update ? "addtrack removetrack" : "removetrack";
                fe.call(this, this.media.textTracks, e, Ye.update.bind(this))
            }
            setTimeout(Ye.update.bind(this), 0)
        },
        update() {
            const e = Ye.getTracks.call(this, !0)
                , { active: t, language: i, meta: s, currentTrackNode: n } = this.captions
                , a = Boolean(e.find((e => e.language === i)));
            this.isHTML5 && this.isVideo && e.filter((e => !s.get(e))).forEach((e => {
                this.debug.log("Track added", e),
                    s.set(e, {
                        default: "showing" === e.mode
                    }),
                    "showing" === e.mode && (e.mode = "hidden"),
                    fe.call(this, e, "cuechange", (() => Ye.updateCues.call(this)))
            }
            )),
                (a && this.language !== i || !e.includes(n)) && (Ye.setLanguage.call(this, i),
                    Ye.toggle.call(this, t && a)),
                this.elements && le(this.elements.container, this.config.classNames.captions.enabled, !W(e)),
                q(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && We.setCaptionsMenu.call(this)
        },
        toggle(e, t = !0) {
            if (!this.supported.ui)
                return;
            const { toggled: i } = this.captions
                , s = this.config.classNames.captions.active
                , n = I(e) ? !i : e;
            if (n !== i) {
                if (t || (this.captions.active = n,
                    this.storage.set({
                        captions: n
                    })),
                    !this.language && n && !t) {
                    const e = Ye.getTracks.call(this)
                        , t = Ye.findTrack.call(this, [this.captions.language, ...this.captions.languages], !0);
                    return this.captions.language = t.language,
                        void Ye.set.call(this, e.indexOf(t))
                }
                this.elements.buttons.captions && (this.elements.buttons.captions.pressed = n),
                    le(this.elements.container, s, n),
                    this.captions.toggled = n,
                    We.updateSetting.call(this, "captions"),
                    ve.call(this, this.media, n ? "captionsenabled" : "captionsdisabled")
            }
            setTimeout((() => {
                n && this.captions.toggled && (this.captions.currentTrackNode.mode = "hidden")
            }
            ))
        },
        set(e, t = !0) {
            const i = Ye.getTracks.call(this);
            if (-1 !== e)
                if ($(e))
                    if (e in i) {
                        if (this.captions.currentTrack !== e) {
                            this.captions.currentTrack = e;
                            const s = i[e]
                                , { language: n } = s || {};
                            this.captions.currentTrackNode = s,
                                We.updateSetting.call(this, "captions"),
                                t || (this.captions.language = n,
                                    this.storage.set({
                                        language: n
                                    })),
                                this.isVimeo && this.embed.enableTextTrack(n),
                                ve.call(this, this.media, "languagechange")
                        }
                        Ye.toggle.call(this, !0, t),
                            this.isHTML5 && this.isVideo && Ye.updateCues.call(this)
                    } else
                        this.debug.warn("Track not found", e);
                else
                    this.debug.warn("Invalid caption argument", e);
            else
                Ye.toggle.call(this, !1, t)
        },
        setLanguage(e, t = !0) {
            if (!_(e))
                return void this.debug.warn("Invalid language argument", e);
            const i = e.toLowerCase();
            this.captions.language = i;
            const s = Ye.getTracks.call(this)
                , n = Ye.findTrack.call(this, [i]);
            Ye.set.call(this, s.indexOf(n), t)
        },
        getTracks(e = !1) {
            return Array.from((this.media || {}).textTracks || []).filter((t => !this.isHTML5 || e || this.captions.meta.has(t))).filter((e => ["captions", "subtitles"].includes(e.kind)))
        },
        findTrack(e, t = !1) {
            const i = Ye.getTracks.call(this)
                , s = e => Number((this.captions.meta.get(e) || {}).default)
                , n = Array.from(i).sort(((e, t) => s(t) - s(e)));
            let a;
            return e.every((e => (a = n.find((t => t.language === e)),
                !a))),
                a || (t ? n[0] : void 0)
        },
        getCurrentTrack() {
            return Ye.getTracks.call(this)[this.currentTrack]
        },
        getLabel(e) {
            let t = e;
            return !V(t) && me.textTracks && this.captions.toggled && (t = Ye.getCurrentTrack.call(this)),
                V(t) ? W(t.label) ? W(t.language) ? He.get("enabled", this.config) : e.language.toUpperCase() : t.label : He.get("disabled", this.config)
        },
        updateCues(e) {
            if (!this.supported.ui)
                return;
            if (!H(this.elements.captions))
                return void this.debug.warn("No captions element to render to");
            if (!I(e) && !Array.isArray(e))
                return void this.debug.warn("updateCues: Invalid input", e);
            let t = e;
            if (!t) {
                const e = Ye.getCurrentTrack.call(this);
                t = Array.from((e || {}).activeCues || []).map((e => e.getCueAsHTML())).map(qe)
            }
            const i = t.map((e => e.trim())).join("\n");
            if (i !== this.elements.captions.innerHTML) {
                ie(this.elements.captions);
                const e = Z("span", ne(this.config.selectors.caption));
                e.innerHTML = i,
                    this.elements.captions.appendChild(e),
                    ve.call(this, this.media, "cuechange")
            }
        }
    }
        , Qe = {
            enabled: !0,
            title: "",
            debug: !1,
            autoplay: !1,
            autopause: !0,
            playsinline: !0,
            seekTime: 10,
            volume: 1,
            muted: !1,
            duration: null,
            displayDuration: !0,
            invertTime: !0,
            toggleInvert: !0,
            ratio: null,
            clickToPlay: !0,
            hideControls: !0,
            resetOnEnd: !1,
            disableContextMenu: !0,
            loadSprite: !0,
            iconPrefix: "plyr",
            iconUrl: "https://cdn.plyr.io/3.6.9/plyr.svg",
            blankVideo: "https://cdn.plyr.io/static/blank.mp4",
            quality: {
                default: 576,
                options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],
                forced: !1,
                onChange: null
            },
            loop: {
                active: !1
            },
            speed: {
                selected: 1,
                options: [.5, .75, 1, 1.25, 1.5, 1.75, 2, 4]
            },
            keyboard: {
                focused: !0,
                global: !1
            },
            tooltips: {
                controls: !1,
                seek: !0
            },
            captions: {
                active: !1,
                language: "auto",
                update: !1
            },
            fullscreen: {
                enabled: !0,
                fallback: !0,
                iosNative: !1
            },
            storage: {
                enabled: !0,
                key: "plyr"
            },
            controls: ["play-large", "play", "progress", "current-time", "mute", "volume", "captions", "settings", "pip", "airplay", "fullscreen"],
            settings: ["captions", "quality", "speed"],
            i18n: {
                restart: "Restart",
                rewind: "Rewind {seektime}s",
                play: "Play",
                pause: "Pause",
                fastForward: "Forward {seektime}s",
                seek: "Seek",
                seekLabel: "{currentTime} of {duration}",
                played: "Played",
                buffered: "Buffered",
                currentTime: "Current time",
                duration: "Duration",
                volume: "Volume",
                mute: "Mute",
                unmute: "Unmute",
                enableCaptions: "Enable captions",
                disableCaptions: "Disable captions",
                download: "Download",
                enterFullscreen: "Enter fullscreen",
                exitFullscreen: "Exit fullscreen",
                frameTitle: "Player for {title}",
                captions: "Captions",
                settings: "Settings",
                pip: "PIP",
                menuBack: "Go back to previous menu",
                speed: "Speed",
                normal: "Normal",
                quality: "Quality",
                loop: "Loop",
                start: "Start",
                end: "End",
                all: "All",
                reset: "Reset",
                disabled: "Disabled",
                enabled: "Enabled",
                advertisement: "Ad",
                qualityBadge: {
                    2160: "4K",
                    1440: "HD",
                    1080: "HD",
                    720: "HD",
                    576: "SD",
                    480: "SD"
                }
            },
            urls: {
                download: null,
                vimeo: {
                    sdk: "https://player.vimeo.com/api/player.js",
                    iframe: "https://player.vimeo.com/video/{0}?{1}",
                    api: "https://vimeo.com/api/oembed.json?url={0}"
                },
                youtube: {
                    sdk: "https://www.youtube.com/iframe_api",
                    api: "https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}"
                },
                googleIMA: {
                    sdk: "https://imasdk.googleapis.com/js/sdkloader/ima3.js"
                }
            },
            listeners: {
                seek: null,
                play: null,
                pause: null,
                restart: null,
                rewind: null,
                fastForward: null,
                mute: null,
                volume: null,
                captions: null,
                download: null,
                fullscreen: null,
                pip: null,
                airplay: null,
                speed: null,
                quality: null,
                loop: null,
                language: null
            },
            events: ["ended", "progress", "stalled", "playing", "waiting", "canplay", "canplaythrough", "loadstart", "loadeddata", "loadedmetadata", "timeupdate", "volumechange", "play", "pause", "error", "seeking", "seeked", "emptied", "ratechange", "cuechange", "download", "enterfullscreen", "exitfullscreen", "captionsenabled", "captionsdisabled", "languagechange", "controlshidden", "controlsshown", "ready", "statechange", "qualitychange", "adsloaded", "adscontentpause", "adscontentresume", "adstarted", "adsmidpoint", "adscomplete", "adsallcomplete", "adsimpression", "adsclick"],
            selectors: {
                editable: "input, textarea, select, [contenteditable]",
                container: ".plyr",
                controls: {
                    container: null,
                    wrapper: ".plyr__controls"
                },
                labels: "[data-plyr]",
                buttons: {
                    play: '[data-plyr="play"]',
                    pause: '[data-plyr="pause"]',
                    restart: '[data-plyr="restart"]',
                    rewind: '[data-plyr="rewind"]',
                    fastForward: '[data-plyr="fast-forward"]',
                    mute: '[data-plyr="mute"]',
                    captions: '[data-plyr="captions"]',
                    download: '[data-plyr="download"]',
                    fullscreen: '[data-plyr="fullscreen"]',
                    pip: '[data-plyr="pip"]',
                    airplay: '[data-plyr="airplay"]',
                    settings: '[data-plyr="settings"]',
                    loop: '[data-plyr="loop"]'
                },
                inputs: {
                    seek: '[data-plyr="seek"]',
                    volume: '[data-plyr="volume"]',
                    speed: '[data-plyr="speed"]',
                    language: '[data-plyr="language"]',
                    quality: '[data-plyr="quality"]'
                },
                display: {
                    currentTime: ".plyr__time--current",
                    duration: ".plyr__time--duration",
                    buffer: ".plyr__progress__buffer",
                    loop: ".plyr__progress__loop",
                    volume: ".plyr__volume--display"
                },
                progress: ".plyr__progress",
                captions: ".plyr__captions",
                caption: ".plyr__caption"
            },
            classNames: {
                type: "plyr--{0}",
                provider: "plyr--{0}",
                video: "plyr__video-wrapper",
                embed: "plyr__video-embed",
                videoFixedRatio: "plyr__video-wrapper--fixed-ratio",
                embedContainer: "plyr__video-embed__container",
                poster: "plyr__poster",
                posterEnabled: "plyr__poster-enabled",
                ads: "plyr__ads",
                control: "plyr__control",
                controlPressed: "plyr__control--pressed",
                playing: "plyr--playing",
                paused: "plyr--paused",
                stopped: "plyr--stopped",
                loading: "plyr--loading",
                hover: "plyr--hover",
                tooltip: "plyr__tooltip",
                cues: "plyr__cues",
                hidden: "plyr__sr-only",
                hideControls: "plyr--hide-controls",
                isIos: "plyr--is-ios",
                isTouch: "plyr--is-touch",
                uiSupported: "plyr--full-ui",
                noTransition: "plyr--no-transition",
                display: {
                    time: "plyr__time"
                },
                menu: {
                    value: "plyr__menu__value",
                    badge: "plyr__badge",
                    open: "plyr--menu-open"
                },
                captions: {
                    enabled: "plyr--captions-enabled",
                    active: "plyr--captions-active"
                },
                fullscreen: {
                    enabled: "plyr--fullscreen-enabled",
                    fallback: "plyr--fullscreen-fallback"
                },
                pip: {
                    supported: "plyr--pip-supported",
                    active: "plyr--pip-active"
                },
                airplay: {
                    supported: "plyr--airplay-supported",
                    active: "plyr--airplay-active"
                },
                tabFocus: "plyr__tab-focus",
                previewThumbnails: {
                    thumbContainer: "plyr__preview-thumb",
                    thumbContainerShown: "plyr__preview-thumb--is-shown",
                    imageContainer: "plyr__preview-thumb__image-container",
                    timeContainer: "plyr__preview-thumb__time-container",
                    scrubbingContainer: "plyr__preview-scrubbing",
                    scrubbingContainerShown: "plyr__preview-scrubbing--is-shown"
                }
            },
            attributes: {
                embed: {
                    provider: "data-plyr-provider",
                    id: "data-plyr-embed-id",
                    hash: "data-plyr-embed-hash"
                }
            },
            ads: {
                enabled: !1,
                publisherId: "",
                tagUrl: ""
            },
            previewThumbnails: {
                enabled: !1,
                src: ""
            },
            vimeo: {
                byline: !1,
                portrait: !1,
                title: !1,
                speed: !0,
                transparent: !1,
                customControls: !0,
                referrerPolicy: null,
                premium: !1
            },
            youtube: {
                rel: 0,
                showinfo: 0,
                iv_load_policy: 3,
                modestbranding: 1,
                customControls: !0,
                noCookie: !1
            }
        }
        , Xe = "picture-in-picture"
        , Je = "inline"
        , Ge = {
            html5: "html5",
            youtube: "youtube",
            vimeo: "vimeo"
        }
        , Ze = "audio"
        , et = "video";
    const tt = () => { }
        ;
    class it {
        constructor(e = !1) {
            this.enabled = window.console && e,
                this.enabled && this.log("Debugging enabled")
        }
        get log() {
            return this.enabled ? Function.prototype.bind.call(console.log, console) : tt
        }
        get warn() {
            return this.enabled ? Function.prototype.bind.call(console.warn, console) : tt
        }
        get error() {
            return this.enabled ? Function.prototype.bind.call(console.error, console) : tt
        }
    }
    class st {
        constructor(t) {
            e(this, "onChange", (() => {
                if (!this.enabled)
                    return;
                const e = this.player.elements.buttons.fullscreen;
                H(e) && (e.pressed = this.active);
                const t = this.target === this.player.media ? this.target : this.player.elements.container;
                ve.call(this.player, t, this.active ? "enterfullscreen" : "exitfullscreen", !0)
            }
            )),
                e(this, "toggleFallback", ((e = !1) => {
                    if (e ? this.scrollPosition = {
                        x: window.scrollX || 0,
                        y: window.scrollY || 0
                    } : window.scrollTo(this.scrollPosition.x, this.scrollPosition.y),
                        document.body.style.overflow = e ? "hidden" : "",
                        le(this.target, this.player.config.classNames.fullscreen.fallback, e),
                        Y.isIos) {
                        let t = document.head.querySelector('meta[name="viewport"]');
                        const i = "viewport-fit=cover";
                        t || (t = document.createElement("meta"),
                            t.setAttribute("name", "viewport"));
                        const s = _(t.content) && t.content.includes(i);
                        e ? (this.cleanupViewport = !s,
                            s || (t.content += `,${i}`)) : this.cleanupViewport && (t.content = t.content.split(",").filter((e => e.trim() !== i)).join(","))
                    }
                    this.onChange()
                }
                )),
                e(this, "trapFocus", (e => {
                    if (Y.isIos || !this.active || "Tab" !== e.key || 9 !== e.keyCode)
                        return;
                    const t = document.activeElement
                        , i = ce.call(this.player, "a[href], button:not(:disabled), input:not(:disabled), [tabindex]")
                        , [s] = i
                        , n = i[i.length - 1];
                    t !== n || e.shiftKey ? t === s && e.shiftKey && (n.focus(),
                        e.preventDefault()) : (s.focus(),
                            e.preventDefault())
                }
                )),
                e(this, "update", (() => {
                    if (this.enabled) {
                        let e;
                        e = this.forceFallback ? "Fallback (forced)" : st.native ? "Native" : "Fallback",
                            this.player.debug.log(`${e} fullscreen enabled`)
                    } else
                        this.player.debug.log("Fullscreen not supported and fallback disabled");
                    le(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled)
                }
                )),
                e(this, "enter", (() => {
                    this.enabled && (Y.isIos && this.player.config.fullscreen.iosNative ? this.player.isVimeo ? this.player.embed.requestFullscreen() : this.target.webkitEnterFullscreen() : !st.native || this.forceFallback ? this.toggleFallback(!0) : this.prefix ? W(this.prefix) || this.target[`${this.prefix}Request ${this.property}`]() : this.target.requestFullscreen({
                        navigationUI: "hide"
                    }))
                }
                )),
                e(this, "exit", (() => {
                    if (this.enabled)
                        if (Y.isIos && this.player.config.fullscreen.iosNative)
                            this.target.webkitExitFullscreen(),
                                ke(this.player.play());
                        else if (!st.native || this.forceFallback)
                            this.toggleFallback(!1);
                        else if (this.prefix) {
                            if (!W(this.prefix)) {
                                const e = "moz" === this.prefix ? "Cancel" : "Exit";
                                document[`${this.prefix}${e}${this.property}`]()
                            }
                        } else
                            (document.cancelFullScreen || document.exitFullscreen).call(document)
                }
                )),
                e(this, "toggle", (() => {
                    this.active ? this.exit() : this.enter()
                }
                )),
                this.player = t,
                this.prefix = st.prefix,
                this.property = st.property,
                this.scrollPosition = {
                    x: 0,
                    y: 0
                },
                this.forceFallback = "force" === t.config.fullscreen.fallback,
                this.player.elements.fullscreen = t.config.fullscreen.container && function (e, t) {
                    const { prototype: i } = Element;
                    return (i.closest || function () {
                        let e = this;
                        do {
                            if (re.matches(e, t))
                                return e;
                            e = e.parentElement || e.parentNode
                        } while (null !== e && 1 === e.nodeType);
                        return null
                    }
                    ).call(e, t)
                }(this.player.elements.container, t.config.fullscreen.container),
                fe.call(this.player, document, "ms" === this.prefix ? "MSFullscreenChange" : `${this.prefix}fullscreenchange`, (() => {
                    this.onChange()
                }
                )),
                fe.call(this.player, this.player.elements.container, "dblclick", (e => {
                    H(this.player.elements.controls) && this.player.elements.controls.contains(e.target) || this.player.listeners.proxy(e, this.toggle, "fullscreen")
                }
                )),
                fe.call(this, this.player.elements.container, "keydown", (e => this.trapFocus(e))),
                this.update()
        }
        static get native() {
            return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)
        }
        get usingNative() {
            return st.native && !this.forceFallback
        }
        static get prefix() {
            if (j(document.exitFullscreen))
                return "";
            let e = "";
            return ["webkit", "moz", "ms"].some((t => !(!j(document[`${t}ExitFullscreen`]) && !j(document[`${t}CancelFullScreen`])) && (e = t,
                !0))),
                e
        }
        static get property() {
            return "moz" === this.prefix ? "FullScreen" : "Fullscreen"
        }
        get enabled() {
            return (st.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo
        }
        get active() {
            if (!this.enabled)
                return !1;
            if (!st.native || this.forceFallback)
                return oe(this.target, this.player.config.classNames.fullscreen.fallback);
            const e = this.prefix ? this.target.getRootNode()[`${this.prefix}${this.property}Element`] : this.target.getRootNode().fullscreenElement;
            return e && e.shadowRoot ? e === this.target.getRootNode().host : e === this.target
        }
        get target() {
            return Y.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container
        }
    }
    function nt(e, t = 1) {
        return new Promise(((i, s) => {
            const n = new Image
                , a = () => {
                    delete n.onload,
                        delete n.onerror,
                        (n.naturalWidth >= t ? i : s)(n)
                }
                ;
            Object.assign(n, {
                onload: a,
                onerror: a,
                src: e
            })
        }
        ))
    }
    const at = {
        addStyleHook() {
            le(this.elements.container, this.config.selectors.container.replace(".", ""), !0),
                le(this.elements.container, this.config.classNames.uiSupported, this.supported.ui)
        },
        toggleNativeControls(e = !1) {
            e && this.isHTML5 ? this.media.setAttribute("controls", "") : this.media.removeAttribute("controls")
        },
        build() {
            if (this.listeners.media(),
                !this.supported.ui)
                return this.debug.warn(`Basic support only for ${this.provider} ${this.type}`),
                    void at.toggleNativeControls.call(this, !0);
            H(this.elements.controls) || (We.inject.call(this),
                this.listeners.controls()),
                at.toggleNativeControls.call(this),
                this.isHTML5 && Ye.setup.call(this),
                this.volume = null,
                this.muted = null,
                this.loop = null,
                this.quality = null,
                this.speed = null,
                We.updateVolume.call(this),
                We.timeUpdate.call(this),
                We.durationUpdate.call(this),
                at.checkPlaying.call(this),
                le(this.elements.container, this.config.classNames.pip.supported, me.pip && this.isHTML5 && this.isVideo),
                le(this.elements.container, this.config.classNames.airplay.supported, me.airplay && this.isHTML5),
                le(this.elements.container, this.config.classNames.isIos, Y.isIos),
                le(this.elements.container, this.config.classNames.isTouch, this.touch),
                this.ready = !0,
                setTimeout((() => {
                    ve.call(this, this.media, "ready")
                }
                ), 0),
                at.setTitle.call(this),
                this.poster && at.setPoster.call(this, this.poster, !1).catch((() => { }
                )),
                this.config.duration && We.durationUpdate.call(this)
        },
        setTitle() {
            let e = He.get("play", this.config);
            if (_(this.config.title) && !W(this.config.title) && (e += `, ${this.config.title}`),
                Array.from(this.elements.buttons.play || []).forEach((t => {
                    t.setAttribute("aria-label", e)
                }
                )),
                this.isEmbed) {
                const e = he.call(this, "iframe");
                if (!H(e))
                    return;
                const t = W(this.config.title) ? "video" : this.config.title
                    , i = He.get("frameTitle", this.config);
                e.setAttribute("title", i.replace("{title}", t))
            }
        },
        togglePoster(e) {
            le(this.elements.container, this.config.classNames.posterEnabled, e)
        },
        setPoster(e, t = !0) {
            return t && this.poster ? Promise.reject(new Error("Poster already set")) : (this.media.setAttribute("data-poster", e),
                this.elements.poster.removeAttribute("hidden"),
                Te.call(this).then((() => nt(e))).catch((t => {
                    throw e === this.poster && at.togglePoster.call(this, !1),
                    t
                }
                )).then((() => {
                    if (e !== this.poster)
                        throw new Error("setPoster cancelled by later call to setPoster")
                }
                )).then((() => (Object.assign(this.elements.poster.style, {
                    backgroundImage: `url('${e}')`,
                    backgroundSize: ""
                }),
                    at.togglePoster.call(this, !0),
                    e))))
        },
        checkPlaying(e) {
            le(this.elements.container, this.config.classNames.playing, this.playing),
                le(this.elements.container, this.config.classNames.paused, this.paused),
                le(this.elements.container, this.config.classNames.stopped, this.stopped),
                Array.from(this.elements.buttons.play || []).forEach((e => {
                    Object.assign(e, {
                        pressed: this.playing
                    }),
                        e.setAttribute("aria-label", He.get(this.playing ? "pause" : "play", this.config))
                }
                )),
                F(e) && "timeupdate" === e.type || at.toggleControls.call(this)
        },
        checkLoading(e) {
            this.loading = ["stalled", "waiting"].includes(e.type),
                clearTimeout(this.timers.loading),
                this.timers.loading = setTimeout((() => {
                    le(this.elements.container, this.config.classNames.loading, this.loading),
                        at.toggleControls.call(this)
                }
                ), this.loading ? 250 : 0)
        },
        toggleControls(e) {
            const { controls: t } = this.elements;
            if (t && this.config.hideControls) {
                const i = this.touch && this.lastSeekTime + 2e3 > Date.now();
                this.toggleControls(Boolean(e || this.loading || this.paused || t.pressed || t.hover || i))
            }
        },
        migrateStyles() {
            Object.values({
                ...this.media.style
            }).filter((e => !W(e) && _(e) && e.startsWith("--plyr"))).forEach((e => {
                this.elements.container.style.setProperty(e, this.media.style.getPropertyValue(e)),
                    this.media.style.removeProperty(e)
            }
            )),
                W(this.media.style) && this.media.removeAttribute("style")
        }
    };
    class lt {
        constructor(t) {
            e(this, "firstTouch", (() => {
                const { player: e } = this
                    , { elements: t } = e;
                e.touch = !0,
                    le(t.container, e.config.classNames.isTouch, !0)
            }
            )),
                e(this, "setTabFocus", (e => {
                    const { player: t } = this
                        , { elements: i } = t;
                    if (clearTimeout(this.focusTimer),
                        "keydown" === e.type && 9 !== e.which)
                        return;
                    "keydown" === e.type && (this.lastKeyDown = e.timeStamp);
                    const s = e.timeStamp - this.lastKeyDown <= 20;
                    ("focus" !== e.type || s) && ((() => {
                        const e = t.config.classNames.tabFocus;
                        le(ce.call(t, `.${e}`), e, !1)
                    }
                    )(),
                        "focusout" !== e.type && (this.focusTimer = setTimeout((() => {
                            const e = document.activeElement;
                            i.container.contains(e) && le(document.activeElement, t.config.classNames.tabFocus, !0)
                        }
                        ), 10)))
                }
                )),
                e(this, "global", ((e = !0) => {
                    const { player: t } = this;
                    t.config.keyboard.global && ge.call(t, window, "keydown keyup", this.handleKey, e, !1),
                        ge.call(t, document.body, "click", this.toggleMenu, e),
                        ye.call(t, document.body, "touchstart", this.firstTouch),
                        ge.call(t, document.body, "keydown focus blur focusout", this.setTabFocus, e, !1, !0)
                }
                )),
                e(this, "container", (() => {
                    const { player: e } = this
                        , { config: t, elements: i, timers: s } = e;
                    !t.keyboard.global && t.keyboard.focused && fe.call(e, i.container, "keydown keyup", this.handleKey, !1),
                        fe.call(e, i.container, "mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen", (t => {
                            const { controls: n } = i;
                            n && "enterfullscreen" === t.type && (n.pressed = !1,
                                n.hover = !1);
                            let a = 0;
                            ["touchstart", "touchmove", "mousemove"].includes(t.type) && (at.toggleControls.call(e, !0),
                                a = e.touch ? 3e3 : 2e3),
                                clearTimeout(s.controls),
                                s.controls = setTimeout((() => at.toggleControls.call(e, !1)), a)
                        }
                        ));
                    const n = () => {
                        if (!e.isVimeo || e.config.vimeo.premium)
                            return;
                        const t = i.wrapper
                            , { active: s } = e.fullscreen
                            , [n, a] = xe.call(e)
                            , l = Se(`aspect-ratio: ${n} / ${a}`);
                        if (!s)
                            return void (l ? (t.style.width = null,
                                t.style.height = null) : (t.style.maxWidth = null,
                                    t.style.margin = null));
                        const [o, r] = [Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)]
                            , c = o / r > n / a;
                        l ? (t.style.width = c ? "auto" : "100%",
                            t.style.height = c ? "100%" : "auto") : (t.style.maxWidth = c ? r / a * n + "px" : null,
                                t.style.margin = c ? "0 auto" : null)
                    }
                        , a = () => {
                            clearTimeout(s.resized),
                                s.resized = setTimeout(n, 50)
                        }
                        ;
                    fe.call(e, i.container, "enterfullscreen exitfullscreen", (t => {
                        const { target: s } = e.fullscreen;
                        if (s !== i.container)
                            return;
                        if (!e.isEmbed && W(e.config.ratio))
                            return;
                        n();
                        ("enterfullscreen" === t.type ? fe : be).call(e, window, "resize", a)
                    }
                    ))
                }
                )),
                e(this, "media", (() => {
                    const { player: e } = this
                        , { elements: t } = e;
                    if (fe.call(e, e.media, "timeupdate seeking seeked", (t => We.timeUpdate.call(e, t))),
                        fe.call(e, e.media, "durationchange loadeddata loadedmetadata", (t => We.durationUpdate.call(e, t))),
                        fe.call(e, e.media, "ended", (() => {
                            e.isHTML5 && e.isVideo && e.config.resetOnEnd && (e.restart(),
                                e.pause())
                        }
                        )),
                        fe.call(e, e.media, "progress playing seeking seeked", (t => We.updateProgress.call(e, t))),
                        fe.call(e, e.media, "volumechange", (t => We.updateVolume.call(e, t))),
                        fe.call(e, e.media, "playing play pause ended emptied timeupdate", (t => at.checkPlaying.call(e, t))),
                        fe.call(e, e.media, "waiting canplay seeked playing", (t => at.checkLoading.call(e, t))),
                        e.supported.ui && e.config.clickToPlay && !e.isAudio) {
                        const i = he.call(e, `.${e.config.classNames.video}`);
                        if (!H(i))
                            return;
                        fe.call(e, t.container, "click", (s => {
                            ([t.container, i].includes(s.target) || i.contains(s.target)) && (e.touch && e.config.hideControls || (e.ended ? (this.proxy(s, e.restart, "restart"),
                                this.proxy(s, (() => {
                                    ke(e.play())
                                }
                                ), "play")) : this.proxy(s, (() => {
                                    ke(e.togglePlay())
                                }
                                ), "play")))
                        }
                        ))
                    }
                    e.supported.ui && e.config.disableContextMenu && fe.call(e, t.wrapper, "contextmenu", (e => {
                        e.preventDefault()
                    }
                    ), !1),
                        fe.call(e, e.media, "volumechange", (() => {
                            e.storage.set({
                                volume: e.volume,
                                muted: e.muted
                            })
                        }
                        )),
                        fe.call(e, e.media, "ratechange", (() => {
                            We.updateSetting.call(e, "speed"),
                                e.storage.set({
                                    speed: e.speed
                                })
                        }
                        )),
                        fe.call(e, e.media, "qualitychange", (t => {
                            We.updateSetting.call(e, "quality", null, t.detail.quality)
                        }
                        )),
                        fe.call(e, e.media, "ready qualitychange", (() => {
                            We.setDownloadUrl.call(e)
                        }
                        ));
                    const i = e.config.events.concat(["keyup", "keydown"]).join(" ");
                    fe.call(e, e.media, i, (i => {
                        let { detail: s = {} } = i;
                        "error" === i.type && (s = e.media.error),
                            ve.call(e, t.container, i.type, !0, s)
                    }
                    ))
                }
                )),
                e(this, "proxy", ((e, t, i) => {
                    const { player: s } = this
                        , n = s.config.listeners[i];
                    let a = !0;
                    j(n) && (a = n.call(s, e)),
                        !1 !== a && j(t) && t.call(s, e)
                }
                )),
                e(this, "bind", ((e, t, i, s, n = !0) => {
                    const { player: a } = this
                        , l = a.config.listeners[s]
                        , o = j(l);
                    fe.call(a, e, t, (e => this.proxy(e, i, s)), n && !o)
                }
                )),
                e(this, "controls", (() => {
                    const { player: e } = this
                        , { elements: t } = e
                        , i = Y.isIE ? "change" : "input";
                    if (t.buttons.play && Array.from(t.buttons.play).forEach((t => {
                        this.bind(t, "click", (() => {
                            ke(e.togglePlay())
                        }
                        ), "play")
                    }
                    )),
                        this.bind(t.buttons.restart, "click", e.restart, "restart"),
                        this.bind(t.buttons.rewind, "click", (() => {
                            e.lastSeekTime = Date.now(),
                                e.rewind()
                        }
                        ), "rewind"),
                        this.bind(t.buttons.fastForward, "click", (() => {
                            e.lastSeekTime = Date.now(),
                                e.forward()
                        }
                        ), "fastForward"),
                        this.bind(t.buttons.mute, "click", (() => {
                            e.muted = !e.muted
                        }
                        ), "mute"),
                        this.bind(t.buttons.captions, "click", (() => e.toggleCaptions())),
                        this.bind(t.buttons.download, "click", (() => {
                            ve.call(e, e.media, "download")
                        }
                        ), "download"),
                        this.bind(t.buttons.fullscreen, "click", (() => {
                            e.fullscreen.toggle()
                        }
                        ), "fullscreen"),
                        this.bind(t.buttons.pip, "click", (() => {
                            e.pip = "toggle"
                        }
                        ), "pip"),
                        this.bind(t.buttons.airplay, "click", e.airplay, "airplay"),
                        this.bind(t.buttons.settings, "click", (t => {
                            t.stopPropagation(),
                                t.preventDefault(),
                                We.toggleMenu.call(e, t)
                        }
                        ), null, !1),
                        this.bind(t.buttons.settings, "keyup", (t => {
                            const i = t.which;
                            [13, 32].includes(i) && (13 !== i ? (t.preventDefault(),
                                t.stopPropagation(),
                                We.toggleMenu.call(e, t)) : We.focusFirstMenuItem.call(e, null, !0))
                        }
                        ), null, !1),
                        this.bind(t.settings.menu, "keydown", (t => {
                            27 === t.which && We.toggleMenu.call(e, t)
                        }
                        )),
                        this.bind(t.inputs.seek, "mousedown mousemove", (e => {
                            const i = t.progress.getBoundingClientRect()
                                , s = 100 / i.width * (e.pageX - i.left);
                            e.currentTarget.setAttribute("seek-value", s)
                        }
                        )),
                        this.bind(t.inputs.seek, "mousedown mouseup keydown keyup touchstart touchend", (t => {
                            const i = t.currentTarget
                                , s = t.keyCode ? t.keyCode : t.which
                                , n = "play-on-seeked";
                            if (R(t) && 39 !== s && 37 !== s)
                                return;
                            e.lastSeekTime = Date.now();
                            const a = i.hasAttribute(n)
                                , l = ["mouseup", "touchend", "keyup"].includes(t.type);
                            a && l ? (i.removeAttribute(n),
                                ke(e.play())) : !l && e.playing && (i.setAttribute(n, ""),
                                    e.pause())
                        }
                        )),
                        Y.isIos) {
                        const t = ce.call(e, 'input[type="range"]');
                        Array.from(t).forEach((e => this.bind(e, i, (e => K(e.target)))))
                    }
                    this.bind(t.inputs.seek, i, (t => {
                        const i = t.currentTarget;
                        let s = i.getAttribute("seek-value");
                        W(s) && (s = i.value),
                            i.removeAttribute("seek-value"),
                            e.currentTime = s / i.max * e.duration
                    }
                    ), "seek"),
                        this.bind(t.progress, "mouseenter mouseleave mousemove", (t => We.updateSeekTooltip.call(e, t))),
                        this.bind(t.progress, "mousemove touchmove", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.startMove(t)
                        }
                        )),
                        this.bind(t.progress, "mouseleave touchend click", (() => {
                            const { previewThumbnails: t } = e;
                            t && t.loaded && t.endMove(!1, !0)
                        }
                        )),
                        this.bind(t.progress, "mousedown touchstart", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.startScrubbing(t)
                        }
                        )),
                        this.bind(t.progress, "mouseup touchend", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.endScrubbing(t)
                        }
                        )),
                        Y.isWebkit && Array.from(ce.call(e, 'input[type="range"]')).forEach((t => {
                            this.bind(t, "input", (t => We.updateRangeFill.call(e, t.target)))
                        }
                        )),
                        e.config.toggleInvert && !H(t.display.duration) && this.bind(t.display.currentTime, "click", (() => {
                            0 !== e.currentTime && (e.config.invertTime = !e.config.invertTime,
                                We.timeUpdate.call(e))
                        }
                        )),
                        this.bind(t.inputs.volume, i, (t => {
                            e.volume = t.target.value
                        }
                        ), "volume"),
                        this.bind(t.controls, "mouseenter mouseleave", (i => {
                            t.controls.hover = !e.touch && "mouseenter" === i.type
                        }
                        )),
                        t.fullscreen && Array.from(t.fullscreen.children).filter((e => !e.contains(t.container))).forEach((i => {
                            this.bind(i, "mouseenter mouseleave", (i => {
                                t.controls && (t.controls.hover = !e.touch && "mouseenter" === i.type)
                            }
                            ))
                        }
                        )),
                        this.bind(t.controls, "mousedown mouseup touchstart touchend touchcancel", (e => {
                            t.controls.pressed = ["mousedown", "touchstart"].includes(e.type)
                        }
                        )),
                        this.bind(t.controls, "focusin", (() => {
                            const { config: i, timers: s } = e;
                            le(t.controls, i.classNames.noTransition, !0),
                                at.toggleControls.call(e, !0),
                                setTimeout((() => {
                                    le(t.controls, i.classNames.noTransition, !1)
                                }
                                ), 0);
                            const n = this.touch ? 3e3 : 4e3;
                            clearTimeout(s.controls),
                                s.controls = setTimeout((() => at.toggleControls.call(e, !1)), n)
                        }
                        )),
                        this.bind(t.inputs.volume, "wheel", (t => {
                            const i = t.webkitDirectionInvertedFromDevice
                                , [s, n] = [t.deltaX, -t.deltaY].map((e => i ? -e : e))
                                , a = Math.sign(Math.abs(s) > Math.abs(n) ? s : n);
                            e.increaseVolume(a / 50);
                            const { volume: l } = e.media;
                            (1 === a && l < 1 || -1 === a && l > 0) && t.preventDefault()
                        }
                        ), "volume", !1)
                }
                )),
                this.player = t,
                this.lastKey = null,
                this.focusTimer = null,
                this.lastKeyDown = null,
                this.handleKey = this.handleKey.bind(this),
                this.toggleMenu = this.toggleMenu.bind(this),
                this.setTabFocus = this.setTabFocus.bind(this),
                this.firstTouch = this.firstTouch.bind(this)
        }
        handleKey(e) {
            const { player: t } = this
                , { elements: i } = t
                , s = e.keyCode ? e.keyCode : e.which
                , n = "keydown" === e.type
                , a = n && s === this.lastKey;
            if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey)
                return;
            if (!$(s))
                return;
            if (n) {
                const n = document.activeElement;
                if (H(n)) {
                    const { editable: s } = t.config.selectors
                        , { seek: a } = i.inputs;
                    if (n !== a && re(n, s))
                        return;
                    if (32 === e.which && re(n, 'button, [role^="menuitem"]'))
                        return
                }
                switch ([32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79].includes(s) && (e.preventDefault(),
                    e.stopPropagation()),
                s) {
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                        a || (t.currentTime = t.duration / 10 * (s - 48));
                        break;
                    case 32:
                    case 75:
                        a || ke(t.togglePlay());
                        break;
                    case 38:
                        t.increaseVolume(.1);
                        break;
                    case 40:
                        t.decreaseVolume(.1);
                        break;
                    case 77:
                        a || (t.muted = !t.muted);
                        break;
                    case 39:
                        t.forward();
                        break;
                    case 37:
                        t.rewind();
                        break;
                    case 70:
                        t.fullscreen.toggle();
                        break;
                    case 67:
                        a || t.toggleCaptions();
                        break;
                    case 76:
                        t.loop = !t.loop
                }
                27 === s && !t.fullscreen.usingNative && t.fullscreen.active && t.fullscreen.toggle(),
                    this.lastKey = s
            } else
                this.lastKey = null
        }
        toggleMenu(e) {
            We.toggleMenu.call(this.player, e)
        }
    }
    "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
    var ot = function (e, t) {
        return e(t = {
            exports: {}
        }, t.exports),
            t.exports
    }((function (e, t) {
        e.exports = function () {
            var e = function () { }
                , t = {}
                , i = {}
                , s = {};
            function n(e, t) {
                e = e.push ? e : [e];
                var n, a, l, o = [], r = e.length, c = r;
                for (n = function (e, i) {
                    i.length && o.push(e),
                        --c || t(o)
                }
                    ; r--;)
                    a = e[r],
                        (l = i[a]) ? n(a, l) : (s[a] = s[a] || []).push(n)
            }
            function a(e, t) {
                if (e) {
                    var n = s[e];
                    if (i[e] = t,
                        n)
                        for (; n.length;)
                            n[0](e, t),
                                n.splice(0, 1)
                }
            }
            function l(t, i) {
                t.call && (t = {
                    success: t
                }),
                    i.length ? (t.error || e)(i) : (t.success || e)(t)
            }
            function o(t, i, s, n) {
                var a, l, r = document, c = s.async, h = (s.numRetries || 0) + 1, u = s.before || e, d = t.replace(/[\?|#].*$/, ""), m = t.replace(/^(css|img)!/, "");
                n = n || 0,
                    /(^css!|\.css$)/.test(d) ? ((l = r.createElement("link")).rel = "stylesheet",
                        l.href = m,
                        (a = "hideFocus" in l) && l.relList && (a = 0,
                            l.rel = "preload",
                            l.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(d) ? (l = r.createElement("img")).src = m : ((l = r.createElement("script")).src = t,
                                l.async = void 0 === c || c),
                    l.onload = l.onerror = l.onbeforeload = function (e) {
                        var r = e.type[0];
                        if (a)
                            try {
                                l.sheet.cssText.length || (r = "e")
                            } catch (e) {
                                18 != e.code && (r = "e")
                            }
                        if ("e" == r) {
                            if ((n += 1) < h)
                                return o(t, i, s, n)
                        } else if ("preload" == l.rel && "style" == l.as)
                            return l.rel = "stylesheet";
                        i(t, r, e.defaultPrevented)
                    }
                    ,
                    !1 !== u(t, l) && r.head.appendChild(l)
            }
            function r(e, t, i) {
                var s, n, a = (e = e.push ? e : [e]).length, l = a, r = [];
                for (s = function (e, i, s) {
                    if ("e" == i && r.push(e),
                        "b" == i) {
                        if (!s)
                            return;
                        r.push(e)
                    }
                    --a || t(r)
                }
                    ,
                    n = 0; n < l; n++)
                    o(e[n], s, i)
            }
            function c(e, i, s) {
                var n, o;
                if (i && i.trim && (n = i),
                    o = (n ? s : i) || {},
                    n) {
                    if (n in t)
                        throw "LoadJS";
                    t[n] = !0
                }
                function c(t, i) {
                    r(e, (function (e) {
                        l(o, e),
                            t && l({
                                success: t,
                                error: i
                            }, e),
                            a(n, e)
                    }
                    ), o)
                }
                if (o.returnPromise)
                    return new Promise(c);
                c()
            }
            return c.ready = function (e, t) {
                return n(e, (function (e) {
                    l(t, e)
                }
                )),
                    c
            }
                ,
                c.done = function (e) {
                    a(e, [])
                }
                ,
                c.reset = function () {
                    t = {},
                        i = {},
                        s = {}
                }
                ,
                c.isDefined = function (e) {
                    return e in t
                }
                ,
                c
        }()
    }
    ));
    function rt(e) {
        return new Promise(((t, i) => {
            ot(e, {
                success: t,
                error: i
            })
        }
        ))
    }
    function ct(e) {
        e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
            this.media.paused === e && (this.media.paused = !e,
                ve.call(this, this.media, e ? "play" : "pause"))
    }
    const ht = {
        setup() {
            const e = this;
            le(e.elements.wrapper, e.config.classNames.embed, !0),
                e.options.speed = e.config.speed.options,
                Me.call(e),
                L(window.Vimeo) ? ht.ready.call(e) : rt(e.config.urls.vimeo.sdk).then((() => {
                    ht.ready.call(e)
                }
                )).catch((t => {
                    e.debug.warn("Vimeo SDK (player.js) failed to load", t)
                }
                ))
        },
        ready() {
            const e = this
                , t = e.config.vimeo
                , { premium: i, referrerPolicy: s, ...n } = t;
            let a = e.media.getAttribute("src")
                , l = "";
            W(a) ? (a = e.media.getAttribute(e.config.attributes.embed.id),
                l = e.media.getAttribute(e.config.attributes.embed.hash)) : l = function (e) {
                    const t = e.match(/^.*(?:vimeo.com\/|video\/)(?:\d+)(?:\?.*&*h=|\/)+(?<hash>[\d,a-f]+)/);
                    return t ? t.groups.hash : null
                }(a);
            const o = l ? {
                h: l
            } : {};
            i && Object.assign(n, {
                controls: !1,
                sidedock: !1
            });
            const r = Ke({
                loop: e.config.loop.active,
                autoplay: e.autoplay,
                muted: e.muted,
                gesture: "media",
                playsinline: !this.config.fullscreen.iosNative,
                ...o,
                ...n
            })
                , c = W(h = a) ? null : $(Number(h)) ? h : h.match(/^.*(vimeo.com\/|video\/)(\d+).*/) ? RegExp.$2 : h;
            var h;
            const u = Z("iframe")
                , d = $e(e.config.urls.vimeo.iframe, c, r);
            if (u.setAttribute("src", d),
                u.setAttribute("allowfullscreen", ""),
                u.setAttribute("allow", ["autoplay", "fullscreen", "picture-in-picture", "encrypted-media", "accelerometer", "gyroscope"].join("; ")),
                W(s) || u.setAttribute("referrerPolicy", s),
                i || !t.customControls)
                u.setAttribute("data-poster", e.poster),
                    e.media = se(u, e.media);
            else {
                const t = Z("div", {
                    class: e.config.classNames.embedContainer,
                    "data-poster": e.poster
                });
                t.appendChild(u),
                    e.media = se(t, e.media)
            }
            t.customControls || Re($e(e.config.urls.vimeo.api, d)).then((t => {
                !W(t) && t.thumbnail_url && at.setPoster.call(e, t.thumbnail_url).catch((() => { }
                ))
            }
            )),
                e.embed = new window.Vimeo.Player(u, {
                    autopause: e.config.autopause,
                    muted: e.muted
                }),
                e.media.paused = !0,
                e.media.currentTime = 0,
                e.supported.ui && e.embed.disableTextTrack(),
                e.media.play = () => (ct.call(e, !0),
                    e.embed.play()),
                e.media.pause = () => (ct.call(e, !1),
                    e.embed.pause()),
                e.media.stop = () => {
                    e.pause(),
                        e.currentTime = 0
                }
                ;
            let { currentTime: m } = e.media;
            Object.defineProperty(e.media, "currentTime", {
                get: () => m,
                set(t) {
                    const { embed: i, media: s, paused: n, volume: a } = e
                        , l = n && !i.hasPlayed;
                    s.seeking = !0,
                        ve.call(e, s, "seeking"),
                        Promise.resolve(l && i.setVolume(0)).then((() => i.setCurrentTime(t))).then((() => l && i.pause())).then((() => l && i.setVolume(a))).catch((() => { }
                        ))
                }
            });
            let p = e.config.speed.selected;
            Object.defineProperty(e.media, "playbackRate", {
                get: () => p,
                set(t) {
                    e.embed.setPlaybackRate(t).then((() => {
                        p = t,
                            ve.call(e, e.media, "ratechange")
                    }
                    )).catch((() => {
                        e.options.speed = [1]
                    }
                    ))
                }
            });
            let { volume: g } = e.config;
            Object.defineProperty(e.media, "volume", {
                get: () => g,
                set(t) {
                    e.embed.setVolume(t).then((() => {
                        g = t,
                            ve.call(e, e.media, "volumechange")
                    }
                    ))
                }
            });
            let { muted: f } = e.config;
            Object.defineProperty(e.media, "muted", {
                get: () => f,
                set(t) {
                    const i = !!O(t) && t;
                    e.embed.setVolume(i ? 0 : e.config.volume).then((() => {
                        f = i,
                            ve.call(e, e.media, "volumechange")
                    }
                    ))
                }
            });
            let b, { loop: y } = e.config;
            Object.defineProperty(e.media, "loop", {
                get: () => y,
                set(t) {
                    const i = O(t) ? t : e.config.loop.active;
                    e.embed.setLoop(i).then((() => {
                        y = i
                    }
                    ))
                }
            }),
                e.embed.getVideoUrl().then((t => {
                    b = t,
                        We.setDownloadUrl.call(e)
                }
                )).catch((e => {
                    this.debug.warn(e)
                }
                )),
                Object.defineProperty(e.media, "currentSrc", {
                    get: () => b
                }),
                Object.defineProperty(e.media, "ended", {
                    get: () => e.currentTime === e.duration
                }),
                Promise.all([e.embed.getVideoWidth(), e.embed.getVideoHeight()]).then((t => {
                    const [i, s] = t;
                    e.embed.ratio = Ie(i, s),
                        Me.call(this)
                }
                )),
                e.embed.setAutopause(e.config.autopause).then((t => {
                    e.config.autopause = t
                }
                )),
                e.embed.getVideoTitle().then((t => {
                    e.config.title = t,
                        at.setTitle.call(this)
                }
                )),
                e.embed.getCurrentTime().then((t => {
                    m = t,
                        ve.call(e, e.media, "timeupdate")
                }
                )),
                e.embed.getDuration().then((t => {
                    e.media.duration = t,
                        ve.call(e, e.media, "durationchange")
                }
                )),
                e.embed.getTextTracks().then((t => {
                    e.media.textTracks = t,
                        Ye.setup.call(e)
                }
                )),
                e.embed.on("cuechange", (({ cues: t = [] }) => {
                    const i = t.map((e => function (e) {
                        const t = document.createDocumentFragment()
                            , i = document.createElement("div");
                        return t.appendChild(i),
                            i.innerHTML = e,
                            t.firstChild.innerText
                    }(e.text)));
                    Ye.updateCues.call(e, i)
                }
                )),
                e.embed.on("loaded", (() => {
                    if (e.embed.getPaused().then((t => {
                        ct.call(e, !t),
                            t || ve.call(e, e.media, "playing")
                    }
                    )),
                        H(e.embed.element) && e.supported.ui) {
                        e.embed.element.setAttribute("tabindex", -1)
                    }
                }
                )),
                e.embed.on("bufferstart", (() => {
                    ve.call(e, e.media, "waiting")
                }
                )),
                e.embed.on("bufferend", (() => {
                    ve.call(e, e.media, "playing")
                }
                )),
                e.embed.on("play", (() => {
                    ct.call(e, !0),
                        ve.call(e, e.media, "playing")
                }
                )),
                e.embed.on("pause", (() => {
                    ct.call(e, !1)
                }
                )),
                e.embed.on("timeupdate", (t => {
                    e.media.seeking = !1,
                        m = t.seconds,
                        ve.call(e, e.media, "timeupdate")
                }
                )),
                e.embed.on("progress", (t => {
                    e.media.buffered = t.percent,
                        ve.call(e, e.media, "progress"),
                        1 === parseInt(t.percent, 10) && ve.call(e, e.media, "canplaythrough"),
                        e.embed.getDuration().then((t => {
                            t !== e.media.duration && (e.media.duration = t,
                                ve.call(e, e.media, "durationchange"))
                        }
                        ))
                }
                )),
                e.embed.on("seeked", (() => {
                    e.media.seeking = !1,
                        ve.call(e, e.media, "seeked")
                }
                )),
                e.embed.on("ended", (() => {
                    e.media.paused = !0,
                        ve.call(e, e.media, "ended")
                }
                )),
                e.embed.on("error", (t => {
                    e.media.error = t,
                        ve.call(e, e.media, "error")
                }
                )),
                t.customControls && setTimeout((() => at.build.call(e)), 0)
        }
    };
    function ut(e) {
        e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
            this.media.paused === e && (this.media.paused = !e,
                ve.call(this, this.media, e ? "play" : "pause"))
    }
    function dt(e) {
        return e.noCookie ? "https://www.youtube-nocookie.com" : "http:" === window.location.protocol ? "http://www.youtube.com" : void 0
    }
    const mt = {
        setup() {
            if (le(this.elements.wrapper, this.config.classNames.embed, !0),
                L(window.YT) && j(window.YT.Player))
                mt.ready.call(this);
            else {
                const e = window.onYouTubeIframeAPIReady;
                window.onYouTubeIframeAPIReady = () => {
                    j(e) && e(),
                        mt.ready.call(this)
                }
                    ,
                    rt(this.config.urls.youtube.sdk).catch((e => {
                        this.debug.warn("YouTube API failed to load", e)
                    }
                    ))
            }
        },
        getTitle(e) {
            Re($e(this.config.urls.youtube.api, e)).then((e => {
                if (L(e)) {
                    const { title: t, height: i, width: s } = e;
                    this.config.title = t,
                        at.setTitle.call(this),
                        this.embed.ratio = Ie(s, i)
                }
                Me.call(this)
            }
            )).catch((() => {
                Me.call(this)
            }
            ))
        },
        ready() {
            const e = this
                , t = e.config.youtube
                , i = e.media && e.media.getAttribute("id");
            if (!W(i) && i.startsWith("youtube-"))
                return;
            let s = e.media.getAttribute("src");
            W(s) && (s = e.media.getAttribute(this.config.attributes.embed.id));
            const n = W(a = s) ? null : a.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/) ? RegExp.$2 : a;
            var a;
            const l = Z("div", {
                id: `${e.provider}-${Math.floor(1e4 * Math.random())}`,
                "data-poster": t.customControls ? e.poster : void 0
            });
            if (e.media = se(l, e.media),
                t.customControls) {
                const t = e => `https://i.ytimg.com/vi/${n}/${e}default.jpg`;
                nt(t("maxres"), 121).catch((() => nt(t("sd"), 121))).catch((() => nt(t("hq")))).then((t => at.setPoster.call(e, t.src))).then((t => {
                    t.includes("maxres") || (e.elements.poster.style.backgroundSize = "cover")
                }
                )).catch((() => { }
                ))
            }
            e.embed = new window.YT.Player(e.media, {
                videoId: n,
                host: dt(t),
                playerVars: X({}, {
                    autoplay: e.config.autoplay ? 1 : 0,
                    hl: e.config.hl,
                    controls: e.supported.ui && t.customControls ? 0 : 1,
                    disablekb: 1,
                    playsinline: e.config.fullscreen.iosNative ? 0 : 1,
                    cc_load_policy: e.captions.active ? 1 : 0,
                    cc_lang_pref: e.config.captions.language,
                    widget_referrer: window ? window.location.href : null
                }, t),
                events: {
                    onError(t) {
                        if (!e.media.error) {
                            const i = t.data
                                , s = {
                                    2: "The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.",
                                    5: "The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.",
                                    100: "The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.",
                                    101: "The owner of the requested video does not allow it to be played in embedded players.",
                                    150: "The owner of the requested video does not allow it to be played in embedded players."
                                }[i] || "An unknown error occured";
                            e.media.error = {
                                code: i,
                                message: s
                            },
                                ve.call(e, e.media, "error")
                        }
                    },
                    onPlaybackRateChange(t) {
                        const i = t.target;
                        e.media.playbackRate = i.getPlaybackRate(),
                            ve.call(e, e.media, "ratechange")
                    },
                    onReady(i) {
                        if (j(e.media.play))
                            return;
                        const s = i.target;
                        mt.getTitle.call(e, n),
                            e.media.play = () => {
                                ut.call(e, !0),
                                    s.playVideo()
                            }
                            ,
                            e.media.pause = () => {
                                ut.call(e, !1),
                                    s.pauseVideo()
                            }
                            ,
                            e.media.stop = () => {
                                s.stopVideo()
                            }
                            ,
                            e.media.duration = s.getDuration(),
                            e.media.paused = !0,
                            e.media.currentTime = 0,
                            Object.defineProperty(e.media, "currentTime", {
                                get: () => Number(s.getCurrentTime()),
                                set(t) {
                                    e.paused && !e.embed.hasPlayed && e.embed.mute(),
                                        e.media.seeking = !0,
                                        ve.call(e, e.media, "seeking"),
                                        s.seekTo(t)
                                }
                            }),
                            Object.defineProperty(e.media, "playbackRate", {
                                get: () => s.getPlaybackRate(),
                                set(e) {
                                    s.setPlaybackRate(e)
                                }
                            });
                        let { volume: a } = e.config;
                        Object.defineProperty(e.media, "volume", {
                            get: () => a,
                            set(t) {
                                a = t,
                                    s.setVolume(100 * a),
                                    ve.call(e, e.media, "volumechange")
                            }
                        });
                        let { muted: l } = e.config;
                        Object.defineProperty(e.media, "muted", {
                            get: () => l,
                            set(t) {
                                const i = O(t) ? t : l;
                                l = i,
                                    s[i ? "mute" : "unMute"](),
                                    s.setVolume(100 * a),
                                    ve.call(e, e.media, "volumechange")
                            }
                        }),
                            Object.defineProperty(e.media, "currentSrc", {
                                get: () => s.getVideoUrl()
                            }),
                            Object.defineProperty(e.media, "ended", {
                                get: () => e.currentTime === e.duration
                            });
                        const o = s.getAvailablePlaybackRates();
                        e.options.speed = o.filter((t => e.config.speed.options.includes(t))),
                            e.supported.ui && t.customControls && e.media.setAttribute("tabindex", -1),
                            ve.call(e, e.media, "timeupdate"),
                            ve.call(e, e.media, "durationchange"),
                            clearInterval(e.timers.buffering),
                            e.timers.buffering = setInterval((() => {
                                e.media.buffered = s.getVideoLoadedFraction(),
                                    (null === e.media.lastBuffered || e.media.lastBuffered < e.media.buffered) && ve.call(e, e.media, "progress"),
                                    e.media.lastBuffered = e.media.buffered,
                                    1 === e.media.buffered && (clearInterval(e.timers.buffering),
                                        ve.call(e, e.media, "canplaythrough"))
                            }
                            ), 200),
                            t.customControls && setTimeout((() => at.build.call(e)), 50)
                    },
                    onStateChange(i) {
                        const s = i.target;
                        clearInterval(e.timers.playing);
                        switch (e.media.seeking && [1, 2].includes(i.data) && (e.media.seeking = !1,
                            ve.call(e, e.media, "seeked")),
                        i.data) {
                            case -1:
                                ve.call(e, e.media, "timeupdate"),
                                    e.media.buffered = s.getVideoLoadedFraction(),
                                    ve.call(e, e.media, "progress");
                                break;
                            case 0:
                                ut.call(e, !1),
                                    e.media.loop ? (s.stopVideo(),
                                        s.playVideo()) : ve.call(e, e.media, "ended");
                                break;
                            case 1:
                                t.customControls && !e.config.autoplay && e.media.paused && !e.embed.hasPlayed ? e.media.pause() : (ut.call(e, !0),
                                    ve.call(e, e.media, "playing"),
                                    e.timers.playing = setInterval((() => {
                                        ve.call(e, e.media, "timeupdate")
                                    }
                                    ), 50),
                                    e.media.duration !== s.getDuration() && (e.media.duration = s.getDuration(),
                                        ve.call(e, e.media, "durationchange")));
                                break;
                            case 2:
                                e.muted || e.embed.unMute(),
                                    ut.call(e, !1);
                                break;
                            case 3:
                                ve.call(e, e.media, "waiting")
                        }
                        ve.call(e, e.elements.container, "statechange", !1, {
                            code: i.data
                        })
                    }
                }
            })
        }
    }
        , pt = {
            setup() {
                this.media ? (le(this.elements.container, this.config.classNames.type.replace("{0}", this.type), !0),
                    le(this.elements.container, this.config.classNames.provider.replace("{0}", this.provider), !0),
                    this.isEmbed && le(this.elements.container, this.config.classNames.type.replace("{0}", "video"), !0),
                    this.isVideo && (this.elements.wrapper = Z("div", {
                        class: this.config.classNames.video
                    }),
                        J(this.media, this.elements.wrapper),
                        this.elements.poster = Z("div", {
                            class: this.config.classNames.poster
                        }),
                        this.elements.wrapper.appendChild(this.elements.poster)),
                    this.isHTML5 ? Le.setup.call(this) : this.isYouTube ? mt.setup.call(this) : this.isVimeo && ht.setup.call(this)) : this.debug.warn("No media element found!")
            }
        };
    class gt {
        constructor(t) {
            e(this, "load", (() => {
                this.enabled && (L(window.google) && L(window.google.ima) ? this.ready() : rt(this.player.config.urls.googleIMA.sdk).then((() => {
                    this.ready()
                }
                )).catch((() => {
                    this.trigger("error", new Error("Google IMA SDK failed to load"))
                }
                )))
            }
            )),
                e(this, "ready", (() => {
                    var e;
                    this.enabled || ((e = this).manager && e.manager.destroy(),
                        e.elements.displayContainer && e.elements.displayContainer.destroy(),
                        e.elements.container.remove()),
                        this.startSafetyTimer(12e3, "ready()"),
                        this.managerPromise.then((() => {
                            this.clearSafetyTimer("onAdsManagerLoaded()")
                        }
                        )),
                        this.listeners(),
                        this.setupIMA()
                }
                )),
                e(this, "setupIMA", (() => {
                    this.elements.container = Z("div", {
                        class: this.player.config.classNames.ads
                    }),
                        this.player.elements.container.appendChild(this.elements.container),
                        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED),
                        google.ima.settings.setLocale(this.player.config.ads.language),
                        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline),
                        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media),
                        this.loader = new google.ima.AdsLoader(this.elements.displayContainer),
                        this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, (e => this.onAdsManagerLoaded(e)), !1),
                        this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (e => this.onAdError(e)), !1),
                        this.requestAds()
                }
                )),
                e(this, "requestAds", (() => {
                    const { container: e } = this.player.elements;
                    try {
                        const t = new google.ima.AdsRequest;
                        t.adTagUrl = this.tagUrl,
                            t.linearAdSlotWidth = e.offsetWidth,
                            t.linearAdSlotHeight = e.offsetHeight,
                            t.nonLinearAdSlotWidth = e.offsetWidth,
                            t.nonLinearAdSlotHeight = e.offsetHeight,
                            t.forceNonLinearFullSlot = !1,
                            t.setAdWillPlayMuted(!this.player.muted),
                            this.loader.requestAds(t)
                    } catch (e) {
                        this.onAdError(e)
                    }
                }
                )),
                e(this, "pollCountdown", ((e = !1) => {
                    if (!e)
                        return clearInterval(this.countdownTimer),
                            void this.elements.container.removeAttribute("data-badge-text");
                    this.countdownTimer = setInterval((() => {
                        const e = Ue(Math.max(this.manager.getRemainingTime(), 0))
                            , t = `${He.get("advertisement", this.player.config)} - ${e}`;
                        this.elements.container.setAttribute("data-badge-text", t)
                    }
                    ), 100)
                }
                )),
                e(this, "onAdsManagerLoaded", (e => {
                    if (!this.enabled)
                        return;
                    const t = new google.ima.AdsRenderingSettings;
                    t.restoreCustomPlaybackStateOnAdBreakComplete = !0,
                        t.enablePreloading = !0,
                        this.manager = e.getAdsManager(this.player, t),
                        this.cuePoints = this.manager.getCuePoints(),
                        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (e => this.onAdError(e))),
                        Object.keys(google.ima.AdEvent.Type).forEach((e => {
                            this.manager.addEventListener(google.ima.AdEvent.Type[e], (e => this.onAdEvent(e)))
                        }
                        )),
                        this.trigger("loaded")
                }
                )),
                e(this, "addCuePoints", (() => {
                    W(this.cuePoints) || this.cuePoints.forEach((e => {
                        if (0 !== e && -1 !== e && e < this.player.duration) {
                            const t = this.player.elements.progress;
                            if (H(t)) {
                                const i = 100 / this.player.duration * e
                                    , s = Z("span", {
                                        class: this.player.config.classNames.cues
                                    });
                                s.style.left = `${i.toString()}%`,
                                    t.appendChild(s)
                            }
                        }
                    }
                    ))
                }
                )),
                e(this, "onAdEvent", (e => {
                    const { container: t } = this.player.elements
                        , i = e.getAd()
                        , s = e.getAdData();
                    switch ((e => {
                        ve.call(this.player, this.player.media, `ads ${e.replace(/_/g, "").toLowerCase()}`)
                    }
                    )(e.type),
                    e.type) {
                        case google.ima.AdEvent.Type.LOADED:
                            this.trigger("loaded"),
                                this.pollCountdown(!0),
                                i.isLinear() || (i.width = t.offsetWidth,
                                    i.height = t.offsetHeight);
                            break;
                        case google.ima.AdEvent.Type.STARTED:
                            this.manager.setVolume(this.player.volume);
                            break;
                        case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                            this.player.ended ? this.loadAds() : this.loader.contentComplete();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:
                            this.pauseContent();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:
                            this.pollCountdown(),
                                this.resumeContent();
                            break;
                        case google.ima.AdEvent.Type.LOG:
                            s.adError && this.player.debug.warn(`Non-fatal ad error: ${s.adError.getMessage()}`)
                    }
                }
                )),
                e(this, "onAdError", (e => {
                    this.cancel(),
                        this.player.debug.warn("Ads error", e)
                }
                )),
                e(this, "listeners", (() => {
                    const { container: e } = this.player.elements;
                    let t;
                    this.player.on("canplay", (() => {
                        this.addCuePoints()
                    }
                    )),
                        this.player.on("ended", (() => {
                            this.loader.contentComplete()
                        }
                        )),
                        this.player.on("timeupdate", (() => {
                            t = this.player.currentTime
                        }
                        )),
                        this.player.on("seeked", (() => {
                            const e = this.player.currentTime;
                            W(this.cuePoints) || this.cuePoints.forEach(((i, s) => {
                                t < i && i < e && (this.manager.discardAdBreak(),
                                    this.cuePoints.splice(s, 1))
                            }
                            ))
                        }
                        )),
                        window.addEventListener("resize", (() => {
                            this.manager && this.manager.resize(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL)
                        }
                        ))
                }
                )),
                e(this, "play", (() => {
                    const { container: e } = this.player.elements;
                    this.managerPromise || this.resumeContent(),
                        this.managerPromise.then((() => {
                            this.manager.setVolume(this.player.volume),
                                this.elements.displayContainer.initialize();
                            try {
                                this.initialized || (this.manager.init(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL),
                                    this.manager.start()),
                                    this.initialized = !0
                            } catch (e) {
                                this.onAdError(e)
                            }
                        }
                        )).catch((() => { }
                        ))
                }
                )),
                e(this, "resumeContent", (() => {
                    this.elements.container.style.zIndex = "",
                        this.playing = !1,
                        ke(this.player.media.play())
                }
                )),
                e(this, "pauseContent", (() => {
                    this.elements.container.style.zIndex = 3,
                        this.playing = !0,
                        this.player.media.pause()
                }
                )),
                e(this, "cancel", (() => {
                    this.initialized && this.resumeContent(),
                        this.trigger("error"),
                        this.loadAds()
                }
                )),
                e(this, "loadAds", (() => {
                    this.managerPromise.then((() => {
                        this.manager && this.manager.destroy(),
                            this.managerPromise = new Promise((e => {
                                this.on("loaded", e),
                                    this.player.debug.log(this.manager)
                            }
                            )),
                            this.initialized = !1,
                            this.requestAds()
                    }
                    )).catch((() => { }
                    ))
                }
                )),
                e(this, "trigger", ((e, ...t) => {
                    const i = this.events[e];
                    q(i) && i.forEach((e => {
                        j(e) && e.apply(this, t)
                    }
                    ))
                }
                )),
                e(this, "on", ((e, t) => (q(this.events[e]) || (this.events[e] = []),
                    this.events[e].push(t),
                    this))),
                e(this, "startSafetyTimer", ((e, t) => {
                    this.player.debug.log(`Safety timer invoked from: ${t}`),
                        this.safetyTimer = setTimeout((() => {
                            this.cancel(),
                                this.clearSafetyTimer("startSafetyTimer()")
                        }
                        ), e)
                }
                )),
                e(this, "clearSafetyTimer", (e => {
                    I(this.safetyTimer) || (this.player.debug.log(`Safety timer cleared from: ${e}`),
                        clearTimeout(this.safetyTimer),
                        this.safetyTimer = null)
                }
                )),
                this.player = t,
                this.config = t.config.ads,
                this.playing = !1,
                this.initialized = !1,
                this.elements = {
                    container: null,
                    displayContainer: null
                },
                this.manager = null,
                this.loader = null,
                this.cuePoints = null,
                this.events = {},
                this.safetyTimer = null,
                this.countdownTimer = null,
                this.managerPromise = new Promise(((e, t) => {
                    this.on("loaded", e),
                        this.on("error", t)
                }
                )),
                this.load()
        }
        get enabled() {
            const { config: e } = this;
            return this.player.isHTML5 && this.player.isVideo && e.enabled && (!W(e.publisherId) || U(e.tagUrl))
        }
        get tagUrl() {
            const { config: e } = this;
            if (U(e.tagUrl))
                return e.tagUrl;
            return `https://go.aniview.com/api/adserver6/vast/?${Ke({
                AV_PUBLISHERID: "58c25bb0073ef448b1087ad6",
                AV_CHANNELID: "5a0458dc28a06145e4519d21",
                AV_URL: window.location.hostname,
                cb: Date.now(),
                AV_WIDTH: 640,
                AV_HEIGHT: 480,
                AV_CDIM2: e.publisherId
            })}`
        }
    }
    const ft = e => {
        const t = [];
        return e.split(/\r\n\r\n|\n\n|\r\r/).forEach((e => {
            const i = {};
            e.split(/\r\n|\n|\r/).forEach((e => {
                if ($(i.startTime)) {
                    if (!W(e.trim()) && W(i.text)) {
                        const t = e.trim().split("#xywh=");
                        [i.text] = t,
                            t[1] && ([i.x, i.y, i.w, i.h] = t[1].split(","))
                    }
                } else {
                    const t = e.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/);
                    t && (i.startTime = 60 * Number(t[1] || 0) * 60 + 60 * Number(t[2]) + Number(t[3]) + Number(`0.${t[4]}`),
                        i.endTime = 60 * Number(t[6] || 0) * 60 + 60 * Number(t[7]) + Number(t[8]) + Number(`0.${t[9]}`))
                }
            }
            )),
                i.text && t.push(i)
        }
        )),
            t
    }
        , bt = (e, t) => {
            const i = {};
            return e > t.width / t.height ? (i.width = t.width,
                i.height = 1 / e * t.width) : (i.height = t.height,
                    i.width = e * t.height),
                i
        }
        ;
    class yt {
        constructor(t) {
            e(this, "load", (() => {
                this.player.elements.display.seekTooltip && (this.player.elements.display.seekTooltip.hidden = this.enabled),
                    this.enabled && this.getThumbnails().then((() => {
                        this.enabled && (this.render(),
                            this.determineContainerAutoSizing(),
                            this.loaded = !0)
                    }
                    ))
            }
            )),
                e(this, "getThumbnails", (() => new Promise((e => {
                    const { src: t } = this.player.config.previewThumbnails;
                    if (W(t))
                        throw new Error("Missing previewThumbnails.src config attribute");
                    const i = () => {
                        this.thumbnails.sort(((e, t) => e.height - t.height)),
                            this.player.debug.log("Preview thumbnails", this.thumbnails),
                            e()
                    }
                        ;
                    if (j(t))
                        t((e => {
                            this.thumbnails = e,
                                i()
                        }
                        ));
                    else {
                        const e = (_(t) ? [t] : t).map((e => this.getThumbnail(e)));
                        Promise.all(e).then(i)
                    }
                }
                )))),
                e(this, "getThumbnail", (e => new Promise((t => {
                    Re(e).then((i => {
                        const s = {
                            frames: ft(i),
                            height: null,
                            urlPrefix: ""
                        };
                        s.frames[0].text.startsWith("/") || s.frames[0].text.startsWith("http://") || s.frames[0].text.startsWith("https://") || (s.urlPrefix = e.substring(0, e.lastIndexOf("/") + 1));
                        const n = new Image;
                        n.onload = () => {
                            s.height = n.naturalHeight,
                                s.width = n.naturalWidth,
                                this.thumbnails.push(s),
                                t()
                        }
                            ,
                            n.src = s.urlPrefix + s.frames[0].text
                    }
                    ))
                }
                )))),
                e(this, "startMove", (e => {
                    if (this.loaded && F(e) && ["touchmove", "mousemove"].includes(e.type) && this.player.media.duration) {
                        if ("touchmove" === e.type)
                            this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);
                        else {
                            const t = this.player.elements.progress.getBoundingClientRect()
                                , i = 100 / t.width * (e.pageX - t.left);
                            this.seekTime = this.player.media.duration * (i / 100),
                                this.seekTime < 0 && (this.seekTime = 0),
                                this.seekTime > this.player.media.duration - 1 && (this.seekTime = this.player.media.duration - 1),
                                this.mousePosX = e.pageX,
                                this.elements.thumb.time.innerText = Ue(this.seekTime)
                        }
                        this.showImageAtCurrentTime()
                    }
                }
                )),
                e(this, "endMove", (() => {
                    this.toggleThumbContainer(!1, !0)
                }
                )),
                e(this, "startScrubbing", (e => {
                    (I(e.button) || !1 === e.button || 0 === e.button) && (this.mouseDown = !0,
                        this.player.media.duration && (this.toggleScrubbingContainer(!0),
                            this.toggleThumbContainer(!1, !0),
                            this.showImageAtCurrentTime()))
                }
                )),
                e(this, "endScrubbing", (() => {
                    this.mouseDown = !1,
                        Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime) ? this.toggleScrubbingContainer(!1) : ye.call(this.player, this.player.media, "timeupdate", (() => {
                            this.mouseDown || this.toggleScrubbingContainer(!1)
                        }
                        ))
                }
                )),
                e(this, "listeners", (() => {
                    this.player.on("play", (() => {
                        this.toggleThumbContainer(!1, !0)
                    }
                    )),
                        this.player.on("seeked", (() => {
                            this.toggleThumbContainer(!1)
                        }
                        )),
                        this.player.on("timeupdate", (() => {
                            this.lastTime = this.player.media.currentTime
                        }
                        ))
                }
                )),
                e(this, "render", (() => {
                    this.elements.thumb.container = Z("div", {
                        class: this.player.config.classNames.previewThumbnails.thumbContainer
                    }),
                        this.elements.thumb.imageContainer = Z("div", {
                            class: this.player.config.classNames.previewThumbnails.imageContainer
                        }),
                        this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);
                    const e = Z("div", {
                        class: this.player.config.classNames.previewThumbnails.timeContainer
                    });
                    this.elements.thumb.time = Z("span", {}, "00:00"),
                        e.appendChild(this.elements.thumb.time),
                        this.elements.thumb.container.appendChild(e),
                        H(this.player.elements.progress) && this.player.elements.progress.appendChild(this.elements.thumb.container),
                        this.elements.scrubbing.container = Z("div", {
                            class: this.player.config.classNames.previewThumbnails.scrubbingContainer
                        }),
                        this.player.elements.wrapper.appendChild(this.elements.scrubbing.container)
                }
                )),
                e(this, "destroy", (() => {
                    this.elements.thumb.container && this.elements.thumb.container.remove(),
                        this.elements.scrubbing.container && this.elements.scrubbing.container.remove()
                }
                )),
                e(this, "showImageAtCurrentTime", (() => {
                    this.mouseDown ? this.setScrubbingContainerSize() : this.setThumbContainerSizeAndPos();
                    const e = this.thumbnails[0].frames.findIndex((e => this.seekTime >= e.startTime && this.seekTime <= e.endTime))
                        , t = e >= 0;
                    let i = 0;
                    this.mouseDown || this.toggleThumbContainer(t),
                        t && (this.thumbnails.forEach(((t, s) => {
                            this.loadedImages.includes(t.frames[e].text) && (i = s)
                        }
                        )),
                            e !== this.showingThumb && (this.showingThumb = e,
                                this.loadImage(i)))
                }
                )),
                e(this, "loadImage", ((e = 0) => {
                    const t = this.showingThumb
                        , i = this.thumbnails[e]
                        , { urlPrefix: s } = i
                        , n = i.frames[t]
                        , a = i.frames[t].text
                        , l = s + a;
                    if (this.currentImageElement && this.currentImageElement.dataset.filename === a)
                        this.showImage(this.currentImageElement, n, e, t, a, !1),
                            this.currentImageElement.dataset.index = t,
                            this.removeOldImages(this.currentImageElement);
                    else {
                        this.loadingImage && this.usingSprites && (this.loadingImage.onload = null);
                        const i = new Image;
                        i.src = l,
                            i.dataset.index = t,
                            i.dataset.filename = a,
                            this.showingThumbFilename = a,
                            this.player.debug.log(`Loading image: ${l}`),
                            i.onload = () => this.showImage(i, n, e, t, a, !0),
                            this.loadingImage = i,
                            this.removeOldImages(i)
                    }
                }
                )),
                e(this, "showImage", ((e, t, i, s, n, a = !0) => {
                    this.player.debug.log(`Showing thumb: ${n}. num: ${s}. qual: ${i}. newimg: ${a}`),
                        this.setImageSizeAndOffset(e, t),
                        a && (this.currentImageContainer.appendChild(e),
                            this.currentImageElement = e,
                            this.loadedImages.includes(n) || this.loadedImages.push(n)),
                        this.preloadNearby(s, !0).then(this.preloadNearby(s, !1)).then(this.getHigherQuality(i, e, t, n))
                }
                )),
                e(this, "removeOldImages", (e => {
                    Array.from(this.currentImageContainer.children).forEach((t => {
                        if ("img" !== t.tagName.toLowerCase())
                            return;
                        const i = this.usingSprites ? 500 : 1e3;
                        if (t.dataset.index !== e.dataset.index && !t.dataset.deleting) {
                            t.dataset.deleting = !0;
                            const { currentImageContainer: e } = this;
                            setTimeout((() => {
                                e.removeChild(t),
                                    this.player.debug.log(`Removing thumb: ${t.dataset.filename}`)
                            }
                            ), i)
                        }
                    }
                    ))
                }
                )),
                e(this, "preloadNearby", ((e, t = !0) => new Promise((i => {
                    setTimeout((() => {
                        const s = this.thumbnails[0].frames[e].text;
                        if (this.showingThumbFilename === s) {
                            let n;
                            n = t ? this.thumbnails[0].frames.slice(e) : this.thumbnails[0].frames.slice(0, e).reverse();
                            let a = !1;
                            n.forEach((e => {
                                const t = e.text;
                                if (t !== s && !this.loadedImages.includes(t)) {
                                    a = !0,
                                        this.player.debug.log(`Preloading thumb filename: ${t}`);
                                    const { urlPrefix: e } = this.thumbnails[0]
                                        , s = e + t
                                        , n = new Image;
                                    n.src = s,
                                        n.onload = () => {
                                            this.player.debug.log(`Preloaded thumb filename: ${t}`),
                                                this.loadedImages.includes(t) || this.loadedImages.push(t),
                                                i()
                                        }
                                }
                            }
                            )),
                                a || i()
                        }
                    }
                    ), 300)
                }
                )))),
                e(this, "getHigherQuality", ((e, t, i, s) => {
                    if (e < this.thumbnails.length - 1) {
                        let n = t.naturalHeight;
                        this.usingSprites && (n = i.h),
                            n < this.thumbContainerHeight && setTimeout((() => {
                                this.showingThumbFilename === s && (this.player.debug.log(`Showing higher quality thumb for: ${s}`),
                                    this.loadImage(e + 1))
                            }
                            ), 300)
                    }
                }
                )),
                e(this, "toggleThumbContainer", ((e = !1, t = !1) => {
                    const i = this.player.config.classNames.previewThumbnails.thumbContainerShown;
                    this.elements.thumb.container.classList.toggle(i, e),
                        !e && t && (this.showingThumb = null,
                            this.showingThumbFilename = null)
                }
                )),
                e(this, "toggleScrubbingContainer", ((e = !1) => {
                    const t = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;
                    this.elements.scrubbing.container.classList.toggle(t, e),
                        e || (this.showingThumb = null,
                            this.showingThumbFilename = null)
                }
                )),
                e(this, "determineContainerAutoSizing", (() => {
                    (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) && (this.sizeSpecifiedInCSS = !0)
                }
                )),
                e(this, "setThumbContainerSizeAndPos", (() => {
                    if (this.sizeSpecifiedInCSS) {
                        if (this.elements.thumb.imageContainer.clientHeight > 20 && this.elements.thumb.imageContainer.clientWidth < 20) {
                            const e = Math.floor(this.elements.thumb.imageContainer.clientHeight * this.thumbAspectRatio);
                            this.elements.thumb.imageContainer.style.width = `${e}px`
                        } else if (this.elements.thumb.imageContainer.clientHeight < 20 && this.elements.thumb.imageContainer.clientWidth > 20) {
                            const e = Math.floor(this.elements.thumb.imageContainer.clientWidth / this.thumbAspectRatio);
                            this.elements.thumb.imageContainer.style.height = `${e}px`
                        }
                    } else {
                        const e = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);
                        this.elements.thumb.imageContainer.style.height = `${this.thumbContainerHeight}px`,
                            this.elements.thumb.imageContainer.style.width = `${e}px`
                    }
                    this.setThumbContainerPos()
                }
                )),
                e(this, "setThumbContainerPos", (() => {
                    const e = this.player.elements.progress.getBoundingClientRect()
                        , t = this.player.elements.container.getBoundingClientRect()
                        , { container: i } = this.elements.thumb
                        , s = t.left - e.left + 10
                        , n = t.right - e.left - i.clientWidth - 10;
                    let a = this.mousePosX - e.left - i.clientWidth / 2;
                    a < s && (a = s),
                        a > n && (a = n),
                        i.style.left = `${a}px`
                }
                )),
                e(this, "setScrubbingContainerSize", (() => {
                    const { width: e, height: t } = bt(this.thumbAspectRatio, {
                        width: this.player.media.clientWidth,
                        height: this.player.media.clientHeight
                    });
                    this.elements.scrubbing.container.style.width = `${e}px`,
                        this.elements.scrubbing.container.style.height = `${t}px`
                }
                )),
                e(this, "setImageSizeAndOffset", ((e, t) => {
                    if (!this.usingSprites)
                        return;
                    const i = this.thumbContainerHeight / t.h;
                    e.style.height = e.naturalHeight * i + "px",
                        e.style.width = e.naturalWidth * i + "px",
                        e.style.left = `-${t.x * i}px`,
                        e.style.top = `-${t.y * i}px`
                }
                )),
                this.player = t,
                this.thumbnails = [],
                this.loaded = !1,
                this.lastMouseMoveTime = Date.now(),
                this.mouseDown = !1,
                this.loadedImages = [],
                this.elements = {
                    thumb: {},
                    scrubbing: {}
                },
                this.load()
        }
        get enabled() {
            return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled
        }
        get currentImageContainer() {
            return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer
        }
        get usingSprites() {
            return Object.keys(this.thumbnails[0].frames[0]).includes("w")
        }
        get thumbAspectRatio() {
            return this.usingSprites ? this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h : this.thumbnails[0].width / this.thumbnails[0].height
        }
        get thumbContainerHeight() {
            if (this.mouseDown) {
                const { height: e } = bt(this.thumbAspectRatio, {
                    width: this.player.media.clientWidth,
                    height: this.player.media.clientHeight
                });
                return e
            }
            return this.sizeSpecifiedInCSS ? this.elements.thumb.imageContainer.clientHeight : Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4)
        }
        get currentImageElement() {
            return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement
        }
        set currentImageElement(e) {
            this.mouseDown ? this.currentScrubbingImageElement = e : this.currentThumbnailImageElement = e
        }
    }
    const vt = {
        insertElements(e, t) {
            _(t) ? ee(e, this.media, {
                src: t
            }) : q(t) && t.forEach((t => {
                ee(e, this.media, t)
            }
            ))
        },
        change(e) {
            Q(e, "sources.length") ? (Le.cancelRequests.call(this),
                this.destroy.call(this, (() => {
                    this.options.quality = [],
                        te(this.media),
                        this.media = null,
                        H(this.elements.container) && this.elements.container.removeAttribute("class");
                    const { sources: t, type: i } = e
                        , [{ provider: s = Ge.html5, src: n }] = t
                        , a = "html5" === s ? i : "div"
                        , l = "html5" === s ? {} : {
                            src: n
                        };
                    Object.assign(this, {
                        provider: s,
                        type: i,
                        supported: me.check(i, s, this.config.playsinline),
                        media: Z(a, l)
                    }),
                        this.elements.container.appendChild(this.media),
                        O(e.autoplay) && (this.config.autoplay = e.autoplay),
                        this.isHTML5 && (this.config.crossorigin && this.media.setAttribute("crossorigin", ""),
                            this.config.autoplay && this.media.setAttribute("autoplay", ""),
                            W(e.poster) || (this.poster = e.poster),
                            this.config.loop.active && this.media.setAttribute("loop", ""),
                            this.config.muted && this.media.setAttribute("muted", ""),
                            this.config.playsinline && this.media.setAttribute("playsinline", "")),
                        at.addStyleHook.call(this),
                        this.isHTML5 && vt.insertElements.call(this, "source", t),
                        this.config.title = e.title,
                        pt.setup.call(this),
                        this.isHTML5 && Object.keys(e).includes("tracks") && vt.insertElements.call(this, "track", e.tracks),
                        (this.isHTML5 || this.isEmbed && !this.supported.ui) && at.build.call(this),
                        this.isHTML5 && this.media.load(),
                        W(e.previewThumbnails) || (Object.assign(this.config.previewThumbnails, e.previewThumbnails),
                            this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(),
                                this.previewThumbnails = null),
                            this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))),
                        this.fullscreen.update()
                }
                ), !0)) : this.debug.warn("Invalid source format")
        }
    };
    class wt {
        constructor(t, i) {
            if (e(this, "play", (() => j(this.media.play) ? (this.ads && this.ads.enabled && this.ads.managerPromise.then((() => this.ads.play())).catch((() => ke(this.media.play()))),
                this.media.play()) : null)),
                e(this, "pause", (() => this.playing && j(this.media.pause) ? this.media.pause() : null)),
                e(this, "togglePlay", (e => (O(e) ? e : !this.playing) ? this.play() : this.pause())),
                e(this, "stop", (() => {
                    this.isHTML5 ? (this.pause(),
                        this.restart()) : j(this.media.stop) && this.media.stop()
                }
                )),
                e(this, "restart", (() => {
                    this.currentTime = 0
                }
                )),
                e(this, "rewind", (e => {
                    this.currentTime -= $(e) ? e : this.config.seekTime
                }
                )),
                e(this, "forward", (e => {
                    this.currentTime += $(e) ? e : this.config.seekTime
                }
                )),
                e(this, "increaseVolume", (e => {
                    const t = this.media.muted ? 0 : this.volume;
                    this.volume = t + ($(e) ? e : 0)
                }
                )),
                e(this, "decreaseVolume", (e => {
                    this.increaseVolume(-e)
                }
                )),
                e(this, "airplay", (() => {
                    me.airplay && this.media.webkitShowPlaybackTargetPicker()
                }
                )),
                e(this, "toggleControls", (e => {
                    if (this.supported.ui && !this.isAudio) {
                        const t = oe(this.elements.container, this.config.classNames.hideControls)
                            , i = void 0 === e ? void 0 : !e
                            , s = le(this.elements.container, this.config.classNames.hideControls, i);
                        if (s && q(this.config.controls) && this.config.controls.includes("settings") && !W(this.config.settings) && We.toggleMenu.call(this, !1),
                            s !== t) {
                            const e = s ? "controlshidden" : "controlsshown";
                            ve.call(this, this.media, e)
                        }
                        return !s
                    }
                    return !1
                }
                )),
                e(this, "on", ((e, t) => {
                    fe.call(this, this.elements.container, e, t)
                }
                )),
                e(this, "once", ((e, t) => {
                    ye.call(this, this.elements.container, e, t)
                }
                )),
                e(this, "off", ((e, t) => {
                    be(this.elements.container, e, t)
                }
                )),
                e(this, "destroy", ((e, t = !1) => {
                    if (!this.ready)
                        return;
                    const i = () => {
                        document.body.style.overflow = "",
                            this.embed = null,
                            t ? (Object.keys(this.elements).length && (te(this.elements.buttons.play),
                                te(this.elements.captions),
                                te(this.elements.controls),
                                te(this.elements.wrapper),
                                this.elements.buttons.play = null,
                                this.elements.captions = null,
                                this.elements.controls = null,
                                this.elements.wrapper = null),
                                j(e) && e()) : (we.call(this),
                                    Le.cancelRequests.call(this),
                                    se(this.elements.original, this.elements.container),
                                    ve.call(this, this.elements.original, "destroyed", !0),
                                    j(e) && e.call(this.elements.original),
                                    this.ready = !1,
                                    setTimeout((() => {
                                        this.elements = null,
                                            this.media = null
                                    }
                                    ), 200))
                    }
                        ;
                    this.stop(),
                        clearTimeout(this.timers.loading),
                        clearTimeout(this.timers.controls),
                        clearTimeout(this.timers.resized),
                        this.isHTML5 ? (at.toggleNativeControls.call(this, !0),
                            i()) : this.isYouTube ? (clearInterval(this.timers.buffering),
                                clearInterval(this.timers.playing),
                                null !== this.embed && j(this.embed.destroy) && this.embed.destroy(),
                                i()) : this.isVimeo && (null !== this.embed && this.embed.unload().then(i),
                                    setTimeout(i, 200))
                }
                )),
                e(this, "supports", (e => me.mime.call(this, e))),
                this.timers = {},
                this.ready = !1,
                this.loading = !1,
                this.failed = !1,
                this.touch = me.touch,
                this.media = t,
                _(this.media) && (this.media = document.querySelectorAll(this.media)),
                (window.jQuery && this.media instanceof jQuery || D(this.media) || q(this.media)) && (this.media = this.media[0]),
                this.config = X({}, Qe, wt.defaults, i || {}, (() => {
                    try {
                        return JSON.parse(this.media.getAttribute("data-plyr-config"))
                    } catch (e) {
                        return {}
                    }
                }
                )()),
                this.elements = {
                    container: null,
                    fullscreen: null,
                    captions: null,
                    buttons: {},
                    display: {},
                    progress: {},
                    inputs: {},
                    settings: {
                        popup: null,
                        menu: null,
                        panels: {},
                        buttons: {}
                    }
                },
                this.captions = {
                    active: null,
                    currentTrack: -1,
                    meta: new WeakMap
                },
                this.fullscreen = {
                    active: !1
                },
                this.options = {
                    speed: [],
                    quality: []
                },
                this.debug = new it(this.config.debug),
                this.debug.log("Config", this.config),
                this.debug.log("Support", me),
                I(this.media) || !H(this.media))
                return void this.debug.error("Setup failed: no suitable element passed");
            if (this.media.plyr)
                return void this.debug.warn("Target already setup");
            if (!this.config.enabled)
                return void this.debug.error("Setup failed: disabled by config");
            if (!me.check().api)
                return void this.debug.error("Setup failed: no support");
            const s = this.media.cloneNode(!0);
            s.autoplay = !1,
                this.elements.original = s;
            const n = this.media.tagName.toLowerCase();
            let a = null
                , l = null;
            switch (n) {
                case "div":
                    if (a = this.media.querySelector("iframe"),
                        H(a)) {
                        if (l = ze(a.getAttribute("src")),
                            this.provider = function (e) {
                                return /^(https?:\/\/)?(www\.)?(youtube\.com|youtube-nocookie\.com|youtu\.?be)\/.+$/.test(e) ? Ge.youtube : /^https?:\/\/player.vimeo.com\/video\/\d{0,9}(?=\b|\/)/.test(e) ? Ge.vimeo : null
                            }(l.toString()),
                            this.elements.container = this.media,
                            this.media = a,
                            this.elements.container.className = "",
                            l.search.length) {
                            const e = ["1", "true"];
                            e.includes(l.searchParams.get("autoplay")) && (this.config.autoplay = !0),
                                e.includes(l.searchParams.get("loop")) && (this.config.loop.active = !0),
                                this.isYouTube ? (this.config.playsinline = e.includes(l.searchParams.get("playsinline")),
                                    this.config.youtube.hl = l.searchParams.get("hl")) : this.config.playsinline = !0
                        }
                    } else
                        this.provider = this.media.getAttribute(this.config.attributes.embed.provider),
                            this.media.removeAttribute(this.config.attributes.embed.provider);
                    if (W(this.provider) || !Object.values(Ge).includes(this.provider))
                        return void this.debug.error("Setup failed: Invalid provider");
                    this.type = et;
                    break;
                case "video":
                case "audio":
                    this.type = n,
                        this.provider = Ge.html5,
                        this.media.hasAttribute("crossorigin") && (this.config.crossorigin = !0),
                        this.media.hasAttribute("autoplay") && (this.config.autoplay = !0),
                        (this.media.hasAttribute("playsinline") || this.media.hasAttribute("webkit-playsinline")) && (this.config.playsinline = !0),
                        this.media.hasAttribute("muted") && (this.config.muted = !0),
                        this.media.hasAttribute("loop") && (this.config.loop.active = !0);
                    break;
                default:
                    return void this.debug.error("Setup failed: unsupported type")
            }
            this.supported = me.check(this.type, this.provider, this.config.playsinline),
                this.supported.api ? (this.eventListeners = [],
                    this.listeners = new lt(this),
                    this.storage = new Fe(this),
                    this.media.plyr = this,
                    H(this.elements.container) || (this.elements.container = Z("div", {
                        tabindex: 0
                    }),
                        J(this.media, this.elements.container)),
                    at.migrateStyles.call(this),
                    at.addStyleHook.call(this),
                    pt.setup.call(this),
                    this.config.debug && fe.call(this, this.elements.container, this.config.events.join(" "), (e => {
                        this.debug.log(`event: ${e.type}`)
                    }
                    )),
                    this.fullscreen = new st(this),
                    (this.isHTML5 || this.isEmbed && !this.supported.ui) && at.build.call(this),
                    this.listeners.container(),
                    this.listeners.global(),
                    this.config.ads.enabled && (this.ads = new gt(this)),
                    this.isHTML5 && this.config.autoplay && this.once("canplay", (() => ke(this.play()))),
                    this.lastSeekTime = 0,
                    this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))) : this.debug.error("Setup failed: no support")
        }
        get isHTML5() {
            return this.provider === Ge.html5
        }
        get isEmbed() {
            return this.isYouTube || this.isVimeo
        }
        get isYouTube() {
            return this.provider === Ge.youtube
        }
        get isVimeo() {
            return this.provider === Ge.vimeo
        }
        get isVideo() {
            return this.type === et
        }
        get isAudio() {
            return this.type === Ze
        }
        get playing() {
            return Boolean(this.ready && !this.paused && !this.ended)
        }
        get paused() {
            return Boolean(this.media.paused)
        }
        get stopped() {
            return Boolean(this.paused && 0 === this.currentTime)
        }
        get ended() {
            return Boolean(this.media.ended)
        }
        set currentTime(e) {
            if (!this.duration)
                return;
            const t = $(e) && e > 0;
            this.media.currentTime = t ? Math.min(e, this.duration) : 0,
                this.debug.log(`Seeking to ${this.currentTime} seconds`)
        }
        get currentTime() {
            return Number(this.media.currentTime)
        }
        get buffered() {
            const { buffered: e } = this.media;
            return $(e) ? e : e && e.length && this.duration > 0 ? e.end(0) / this.duration : 0
        }
        get seeking() {
            return Boolean(this.media.seeking)
        }
        get duration() {
            const e = parseFloat(this.config.duration)
                , t = (this.media || {}).duration
                , i = $(t) && t !== 1 / 0 ? t : 0;
            return e || i
        }
        set volume(e) {
            let t = e;
            _(t) && (t = Number(t)),
                $(t) || (t = this.storage.get("volume")),
                $(t) || ({ volume: t } = this.config),
                t > 1 && (t = 1),
                t < 0 && (t = 0),
                this.config.volume = t,
                this.media.volume = t,
                !W(e) && this.muted && t > 0 && (this.muted = !1)
        }
        get volume() {
            return Number(this.media.volume)
        }
        set muted(e) {
            let t = e;
            O(t) || (t = this.storage.get("muted")),
                O(t) || (t = this.config.muted),
                this.config.muted = t,
                this.media.muted = t
        }
        get muted() {
            return Boolean(this.media.muted)
        }
        get hasAudio() {
            return !this.isHTML5 || (!!this.isAudio || (Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length)))
        }
        set speed(e) {
            let t = null;
            $(e) && (t = e),
                $(t) || (t = this.storage.get("speed")),
                $(t) || (t = this.config.speed.selected);
            const { minimumSpeed: i, maximumSpeed: s } = this;
            t = function (e = 0, t = 0, i = 255) {
                return Math.min(Math.max(e, t), i)
            }(t, i, s),
                this.config.speed.selected = t,
                setTimeout((() => {
                    this.media && (this.media.playbackRate = t)
                }
                ), 0)
        }
        get speed() {
            return Number(this.media.playbackRate)
        }
        get minimumSpeed() {
            return this.isYouTube ? Math.min(...this.options.speed) : this.isVimeo ? .5 : .0625
        }
        get maximumSpeed() {
            return this.isYouTube ? Math.max(...this.options.speed) : this.isVimeo ? 2 : 16
        }
        set quality(e) {
            const t = this.config.quality
                , i = this.options.quality;
            if (!i.length)
                return;
            let s = [!W(e) && Number(e), this.storage.get("quality"), t.selected, t.default].find($)
                , n = !0;
            if (!i.includes(s)) {
                const e = Ae(i, s);
                this.debug.warn(`Unsupported quality option: ${s}, using ${e} instead`),
                    s = e,
                    n = !1
            }
            t.selected = s,
                this.media.quality = s,
                n && this.storage.set({
                    quality: s
                })
        }
        get quality() {
            return this.media.quality
        }
        set loop(e) {
            const t = O(e) ? e : this.config.loop.active;
            this.config.loop.active = t,
                this.media.loop = t
        }
        get loop() {
            return Boolean(this.media.loop)
        }
        set source(e) {
            vt.change.call(this, e)
        }
        get source() {
            return this.media.currentSrc
        }
        get download() {
            const { download: e } = this.config.urls;
            return U(e) ? e : this.source
        }
        set download(e) {
            U(e) && (this.config.urls.download = e,
                We.setDownloadUrl.call(this))
        }
        set poster(e) {
            this.isVideo ? at.setPoster.call(this, e, !1).catch((() => { }
            )) : this.debug.warn("Poster can only be set for video")
        }
        get poster() {
            return this.isVideo ? this.media.getAttribute("poster") || this.media.getAttribute("data-poster") : null
        }
        get ratio() {
            if (!this.isVideo)
                return null;
            const e = Ne(xe.call(this));
            return q(e) ? e.join(":") : e
        }
        set ratio(e) {
            this.isVideo ? _(e) && Pe(e) ? (this.config.ratio = Ne(e),
                Me.call(this)) : this.debug.error(`Invalid aspect ratio specified (${e})`) : this.debug.warn("Aspect ratio can only be set for video")
        }
        set autoplay(e) {
            const t = O(e) ? e : this.config.autoplay;
            this.config.autoplay = t
        }
        get autoplay() {
            return Boolean(this.config.autoplay)
        }
        toggleCaptions(e) {
            Ye.toggle.call(this, e, !1)
        }
        set currentTrack(e) {
            Ye.set.call(this, e, !1),
                Ye.setup()
        }
        get currentTrack() {
            const { toggled: e, currentTrack: t } = this.captions;
            return e ? t : -1
        }
        set language(e) {
            Ye.setLanguage.call(this, e, !1)
        }
        get language() {
            return (Ye.getCurrentTrack.call(this) || {}).language
        }
        set pip(e) {
            if (!me.pip)
                return;
            const t = O(e) ? e : !this.pip;
            j(this.media.webkitSetPresentationMode) && this.media.webkitSetPresentationMode(t ? Xe : Je),
                j(this.media.requestPictureInPicture) && (!this.pip && t ? this.media.requestPictureInPicture() : this.pip && !t && document.exitPictureInPicture())
        }
        get pip() {
            return me.pip ? W(this.media.webkitPresentationMode) ? this.media === document.pictureInPictureElement : this.media.webkitPresentationMode === Xe : null
        }
        setPreviewThumbnails(e) {
            this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(),
                this.previewThumbnails = null),
                Object.assign(this.config.previewThumbnails, e),
                this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))
        }
        static supported(e, t, i) {
            return me.check(e, t, i)
        }
        static loadSprite(e, t) {
            return Ve(e, t)
        }
        static setup(e, t = {}) {
            let i = null;
            return _(e) ? i = Array.from(document.querySelectorAll(e)) : D(e) ? i = Array.from(e) : q(e) && (i = e.filter(H)),
                W(i) ? null : i.map((e => new wt(e, t)))
        }
    }
    var Tt;
    return wt.defaults = (Tt = Qe,
        JSON.parse(JSON.stringify(Tt))),
        wt
}
));



"object" == typeof navigator && function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("Plyr", t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).Plyr = t()
}(this, (function () {
    "use strict";
    function e(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = i,
            e
    }
    function t(e, t) {
        for (var i = 0; i < t.length; i++) {
            var s = t[i];
            s.enumerable = s.enumerable || !1,
                s.configurable = !0,
                "value" in s && (s.writable = !0),
                Object.defineProperty(e, s.key, s)
        }
    }
    function i(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = i,
            e
    }
    function s(e, t) {
        var i = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var s = Object.getOwnPropertySymbols(e);
            t && (s = s.filter((function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }
            ))),
                i.push.apply(i, s)
        }
        return i
    }
    function n(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? s(Object(n), !0).forEach((function (t) {
                i(e, t, n[t])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : s(Object(n)).forEach((function (t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            }
            ))
        }
        return e
    }
    var a = {
        addCSS: !0,
        thumbWidth: 15,
        watch: !0
    };
    function l(e, t) {
        return function () {
            return Array.from(document.querySelectorAll(t)).includes(this)
        }
            .call(e, t)
    }
    var o = function (e) {
        return null != e ? e.constructor : null
    }
        , r = function (e, t) {
            return !!(e && t && e instanceof t)
        }
        , c = function (e) {
            return null == e
        }
        , h = function (e) {
            return o(e) === Object
        }
        , u = function (e) {
            return o(e) === String
        }
        , d = function (e) {
            return Array.isArray(e)
        }
        , m = function (e) {
            return r(e, NodeList)
        }
        , p = u
        , g = d
        , f = m
        , b = function (e) {
            return r(e, Element)
        }
        , y = function (e) {
            return r(e, Event)
        }
        , v = function (e) {
            return c(e) || (u(e) || d(e) || m(e)) && !e.length || h(e) && !Object.keys(e).length
        };
    function w(e, t) {
        if (1 > t) {
            var i = function (e) {
                var t = "".concat(e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0
            }(t);
            return parseFloat(e.toFixed(i))
        }
        return Math.round(e / t) * t
    }
    var T = function () {
        function e(t, i) {
            (function (e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            )(this, e),
                b(t) ? this.element = t : p(t) && (this.element = document.querySelector(t)),
                b(this.element) && v(this.element.rangeTouch) && (this.config = n({}, a, {}, i),
                    this.init())
        }
        return function (e, i, s) {
            i && t(e.prototype, i),
                s && t(e, s)
        }(e, [{
            key: "init",
            value: function () {
                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "none",
                    this.element.style.webKitUserSelect = "none",
                    this.element.style.touchAction = "manipulation"),
                    this.listeners(!0),
                    this.element.rangeTouch = this)
            }
        }, {
            key: "destroy",
            value: function () {
                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "",
                    this.element.style.webKitUserSelect = "",
                    this.element.style.touchAction = ""),
                    this.listeners(!1),
                    this.element.rangeTouch = null)
            }
        }, {
            key: "listeners",
            value: function (e) {
                var t = this
                    , i = e ? "addEventListener" : "removeEventListener";
                ["touchstart", "touchmove", "touchend"].forEach((function (e) {
                    t.element[i](e, (function (e) {
                        return t.set(e)
                    }
                    ), !1)
                }
                ))
            }
        }, {
            key: "get",
            value: function (t) {
                if (!e.enabled || !y(t))
                    return null;
                var i, s = t.target, n = t.changedTouches[0], a = parseFloat(s.getAttribute("min")) || 0, l = parseFloat(s.getAttribute("max")) || 100, o = parseFloat(s.getAttribute("step")) || 1, r = s.getBoundingClientRect(), c = 100 / r.width * (this.config.thumbWidth / 2) / 100;
                return 0 > (i = 100 / r.width * (n.clientX - r.left)) ? i = 0 : 100 < i && (i = 100),
                    50 > i ? i -= (100 - 2 * i) * c : 50 < i && (i += 2 * (i - 50) * c),
                    a + w(i / 100 * (l - a), o)
            }
        }, {
            key: "set",
            value: function (t) {
                e.enabled && y(t) && !t.target.disabled && (t.preventDefault(),
                    t.target.value = this.get(t),
                    function (e, t) {
                        if (e && t) {
                            var i = new Event(t, {
                                bubbles: !0
                            });
                            e.dispatchEvent(i)
                        }
                    }(t.target, "touchend" === t.type ? "change" : "input"))
            }
        }], [{
            key: "setup",
            value: function (t) {
                var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}
                    , s = null;
                if (v(t) || p(t) ? s = Array.from(document.querySelectorAll(p(t) ? t : 'input[type="range"]')) : b(t) ? s = [t] : f(t) ? s = Array.from(t) : g(t) && (s = t.filter(b)),
                    v(s))
                    return null;
                var o = n({}, a, {}, i);
                if (p(t) && o.watch) {
                    var r = new MutationObserver((function (i) {
                        Array.from(i).forEach((function (i) {
                            Array.from(i.addedNodes).forEach((function (i) {
                                b(i) && l(i, t) && new e(i, o)
                            }
                            ))
                        }
                        ))
                    }
                    ));
                    r.observe(document.body, {
                        childList: !0,
                        subtree: !0
                    })
                }
                return s.map((function (t) {
                    return new e(t, i)
                }
                ))
            }
        }, {
            key: "enabled",
            get: function () {
                return "ontouchstart" in document.documentElement
            }
        }]),
            e
    }();
    const k = e => null != e ? e.constructor : null
        , C = (e, t) => Boolean(e && t && e instanceof t)
        , A = e => null == e
        , S = e => k(e) === Object
        , E = e => k(e) === String
        , P = e => k(e) === Function
        , N = e => Array.isArray(e)
        , x = e => C(e, NodeList)
        , M = e => A(e) || (E(e) || N(e) || x(e)) && !e.length || S(e) && !Object.keys(e).length;
    var I = A
        , L = S
        , $ = e => k(e) === Number && !Number.isNaN(e)
        , _ = E
        , O = e => k(e) === Boolean
        , j = P
        , q = N
        , D = x
        , H = e => null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument
        , F = e => C(e, Event)
        , R = e => C(e, KeyboardEvent)
        , V = e => C(e, TextTrack) || !A(e) && E(e.kind)
        , B = e => C(e, Promise) && P(e.then)
        , U = e => {
            if (C(e, window.URL))
                return !0;
            if (!E(e))
                return !1;
            let t = e;
            e.startsWith("http://") && e.startsWith("https://") || (t = `http://${e}`);
            try {
                return !M(new URL(t).hostname)
            } catch (e) {
                return !1
            }
        }
        , W = M;
    const z = (() => {
        const e = document.createElement("span")
            , t = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            }
            , i = Object.keys(t).find((t => void 0 !== e.style[t]));
        return !!_(i) && t[i]
    }
    )();
    function K(e, t) {
        setTimeout((() => {
            try {
                e.hidden = !0,
                    e.offsetHeight,
                    e.hidden = !1
            } catch (e) { }
        }
        ), t)
    }
    const Y = {
        isIE: Boolean(window.document.documentMode),
        isEdge: window.navigator.userAgent.includes("Edge"),
        isWebkit: "WebkitAppearance" in document.documentElement.style && !/Edge/.test(navigator.userAgent),
        isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),
        isIos: "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || /(iPad|iPhone|iPod)/gi.test(navigator.platform)
    };
    function Q(e, t) {
        return t.split(".").reduce(((e, t) => e && e[t]), e)
    }
    function X(e = {}, ...t) {
        if (!t.length)
            return e;
        const i = t.shift();
        return L(i) ? (Object.keys(i).forEach((t => {
            L(i[t]) ? (Object.keys(e).includes(t) || Object.assign(e, {
                [t]: {}
            }),
                X(e[t], i[t])) : Object.assign(e, {
                    [t]: i[t]
                })
        }
        )),
            X(e, ...t)) : e
    }
    function J(e, t) {
        const i = e.length ? e : [e];
        Array.from(i).reverse().forEach(((e, i) => {
            const s = i > 0 ? t.cloneNode(!0) : t
                , n = e.parentNode
                , a = e.nextSibling;
            s.appendChild(e),
                a ? n.insertBefore(s, a) : n.appendChild(s)
        }
        ))
    }
    function G(e, t) {
        H(e) && !W(t) && Object.entries(t).filter((([, e]) => !I(e))).forEach((([t, i]) => e.setAttribute(t, i)))
    }
    function Z(e, t, i) {
        const s = document.createElement(e);
        return L(t) && G(s, t),
            _(i) && (s.innerText = i),
            s
    }
    function ee(e, t, i, s) {
        H(t) && t.appendChild(Z(e, i, s))
    }
    function te(e) {
        D(e) || q(e) ? Array.from(e).forEach(te) : H(e) && H(e.parentNode) && e.parentNode.removeChild(e)
    }
    function ie(e) {
        if (!H(e))
            return;
        let { length: t } = e.childNodes;
        for (; t > 0;)
            e.removeChild(e.lastChild),
                t -= 1
    }
    function se(e, t) {
        return H(t) && H(t.parentNode) && H(e) ? (t.parentNode.replaceChild(e, t),
            e) : null
    }
    function ne(e, t) {
        if (!_(e) || W(e))
            return {};
        const i = {}
            , s = X({}, t);
        return e.split(",").forEach((e => {
            const t = e.trim()
                , n = t.replace(".", "")
                , a = t.replace(/[[\]]/g, "").split("=")
                , [l] = a
                , o = a.length > 1 ? a[1].replace(/["']/g, "") : "";
            switch (t.charAt(0)) {
                case ".":
                    _(s.class) ? i.class = `${s.class} ${n}` : i.class = n;
                    break;
                case "#":
                    i.id = t.replace("#", "");
                    break;
                case "[":
                    i[l] = o
            }
        }
        )),
            X(s, i)
    }
    function ae(e, t) {
        if (!H(e))
            return;
        let i = t;
        O(i) || (i = !e.hidden),
            e.hidden = i
    }
    function le(e, t, i) {
        if (D(e))
            return Array.from(e).map((e => le(e, t, i)));
        if (H(e)) {
            let s = "toggle";
            return void 0 !== i && (s = i ? "add" : "remove"),
                e.classList[s](t),
                e.classList.contains(t)
        }
        return !1
    }
    function oe(e, t) {
        return H(e) && e.classList.contains(t)
    }
    function re(e, t) {
        const { prototype: i } = Element;
        return (i.matches || i.webkitMatchesSelector || i.mozMatchesSelector || i.msMatchesSelector || function () {
            return Array.from(document.querySelectorAll(t)).includes(this)
        }
        ).call(e, t)
    }
    function ce(e) {
        return this.elements.container.querySelectorAll(e)
    }
    function he(e) {
        return this.elements.container.querySelector(e)
    }
    function ue(e = null, t = !1) {
        H(e) && (e.focus({
            preventScroll: !0
        }),
            t && le(e, this.config.classNames.tabFocus))
    }
    const de = {
        "audio/ogg": "vorbis",
        "audio/wav": "1",
        "video/webm": "vp8, vorbis",
        "video/mp4": "avc1.42E01E, mp4a.40.2",
        "video/ogg": "theora"
    }
        , me = {
            audio: "canPlayType" in document.createElement("audio"),
            video: "canPlayType" in document.createElement("video"),
            check(e, t, i) {
                const s = Y.isIPhone && i && me.playsinline
                    , n = me[e] || "html5" !== t;
                return {
                    api: n,
                    ui: n && me.rangeInput && ("video" !== e || !Y.isIPhone || s)
                }
            },
            pip: !(Y.isIPhone || !j(Z("video").webkitSetPresentationMode) && (!document.pictureInPictureEnabled || Z("video").disablePictureInPicture)),
            airplay: j(window.WebKitPlaybackTargetAvailabilityEvent),
            playsinline: "playsInline" in document.createElement("video"),
            mime(e) {
                if (W(e))
                    return !1;
                const [t] = e.split("/");
                let i = e;
                if (!this.isHTML5 || t !== this.type)
                    return !1;
                Object.keys(de).includes(i) && (i += `; codecs="${de[e]}"`);
                try {
                    return Boolean(i && this.media.canPlayType(i).replace(/no/, ""))
                } catch (e) {
                    return !1
                }
            },
            textTracks: "textTracks" in document.createElement("video"),
            rangeInput: (() => {
                const e = document.createElement("input");
                return e.type = "range",
                    "range" === e.type
            }
            )(),
            touch: "ontouchstart" in document.documentElement,
            transitions: !1 !== z,
            reducedMotion: "matchMedia" in window && window.matchMedia("(prefers-reduced-motion)").matches
        }
        , pe = (() => {
            let e = !1;
            try {
                const t = Object.defineProperty({}, "passive", {
                    get: () => (e = !0,
                        null)
                });
                window.addEventListener("test", null, t),
                    window.removeEventListener("test", null, t)
            } catch (e) { }
            return e
        }
        )();
    function ge(e, t, i, s = !1, n = !0, a = !1) {
        if (!e || !("addEventListener" in e) || W(t) || !j(i))
            return;
        const l = t.split(" ");
        let o = a;
        pe && (o = {
            passive: n,
            capture: a
        }),
            l.forEach((t => {
                this && this.eventListeners && s && this.eventListeners.push({
                    element: e,
                    type: t,
                    callback: i,
                    options: o
                }),
                    e[s ? "addEventListener" : "removeEventListener"](t, i, o)
            }
            ))
    }
    function fe(e, t = "", i, s = !0, n = !1) {
        ge.call(this, e, t, i, !0, s, n)
    }
    function be(e, t = "", i, s = !0, n = !1) {
        ge.call(this, e, t, i, !1, s, n)
    }
    function ye(e, t = "", i, s = !0, n = !1) {
        const a = (...l) => {
            be(e, t, a, s, n),
                i.apply(this, l)
        }
            ;
        ge.call(this, e, t, a, !0, s, n)
    }
    function ve(e, t = "", i = !1, s = {}) {
        if (!H(e) || W(t))
            return;
        const n = new CustomEvent(t, {
            bubbles: i,
            detail: {
                ...s,
                plyr: this
            }
        });
        e.dispatchEvent(n)
    }
    function we() {
        this && this.eventListeners && (this.eventListeners.forEach((e => {
            const { element: t, type: i, callback: s, options: n } = e;
            t.removeEventListener(i, s, n)
        }
        )),
            this.eventListeners = [])
    }
    function Te() {
        return new Promise((e => this.ready ? setTimeout(e, 0) : fe.call(this, this.elements.container, "ready", e))).then((() => { }
        ))
    }
    function ke(e) {
        B(e) && e.then(null, (() => { }
        ))
    }
    function Ce(e) {
        return q(e) ? e.filter(((t, i) => e.indexOf(t) === i)) : e
    }
    function Ae(e, t) {
        return q(e) && e.length ? e.reduce(((e, i) => Math.abs(i - t) < Math.abs(e - t) ? i : e)) : null
    }
    function Se(e) {
        return !(!window || !window.CSS) && window.CSS.supports(e)
    }
    const Ee = [[1, 1], [4, 3], [3, 4], [5, 4], [4, 5], [3, 2], [2, 3], [16, 10], [10, 16], [16, 9], [9, 16], [21, 9], [9, 21], [32, 9], [9, 32]].reduce(((e, [t, i]) => ({
        ...e,
        [t / i]: [t, i]
    })), {});
    function Pe(e) {
        if (!(q(e) || _(e) && e.includes(":")))
            return !1;
        return (q(e) ? e : e.split(":")).map(Number).every($)
    }
    function Ne(e) {
        if (!q(e) || !e.every($))
            return null;
        const [t, i] = e
            , s = (e, t) => 0 === t ? e : s(t, e % t)
            , n = s(t, i);
        return [t / n, i / n]
    }
    function xe(e) {
        const t = e => Pe(e) ? e.split(":").map(Number) : null;
        let i = t(e);
        if (null === i && (i = t(this.config.ratio)),
            null === i && !W(this.embed) && q(this.embed.ratio) && ({ ratio: i } = this.embed),
            null === i && this.isHTML5) {
            const { videoWidth: e, videoHeight: t } = this.media;
            i = [e, t]
        }
        return Ne(i)
    }
    function Me(e) {
        if (!this.isVideo)
            return {};
        const { wrapper: t } = this.elements
            , i = xe.call(this, e);
        if (!q(i))
            return {};
        const [s, n] = Ne(i)
            , a = 100 / s * n;
        if (Se(`aspect-ratio: ${s}/${n}`) ? t.style.aspectRatio = `${s}/${n}` : t.style.paddingBottom = `${a}%`,
            this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {
            const e = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10)
                , i = (e - a) / (e / 50);
            this.fullscreen.active ? t.style.paddingBottom = null : this.media.style.transform = `translateY(-${i}%)`
        } else
            this.isHTML5 && t.classList.add(this.config.classNames.videoFixedRatio);
        return {
            padding: a,
            ratio: i
        }
    }
    function Ie(e, t, i = .05) {
        const s = e / t
            , n = Ae(Object.keys(Ee), s);
        return Math.abs(n - s) <= i ? Ee[n] : [e, t]
    }
    const Le = {
        getSources() {
            if (!this.isHTML5)
                return [];
            return Array.from(this.media.querySelectorAll("source")).filter((e => {
                const t = e.getAttribute("type");
                return !!W(t) || me.mime.call(this, t)
            }
            ))
        },
        getQualityOptions() {
            return this.config.quality.forced ? this.config.quality.options : Le.getSources.call(this).map((e => Number(e.getAttribute("size")))).filter(Boolean)
        },
        setup() {
            if (!this.isHTML5)
                return;
            const e = this;
            e.options.speed = e.config.speed.options,
                W(this.config.ratio) || Me.call(e),
                Object.defineProperty(e.media, "quality", {
                    get() {
                        const t = Le.getSources.call(e).find((t => t.getAttribute("src") === e.source));
                        return t && Number(t.getAttribute("size"))
                    },
                    set(t) {
                        if (e.quality !== t) {
                            if (e.config.quality.forced && j(e.config.quality.onChange))
                                e.config.quality.onChange(t);
                            else {
                                const i = Le.getSources.call(e).find((e => Number(e.getAttribute("size")) === t));
                                if (!i)
                                    return;
                                const { currentTime: s, paused: n, preload: a, readyState: l, playbackRate: o } = e.media;
                                e.media.src = i.getAttribute("src"),
                                    ("none" !== a || l) && (e.once("loadedmetadata", (() => {
                                        e.speed = o,
                                            e.currentTime = s,
                                            n || ke(e.play())
                                    }
                                    )),
                                        e.media.load())
                            }
                            ve.call(e, e.media, "qualitychange", !1, {
                                quality: t
                            })
                        }
                    }
                })
        },
        cancelRequests() {
            this.isHTML5 && (te(Le.getSources.call(this)),
                this.media.setAttribute("src", this.config.blankVideo),
                this.media.load(),
                this.debug.log("Cancelled network requests"))
        }
    };
    function $e(e, ...t) {
        return W(e) ? e : e.toString().replace(/{(\d+)}/g, ((e, i) => t[i].toString()))
    }
    const _e = (e = "", t = "", i = "") => e.replace(new RegExp(t.toString().replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1"), "g"), i.toString())
        , Oe = (e = "") => e.toString().replace(/\w\S*/g, (e => e.charAt(0).toUpperCase() + e.substr(1).toLowerCase()));
    function je(e = "") {
        let t = e.toString();
        return t = function (e = "") {
            let t = e.toString();
            return t = _e(t, "-", " "),
                t = _e(t, "_", " "),
                t = Oe(t),
                _e(t, " ", "")
        }(t),
            t.charAt(0).toLowerCase() + t.slice(1)
    }
    function qe(e) {
        const t = document.createElement("div");
        return t.appendChild(e),
            t.innerHTML
    }
    const De = {
        pip: "PIP",
        airplay: "AirPlay",
        html5: "HTML5",
        vimeo: "Vimeo",
        youtube: "YouTube"
    }
        , He = {
            get(e = "", t = {}) {
                if (W(e) || W(t))
                    return "";
                let i = Q(t.i18n, e);
                if (W(i))
                    return Object.keys(De).includes(e) ? De[e] : "";
                const s = {
                    "{seektime}": t.seekTime,
                    "{title}": t.title
                };
                return Object.entries(s).forEach((([e, t]) => {
                    i = _e(i, e, t)
                }
                )),
                    i
            }
        };
    class Fe {
        constructor(t) {
            e(this, "get", (e => {
                if (!Fe.supported || !this.enabled)
                    return null;
                const t = window.localStorage.getItem(this.key);
                if (W(t))
                    return null;
                const i = JSON.parse(t);
                return _(e) && e.length ? i[e] : i
            }
            )),
                e(this, "set", (e => {
                    if (!Fe.supported || !this.enabled)
                        return;
                    if (!L(e))
                        return;
                    let t = this.get();
                    W(t) && (t = {}),
                        X(t, e);
                    try {
                        window.localStorage.setItem(this.key, JSON.stringify(t))
                    } catch (e) { }
                }
                )),
                this.enabled = t.config.storage.enabled,
                this.key = t.config.storage.key
        }
        static get supported() {
            try {
                if (!("localStorage" in window))
                    return !1;
                const e = "___test";
                return window.localStorage.setItem(e, e),
                    window.localStorage.removeItem(e),
                    !0
            } catch (e) {
                return !1
            }
        }
    }
    function Re(e, t = "text") {
        return new Promise(((i, s) => {
            try {
                const s = new XMLHttpRequest;
                if (!("withCredentials" in s))
                    return;
                s.addEventListener("load", (() => {
                    if ("text" === t)
                        try {
                            i(JSON.parse(s.responseText))
                        } catch (e) {
                            i(s.responseText)
                        }
                    else
                        i(s.response)
                }
                )),
                    s.addEventListener("error", (() => {
                        throw new Error(s.status)
                    }
                    )),
                    s.open("GET", e, !0),
                    s.responseType = t,
                    s.send()
            } catch (e) {
                s(e)
            }
        }
        ))
    }
    function Ve(e, t) {
        if (!_(e))
            return;
        const i = _(t);
        let s = !1;
        const n = () => null !== document.getElementById(t)
            , a = (e, t) => {
                e.innerHTML = t,
                    i && n() || document.body.insertAdjacentElement("afterbegin", e)
            }
            ;
        if (!i || !n()) {
            const n = Fe.supported
                , l = document.createElement("div");
            if (l.setAttribute("hidden", ""),
                i && l.setAttribute("id", t),
                n) {
                const e = window.localStorage.getItem(`cache-${t}`);
                if (s = null !== e,
                    s) {
                    const t = JSON.parse(e);
                    a(l, t.content)
                }
            }
            Re(e).then((e => {
                if (!W(e)) {
                    if (n)
                        try {
                            window.localStorage.setItem(`cache-${t}`, JSON.stringify({
                                content: e
                            }))
                        } catch (e) { }
                    a(l, e)
                }
            }
            )).catch((() => { }
            ))
        }
    }
    const Be = e => Math.trunc(e / 60 / 60 % 60, 10);
    function Ue(e = 0, t = !1, i = !1) {
        if (!$(e))
            return Ue(void 0, t, i);
        const s = e => `0 ${e}`.slice(-2);
        let n = Be(e);
        const a = (l = e,
            Math.trunc(l / 60 % 60, 10));
        var l;
        const o = (e => Math.trunc(e % 60, 10))(e);
        return n = t || n > 0 ? `${n}:` : "",
            `${i && e > 0 ? "-" : ""}${n}${s(a)}:${s(o)}`
    }
    const We = {
        getIconUrl() {
            const e = new URL(this.config.iconUrl, window.location)
                , t = window.location.host ? window.location.host : window.top.location.host
                , i = e.host !== t || Y.isIE && !window.svg4everybody;
            return {
                url: this.config.iconUrl,
                cors: i
            }
        },
        findElements() {
            try {
                return this.elements.controls = he.call(this, this.config.selectors.controls.wrapper),
                    this.elements.buttons = {
                        play: ce.call(this, this.config.selectors.buttons.play),
                        pause: he.call(this, this.config.selectors.buttons.pause),
                        restart: he.call(this, this.config.selectors.buttons.restart),
                        rewind: he.call(this, this.config.selectors.buttons.rewind),
                        fastForward: he.call(this, this.config.selectors.buttons.fastForward),
                        mute: he.call(this, this.config.selectors.buttons.mute),
                        pip: he.call(this, this.config.selectors.buttons.pip),
                        airplay: he.call(this, this.config.selectors.buttons.airplay),
                        settings: he.call(this, this.config.selectors.buttons.settings),
                        captions: he.call(this, this.config.selectors.buttons.captions),
                        fullscreen: he.call(this, this.config.selectors.buttons.fullscreen)
                    },
                    this.elements.progress = he.call(this, this.config.selectors.progress),
                    this.elements.inputs = {
                        seek: he.call(this, this.config.selectors.inputs.seek),
                        volume: he.call(this, this.config.selectors.inputs.volume)
                    },
                    this.elements.display = {
                        buffer: he.call(this, this.config.selectors.display.buffer),
                        currentTime: he.call(this, this.config.selectors.display.currentTime),
                        duration: he.call(this, this.config.selectors.display.duration)
                    },
                    H(this.elements.progress) && (this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`)),
                    !0
            } catch (e) {
                return this.debug.warn("It looks like there is a problem with your custom controls HTML", e),
                    this.toggleNativeControls(!0),
                    !1
            }
        },
        createIcon(e, t) {
            const i = "http://www.w3.org/2000/svg"
                , s = We.getIconUrl.call(this)
                , n = `${s.cors ? "" : s.url}#${this.config.iconPrefix}`
                , a = document.createElementNS(i, "svg");
            G(a, X(t, {
                "aria-hidden": "true",
                focusable: "false"
            }));
            const l = document.createElementNS(i, "use")
                , o = `${n}-${e}`;
            return "href" in l && l.setAttributeNS("http://www.w3.org/1999/xlink", "href", o),
                l.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", o),
                a.appendChild(l),
                a
        },
        createLabel(e, t = {}) {
            const i = He.get(e, this.config);
            return Z("span", {
                ...t,
                class: [t.class, this.config.classNames.hidden].filter(Boolean).join(" ")
            }, i)
        },
        createBadge(e) {
            if (W(e))
                return null;
            const t = Z("span", {
                class: this.config.classNames.menu.value
            });
            return t.appendChild(Z("span", {
                class: this.config.classNames.menu.badge
            }, e)),
                t
        },
        createButton(e, t) {
            const i = X({}, t);
            let s = je(e);
            const n = {
                element: "button",
                toggle: !1,
                label: null,
                icon: null,
                labelPressed: null,
                iconPressed: null
            };
            switch (["element", "icon", "label"].forEach((e => {
                Object.keys(i).includes(e) && (n[e] = i[e],
                    delete i[e])
            }
            )),
            "button" !== n.element || Object.keys(i).includes("type") || (i.type = "button"),
            Object.keys(i).includes("class") ? i.class.split(" ").some((e => e === this.config.classNames.control)) || X(i, {
                class: `${i.class} ${this.config.classNames.control}`
            }) : i.class = this.config.classNames.control,
            e) {
                case "play":
                    n.toggle = !0,
                        n.label = "play",
                        n.labelPressed = "pause",
                        n.icon = "play",
                        n.iconPressed = "pause";
                    break;
                case "mute":
                    n.toggle = !0,
                        n.label = "mute",
                        n.labelPressed = "unmute",
                        n.icon = "volume",
                        n.iconPressed = "muted";
                    break;
                case "captions":
                    n.toggle = !0,
                        n.label = "enableCaptions",
                        n.labelPressed = "disableCaptions",
                        n.icon = "captions-off",
                        n.iconPressed = "captions-on";
                    break;
                case "fullscreen":
                    n.toggle = !0,
                        n.label = "enterFullscreen",
                        n.labelPressed = "exitFullscreen",
                        n.icon = "enter-fullscreen",
                        n.iconPressed = "exit-fullscreen";
                    break;
                case "play-large":
                    i.class += ` ${this.config.classNames.control}--overlaid`,
                        s = "play",
                        n.label = "play",
                        n.icon = "play";
                    break;
                default:
                    W(n.label) && (n.label = s),
                        W(n.icon) && (n.icon = e)
            }
            const a = Z(n.element);
            return n.toggle ? (a.appendChild(We.createIcon.call(this, n.iconPressed, {
                class: "icon--pressed"
            })),
                a.appendChild(We.createIcon.call(this, n.icon, {
                    class: "icon--not-pressed"
                })),
                a.appendChild(We.createLabel.call(this, n.labelPressed, {
                    class: "label--pressed"
                })),
                a.appendChild(We.createLabel.call(this, n.label, {
                    class: "label--not-pressed"
                }))) : (a.appendChild(We.createIcon.call(this, n.icon)),
                    a.appendChild(We.createLabel.call(this, n.label))),
                X(i, ne(this.config.selectors.buttons[s], i)),
                G(a, i),
                "play" === s ? (q(this.elements.buttons[s]) || (this.elements.buttons[s] = []),
                    this.elements.buttons[s].push(a)) : this.elements.buttons[s] = a,
                a
        },
        createRange(e, t) {
            const i = Z("input", X(ne(this.config.selectors.inputs[e]), {
                type: "range",
                min: 0,
                max: 100,
                step: .01,
                value: 0,
                autocomplete: "off",
                role: "slider",
                "aria-label": He.get(e, this.config),
                "aria-valuemin": 0,
                "aria-valuemax": 100,
                "aria-valuenow": 0
            }, t));
            return this.elements.inputs[e] = i,
                We.updateRangeFill.call(this, i),
                T.setup(i),
                i
        },
        createProgress(e, t) {
            const i = Z("progress", X(ne(this.config.selectors.display[e]), {
                min: 0,
                max: 100,
                value: 0,
                role: "progressbar",
                "aria-hidden": !0
            }, t));
            if ("volume" !== e) {
                i.appendChild(Z("span", null, "0"));
                const t = {
                    played: "played",
                    buffer: "buffered"
                }[e]
                    , s = t ? He.get(t, this.config) : "";
                i.innerText = `% ${s.toLowerCase()}`
            }
            return this.elements.display[e] = i,
                i
        },
        createTime(e, t) {
            const i = ne(this.config.selectors.display[e], t)
                , s = Z("div", X(i, {
                    class: `${i.class ? i.class : ""} ${this.config.classNames.display.time} `.trim(),
                    "aria-label": He.get(e, this.config)
                }), "00:00");
            return this.elements.display[e] = s,
                s
        },
        bindMenuItemShortcuts(e, t) {
            fe.call(this, e, "keydown keyup", (i => {
                if (![32, 38, 39, 40].includes(i.which))
                    return;
                if (i.preventDefault(),
                    i.stopPropagation(),
                    "keydown" === i.type)
                    return;
                const s = re(e, '[role="menuitemradio"]');
                if (!s && [32, 39].includes(i.which))
                    We.showMenuPanel.call(this, t, !0);
                else {
                    let t;
                    32 !== i.which && (40 === i.which || s && 39 === i.which ? (t = e.nextElementSibling,
                        H(t) || (t = e.parentNode.firstElementChild)) : (t = e.previousElementSibling,
                            H(t) || (t = e.parentNode.lastElementChild)),
                        ue.call(this, t, !0))
                }
            }
            ), !1),
                fe.call(this, e, "keyup", (e => {
                    13 === e.which && We.focusFirstMenuItem.call(this, null, !0)
                }
                ))
        },
        createMenuItem({ value: e, list: t, type: i, title: s, badge: n = null, checked: a = !1 }) {
            const l = ne(this.config.selectors.inputs[i])
                , o = Z("button", X(l, {
                    type: "button",
                    role: "menuitemradio",
                    class: `${this.config.classNames.control} ${l.class ? l.class : ""}`.trim(),
                    "aria-checked": a,
                    value: e
                }))
                , r = Z("span");
            r.innerHTML = s,
                H(n) && r.appendChild(n),
                o.appendChild(r),
                Object.defineProperty(o, "checked", {
                    enumerable: !0,
                    get: () => "true" === o.getAttribute("aria-checked"),
                    set(e) {
                        e && Array.from(o.parentNode.children).filter((e => re(e, '[role="menuitemradio"]'))).forEach((e => e.setAttribute("aria-checked", "false"))),
                            o.setAttribute("aria-checked", e ? "true" : "false")
                    }
                }),
                this.listeners.bind(o, "click keyup", (t => {
                    if (!R(t) || 32 === t.which) {
                        switch (t.preventDefault(),
                        t.stopPropagation(),
                        o.checked = !0,
                        i) {
                            case "language":
                                this.currentTrack = Number(e);
                                break;
                            case "quality":
                                this.quality = e;
                                break;
                            case "speed":
                                this.speed = parseFloat(e)
                        }
                        We.showMenuPanel.call(this, "home", R(t))
                    }
                }
                ), i, !1),
                We.bindMenuItemShortcuts.call(this, o, i),
                t.appendChild(o)
        },
        formatTime(e = 0, t = !1) {
            if (!$(e))
                return e;
            return Ue(e, Be(this.duration) > 0, t)
        },
        updateTimeDisplay(e = null, t = 0, i = !1) {
            H(e) && $(t) && (e.innerText = We.formatTime(t, i))
        },
        updateVolume() {
            this.supported.ui && (H(this.elements.inputs.volume) && We.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume),
                H(this.elements.buttons.mute) && (this.elements.buttons.mute.pressed = this.muted || 0 === this.volume))
        },
        setRange(e, t = 0) {
            H(e) && (e.value = t,
                We.updateRangeFill.call(this, e))
        },
        updateProgress(e) {
            if (!this.supported.ui || !F(e))
                return;
            let t = 0;
            const i = (e, t) => {
                const i = $(t) ? t : 0
                    , s = H(e) ? e : this.elements.display.buffer;
                if (H(s)) {
                    s.value = i;
                    const e = s.getElementsByTagName("span")[0];
                    H(e) && (e.childNodes[0].nodeValue = i)
                }
            }
                ;
            if (e)
                switch (e.type) {
                    case "timeupdate":
                    case "seeking":
                    case "seeked":
                        s = this.currentTime,
                            n = this.duration,
                            t = 0 === s || 0 === n || Number.isNaN(s) || Number.isNaN(n) ? 0 : (s / n * 100).toFixed(2),
                            "timeupdate" === e.type && We.setRange.call(this, this.elements.inputs.seek, t);
                        break;
                    case "playing":
                    case "progress":
                        i(this.elements.display.buffer, 100 * this.buffered)
                }
            var s, n
        },
        updateRangeFill(e) {
            const t = F(e) ? e.target : e;
            if (H(t) && "range" === t.getAttribute("type")) {
                if (re(t, this.config.selectors.inputs.seek)) {
                    t.setAttribute("aria-valuenow", this.currentTime);
                    const e = We.formatTime(this.currentTime)
                        , i = We.formatTime(this.duration)
                        , s = He.get("seekLabel", this.config);
                    t.setAttribute("aria-valuetext", s.replace("{currentTime}", e).replace("{duration}", i))
                } else if (re(t, this.config.selectors.inputs.volume)) {
                    const e = 100 * t.value;
                    t.setAttribute("aria-valuenow", e),
                        t.setAttribute("aria-valuetext", `${e.toFixed(1)}%`)
                } else
                    t.setAttribute("aria-valuenow", t.value);
                Y.isWebkit && t.style.setProperty("--value", t.value / t.max * 100 + "%")
            }
        },
        updateSeekTooltip(e) {
            if (!this.config.tooltips.seek || !H(this.elements.inputs.seek) || !H(this.elements.display.seekTooltip) || 0 === this.duration)
                return;
            const t = `${this.config.classNames.tooltip}--visible`
                , i = e => le(this.elements.display.seekTooltip, t, e);
            if (this.touch)
                return void i(!1);
            let s = 0;
            const n = this.elements.progress.getBoundingClientRect();
            if (F(e))
                s = 100 / n.width * (e.pageX - n.left);
            else {
                if (!oe(this.elements.display.seekTooltip, t))
                    return;
                s = parseFloat(this.elements.display.seekTooltip.style.left, 10)
            }
            s < 0 ? s = 0 : s > 100 && (s = 100),
                We.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * s),
                this.elements.display.seekTooltip.style.left = `${s}%`,
                F(e) && ["mouseenter", "mouseleave"].includes(e.type) && i("mouseenter" === e.type)
        },
        timeUpdate(e) {
            const t = !H(this.elements.display.duration) && this.config.invertTime;
            We.updateTimeDisplay.call(this, this.elements.display.currentTime, t ? this.duration - this.currentTime : this.currentTime, t),
                e && "timeupdate" === e.type && this.media.seeking || We.updateProgress.call(this, e)
        },
        durationUpdate() {
            if (!this.supported.ui || !this.config.invertTime && this.currentTime)
                return;
            if (this.duration >= 2 ** 32)
                return ae(this.elements.display.currentTime, !0),
                    void ae(this.elements.progress, !0);
            H(this.elements.inputs.seek) && this.elements.inputs.seek.setAttribute("aria-valuemax", this.duration);
            const e = H(this.elements.display.duration);
            !e && this.config.displayDuration && this.paused && We.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration),
                e && We.updateTimeDisplay.call(this, this.elements.display.duration, this.duration),
                We.updateSeekTooltip.call(this)
        },
        toggleMenuButton(e, t) {
            ae(this.elements.settings.buttons[e], !t)
        },
        updateSetting(e, t, i) {
            const s = this.elements.settings.panels[e];
            let n = null
                , a = t;
            if ("captions" === e)
                n = this.currentTrack;
            else {
                if (n = W(i) ? this[e] : i,
                    W(n) && (n = this.config[e].default),
                    !W(this.options[e]) && !this.options[e].includes(n))
                    return void this.debug.warn(`Unsupported value of '${n}' for ${e}`);
                if (!this.config[e].options.includes(n))
                    return void this.debug.warn(`Disabled value of '${n}' for ${e}`)
            }
            if (H(a) || (a = s && s.querySelector('[role="menu"]')),
                !H(a))
                return;
            this.elements.settings.buttons[e].querySelector(`.${this.config.classNames.menu.value}`).innerHTML = We.getLabel.call(this, e, n);
            const l = a && a.querySelector(`[value="${n}"]`);
            H(l) && (l.checked = !0)
        },
        getLabel(e, t) {
            switch (e) {
                case "speed":
                    return 1 === t ? He.get("normal", this.config) : `${t}&times;`;
                case "quality":
                    if ($(t)) {
                        const e = He.get(`qualityLabel.${t}`, this.config);
                        return e.length ? e : `${t}p`
                    }
                    return Oe(t);
                case "captions":
                    return Ye.getLabel.call(this);
                default:
                    return null
            }
        },
        setQualityMenu(e) {
            if (!H(this.elements.settings.panels.quality))
                return;
            const t = "quality"
                , i = this.elements.settings.panels.quality.querySelector('[role="menu"]');
            q(e) && (this.options.quality = Ce(e).filter((e => this.config.quality.options.includes(e))));
            const s = !W(this.options.quality) && this.options.quality.length > 1;
            if (We.toggleMenuButton.call(this, t, s),
                ie(i),
                We.checkMenu.call(this),
                !s)
                return;
            const n = e => {
                const t = He.get(`qualityBadge.${e}`, this.config);
                return t.length ? We.createBadge.call(this, t) : null
            }
                ;
            this.options.quality.sort(((e, t) => {
                const i = this.config.quality.options;
                return i.indexOf(e) > i.indexOf(t) ? 1 : -1
            }
            )).forEach((e => {
                We.createMenuItem.call(this, {
                    value: e,
                    list: i,
                    type: t,
                    title: We.getLabel.call(this, "quality", e),
                    badge: n(e)
                })
            }
            )),
                We.updateSetting.call(this, t, i)
        },
        setCaptionsMenu() {
            if (!H(this.elements.settings.panels.captions))
                return;
            const e = "captions"
                , t = this.elements.settings.panels.captions.querySelector('[role="menu"]')
                , i = Ye.getTracks.call(this)
                , s = Boolean(i.length);
            if (We.toggleMenuButton.call(this, e, s),
                ie(t),
                We.checkMenu.call(this),
                !s)
                return;
            const n = i.map(((e, i) => ({
                value: i,
                checked: this.captions.toggled && this.currentTrack === i,
                title: Ye.getLabel.call(this, e),
                badge: e.language && We.createBadge.call(this, e.language.toUpperCase()),
                list: t,
                type: "language"
            })));
            n.unshift({
                value: -1,
                checked: !this.captions.toggled,
                title: He.get("disabled", this.config),
                list: t,
                type: "language"
            }),
                n.forEach(We.createMenuItem.bind(this)),
                We.updateSetting.call(this, e, t)
        },
        setSpeedMenu() {
            if (!H(this.elements.settings.panels.speed))
                return;
            const e = "speed"
                , t = this.elements.settings.panels.speed.querySelector('[role="menu"]');
            this.options.speed = this.options.speed.filter((e => e >= this.minimumSpeed && e <= this.maximumSpeed));
            const i = !W(this.options.speed) && this.options.speed.length > 1;
            We.toggleMenuButton.call(this, e, i),
                ie(t),
                We.checkMenu.call(this),
                i && (this.options.speed.forEach((i => {
                    We.createMenuItem.call(this, {
                        value: i,
                        list: t,
                        type: e,
                        title: We.getLabel.call(this, "speed", i)
                    })
                }
                )),
                    We.updateSetting.call(this, e, t))
        },
        checkMenu() {
            const { buttons: e } = this.elements.settings
                , t = !W(e) && Object.values(e).some((e => !e.hidden));
            ae(this.elements.settings.menu, !t)
        },
        focusFirstMenuItem(e, t = !1) {
            if (this.elements.settings.popup.hidden)
                return;
            let i = e;
            H(i) || (i = Object.values(this.elements.settings.panels).find((e => !e.hidden)));
            const s = i.querySelector('[role^="menuitem"]');
            ue.call(this, s, t)
        },
        toggleMenu(e) {
            const { popup: t } = this.elements.settings
                , i = this.elements.buttons.settings;
            if (!H(t) || !H(i))
                return;
            const { hidden: s } = t;
            let n = s;
            if (O(e))
                n = e;
            else if (R(e) && 27 === e.which)
                n = !1;
            else if (F(e)) {
                const s = j(e.composedPath) ? e.composedPath()[0] : e.target
                    , a = t.contains(s);
                if (a || !a && e.target !== i && n)
                    return
            }
            i.setAttribute("aria-expanded", n),
                ae(t, !n),
                le(this.elements.container, this.config.classNames.menu.open, n),
                n && R(e) ? We.focusFirstMenuItem.call(this, null, !0) : n || s || ue.call(this, i, R(e))
        },
        getMenuSize(e) {
            const t = e.cloneNode(!0);
            t.style.position = "absolute",
                t.style.opacity = 0,
                t.removeAttribute("hidden"),
                e.parentNode.appendChild(t);
            const i = t.scrollWidth
                , s = t.scrollHeight;
            return te(t),
            {
                width: i,
                height: s
            }
        },
        showMenuPanel(e = "", t = !1) {
            const i = this.elements.container.querySelector(`#plyr-settings-${this.id}-${e}`);
            if (!H(i))
                return;
            const s = i.parentNode
                , n = Array.from(s.children).find((e => !e.hidden));
            if (me.transitions && !me.reducedMotion) {
                s.style.width = `${n.scrollWidth}px`,
                    s.style.height = `${n.scrollHeight}px`;
                const e = We.getMenuSize.call(this, i)
                    , t = e => {
                        e.target === s && ["width", "height"].includes(e.propertyName) && (s.style.width = "",
                            s.style.height = "",
                            be.call(this, s, z, t))
                    }
                    ;
                fe.call(this, s, z, t),
                    s.style.width = `${e.width}px`,
                    s.style.height = `${e.height}px`
            }
            ae(n, !0),
                ae(i, !1),
                We.focusFirstMenuItem.call(this, i, t)
        },
        setDownloadUrl() {
            const e = this.elements.buttons.download;
            H(e) && e.setAttribute("href", this.download)
        },
        create(e) {
            const { bindMenuItemShortcuts: t, createButton: i, createProgress: s, createRange: n, createTime: a, setQualityMenu: l, setSpeedMenu: o, showMenuPanel: r } = We;
            this.elements.controls = null,
                q(this.config.controls) && this.config.controls.includes("play-large") && this.elements.container.appendChild(i.call(this, "play-large"));
            const c = Z("div", ne(this.config.selectors.controls.wrapper));
            this.elements.controls = c;
            const h = {
                class: "plyr__controls__item"
            };
            return Ce(q(this.config.controls) ? this.config.controls : []).forEach((l => {
                if ("restart" === l && c.appendChild(i.call(this, "restart", h)),
                    "rewind" === l && c.appendChild(i.call(this, "rewind", h)),
                    "play" === l && c.appendChild(i.call(this, "play", h)),
                    "fast-forward" === l && c.appendChild(i.call(this, "fast-forward", h)),
                    "progress" === l) {
                    const t = Z("div", {
                        class: `${h.class} plyr__progress__container`
                    })
                        , i = Z("div", ne(this.config.selectors.progress));
                    if (i.appendChild(n.call(this, "seek", {
                        id: `plyr-seek-${e.id}`
                    })),
                        i.appendChild(s.call(this, "buffer")),
                        this.config.tooltips.seek) {
                        const e = Z("span", {
                            class: this.config.classNames.tooltip
                        }, "00:00");
                        i.appendChild(e),
                            this.elements.display.seekTooltip = e
                    }
                    this.elements.progress = i,
                        t.appendChild(this.elements.progress),
                        c.appendChild(t)
                }
                if ("current-time" === l && c.appendChild(a.call(this, "currentTime", h)),
                    "duration" === l && c.appendChild(a.call(this, "duration", h)),
                    "mute" === l || "volume" === l) {
                    let { volume: t } = this.elements;
                    if (H(t) && c.contains(t) || (t = Z("div", X({}, h, {
                        class: `${h.class} plyr__volume`.trim()
                    })),
                        this.elements.volume = t,
                        c.appendChild(t)),
                        "mute" === l && t.appendChild(i.call(this, "mute")),
                        "volume" === l && !Y.isIos) {
                        const i = {
                            max: 1,
                            step: .05,
                            value: this.config.volume
                        };
                        t.appendChild(n.call(this, "volume", X(i, {
                            id: `plyr-volume-${e.id}`
                        })))
                    }
                }
                if ("captions" === l && c.appendChild(i.call(this, "captions", h)),
                    "settings" === l && !W(this.config.settings)) {
                    const s = Z("div", X({}, h, {
                        class: `${h.class} plyr__menu`.trim(),
                        hidden: ""
                    }));
                    s.appendChild(i.call(this, "settings", {
                        "aria-haspopup": !0,
                        "aria-controls": `plyr-settings-${e.id}`,
                        "aria-expanded": !1
                    }));
                    const n = Z("div", {
                        class: "plyr__menu__container",
                        id: `plyr-settings-${e.id}`,
                        hidden: ""
                    })
                        , a = Z("div")
                        , l = Z("div", {
                            id: `plyr-settings-${e.id}-home`
                        })
                        , o = Z("div", {
                            role: "menu"
                        });
                    l.appendChild(o),
                        a.appendChild(l),
                        this.elements.settings.panels.home = l,
                        this.config.settings.forEach((i => {
                            const s = Z("button", X(ne(this.config.selectors.buttons.settings), {
                                type: "button",
                                class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,
                                role: "menuitem",
                                "aria-haspopup": !0,
                                hidden: ""
                            }));
                            t.call(this, s, i),
                                fe.call(this, s, "click", (() => {
                                    r.call(this, i, !1)
                                }
                                ));
                            const n = Z("span", null, He.get(i, this.config))
                                , l = Z("span", {
                                    class: this.config.classNames.menu.value
                                });
                            l.innerHTML = e[i],
                                n.appendChild(l),
                                s.appendChild(n),
                                o.appendChild(s);
                            const c = Z("div", {
                                id: `plyr-settings-${e.id}-${i}`,
                                hidden: ""
                            })
                                , h = Z("button", {
                                    type: "button",
                                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`
                                });
                            h.appendChild(Z("span", {
                                "aria-hidden": !0
                            }, He.get(i, this.config))),
                                h.appendChild(Z("span", {
                                    class: this.config.classNames.hidden
                                }, He.get("menuBack", this.config))),
                                fe.call(this, c, "keydown", (e => {
                                    37 === e.which && (e.preventDefault(),
                                        e.stopPropagation(),
                                        r.call(this, "home", !0))
                                }
                                ), !1),
                                fe.call(this, h, "click", (() => {
                                    r.call(this, "home", !1)
                                }
                                )),
                                c.appendChild(h),
                                c.appendChild(Z("div", {
                                    role: "menu"
                                })),
                                a.appendChild(c),
                                this.elements.settings.buttons[i] = s,
                                this.elements.settings.panels[i] = c
                        }
                        )),
                        n.appendChild(a),
                        s.appendChild(n),
                        c.appendChild(s),
                        this.elements.settings.popup = n,
                        this.elements.settings.menu = s
                }
                if ("pip" === l && me.pip && c.appendChild(i.call(this, "pip", h)),
                    "airplay" === l && me.airplay && c.appendChild(i.call(this, "airplay", h)),
                    "download" === l) {
                    const e = X({}, h, {
                        element: "a",
                        href: this.download,
                        target: "_blank"
                    });
                    this.isHTML5 && (e.download = "");
                    const { download: t } = this.config.urls;
                    !U(t) && this.isEmbed && X(e, {
                        icon: `logo-${this.provider}`,
                        label: this.provider
                    }),
                        c.appendChild(i.call(this, "download", e))
                }
                "fullscreen" === l && c.appendChild(i.call(this, "fullscreen", h))
            }
            )),
                this.isHTML5 && l.call(this, Le.getQualityOptions.call(this)),
                o.call(this),
                c
        },
        inject() {
            if (this.config.loadSprite) {
                const e = We.getIconUrl.call(this);
                e.cors && Ve(e.url, "sprite-plyr")
            }
            this.id = Math.floor(1e4 * Math.random());
            let e = null;
            this.elements.controls = null;
            const t = {
                id: this.id,
                seektime: this.config.seekTime,
                title: this.config.title
            };
            let i = !0;
            j(this.config.controls) && (this.config.controls = this.config.controls.call(this, t)),
                this.config.controls || (this.config.controls = []),
                H(this.config.controls) || _(this.config.controls) ? e = this.config.controls : (e = We.create.call(this, {
                    id: this.id,
                    seektime: this.config.seekTime,
                    speed: this.speed,
                    quality: this.quality,
                    captions: Ye.getLabel.call(this)
                }),
                    i = !1);
            let s;
            i && _(this.config.controls) && (e = (e => {
                let i = e;
                return Object.entries(t).forEach((([e, t]) => {
                    i = _e(i, `{${e}}`, t)
                }
                )),
                    i
            }
            )(e)),
                _(this.config.selectors.controls.container) && (s = document.querySelector(this.config.selectors.controls.container)),
                H(s) || (s = this.elements.container);
            if (s[H(e) ? "insertAdjacentElement" : "insertAdjacentHTML"]("afterbegin", e),
                H(this.elements.controls) || We.findElements.call(this),
                !W(this.elements.buttons)) {
                const e = e => {
                    const t = this.config.classNames.controlPressed;
                    Object.defineProperty(e, "pressed", {
                        enumerable: !0,
                        get: () => oe(e, t),
                        set(i = !1) {
                            le(e, t, i)
                        }
                    })
                }
                    ;
                Object.values(this.elements.buttons).filter(Boolean).forEach((t => {
                    q(t) || D(t) ? Array.from(t).filter(Boolean).forEach(e) : e(t)
                }
                ))
            }
            if (Y.isEdge && K(s),
                this.config.tooltips.controls) {
                const { classNames: e, selectors: t } = this.config
                    , i = `${t.controls.wrapper} ${t.labels} .${e.hidden}`
                    , s = ce.call(this, i);
                Array.from(s).forEach((e => {
                    le(e, this.config.classNames.hidden, !1),
                        le(e, this.config.classNames.tooltip, !0)
                }
                ))
            }
        }
    };
    function ze(e, t = !0) {
        let i = e;
        if (t) {
            const e = document.createElement("a");
            e.href = i,
                i = e.href
        }
        try {
            return new URL(i)
        } catch (e) {
            return null
        }
    }
    function Ke(e) {
        const t = new URLSearchParams;
        return L(e) && Object.entries(e).forEach((([e, i]) => {
            t.set(e, i)
        }
        )),
            t
    }
    const Ye = {
        setup() {
            if (!this.supported.ui)
                return;
            if (!this.isVideo || this.isYouTube || this.isHTML5 && !me.textTracks)
                return void (q(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && We.setCaptionsMenu.call(this));
            var e, t;
            if (H(this.elements.captions) || (this.elements.captions = Z("div", ne(this.config.selectors.captions)),
                e = this.elements.captions,
                t = this.elements.wrapper,
                H(e) && H(t) && t.parentNode.insertBefore(e, t.nextSibling)),
                Y.isIE && window.URL) {
                const e = this.media.querySelectorAll("track");
                Array.from(e).forEach((e => {
                    const t = e.getAttribute("src")
                        , i = ze(t);
                    null !== i && i.hostname !== window.location.href.hostname && ["http:", "https:"].includes(i.protocol) && Re(t, "blob").then((t => {
                        e.setAttribute("src", window.URL.createObjectURL(t))
                    }
                    )).catch((() => {
                        te(e)
                    }
                    ))
                }
                ))
            }
            const i = Ce((navigator.languages || [navigator.language || navigator.userLanguage || "en"]).map((e => e.split("-")[0])));
            let s = (this.storage.get("language") || this.config.captions.language || "auto").toLowerCase();
            "auto" === s && ([s] = i);
            let n = this.storage.get("captions");
            if (O(n) || ({ active: n } = this.config.captions),
                Object.assign(this.captions, {
                    toggled: !1,
                    active: n,
                    language: s,
                    languages: i
                }),
                this.isHTML5) {
                const e = this.config.captions.update ? "addtrack removetrack" : "removetrack";
                fe.call(this, this.media.textTracks, e, Ye.update.bind(this))
            }
            setTimeout(Ye.update.bind(this), 0)
        },
        update() {
            const e = Ye.getTracks.call(this, !0)
                , { active: t, language: i, meta: s, currentTrackNode: n } = this.captions
                , a = Boolean(e.find((e => e.language === i)));
            this.isHTML5 && this.isVideo && e.filter((e => !s.get(e))).forEach((e => {
                this.debug.log("Track added", e),
                    s.set(e, {
                        default: "showing" === e.mode
                    }),
                    "showing" === e.mode && (e.mode = "hidden"),
                    fe.call(this, e, "cuechange", (() => Ye.updateCues.call(this)))
            }
            )),
                (a && this.language !== i || !e.includes(n)) && (Ye.setLanguage.call(this, i),
                    Ye.toggle.call(this, t && a)),
                this.elements && le(this.elements.container, this.config.classNames.captions.enabled, !W(e)),
                q(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && We.setCaptionsMenu.call(this)
        },
        toggle(e, t = !0) {
            if (!this.supported.ui)
                return;
            const { toggled: i } = this.captions
                , s = this.config.classNames.captions.active
                , n = I(e) ? !i : e;
            if (n !== i) {
                if (t || (this.captions.active = n,
                    this.storage.set({
                        captions: n
                    })),
                    !this.language && n && !t) {
                    const e = Ye.getTracks.call(this)
                        , t = Ye.findTrack.call(this, [this.captions.language, ...this.captions.languages], !0);
                    return this.captions.language = t.language,
                        void Ye.set.call(this, e.indexOf(t))
                }
                this.elements.buttons.captions && (this.elements.buttons.captions.pressed = n),
                    le(this.elements.container, s, n),
                    this.captions.toggled = n,
                    We.updateSetting.call(this, "captions"),
                    ve.call(this, this.media, n ? "captionsenabled" : "captionsdisabled")
            }
            setTimeout((() => {
                n && this.captions.toggled && (this.captions.currentTrackNode.mode = "hidden")
            }
            ))
        },
        set(e, t = !0) {
            const i = Ye.getTracks.call(this);
            if (-1 !== e)
                if ($(e))
                    if (e in i) {
                        if (this.captions.currentTrack !== e) {
                            this.captions.currentTrack = e;
                            const s = i[e]
                                , { language: n } = s || {};
                            this.captions.currentTrackNode = s,
                                We.updateSetting.call(this, "captions"),
                                t || (this.captions.language = n,
                                    this.storage.set({
                                        language: n
                                    })),
                                this.isVimeo && this.embed.enableTextTrack(n),
                                ve.call(this, this.media, "languagechange")
                        }
                        Ye.toggle.call(this, !0, t),
                            this.isHTML5 && this.isVideo && Ye.updateCues.call(this)
                    } else
                        this.debug.warn("Track not found", e);
                else
                    this.debug.warn("Invalid caption argument", e);
            else
                Ye.toggle.call(this, !1, t)
        },
        setLanguage(e, t = !0) {
            if (!_(e))
                return void this.debug.warn("Invalid language argument", e);
            const i = e.toLowerCase();
            this.captions.language = i;
            const s = Ye.getTracks.call(this)
                , n = Ye.findTrack.call(this, [i]);
            Ye.set.call(this, s.indexOf(n), t)
        },
        getTracks(e = !1) {
            return Array.from((this.media || {}).textTracks || []).filter((t => !this.isHTML5 || e || this.captions.meta.has(t))).filter((e => ["captions", "subtitles"].includes(e.kind)))
        },
        findTrack(e, t = !1) {
            const i = Ye.getTracks.call(this)
                , s = e => Number((this.captions.meta.get(e) || {}).default)
                , n = Array.from(i).sort(((e, t) => s(t) - s(e)));
            let a;
            return e.every((e => (a = n.find((t => t.language === e)),
                !a))),
                a || (t ? n[0] : void 0)
        },
        getCurrentTrack() {
            return Ye.getTracks.call(this)[this.currentTrack]
        },
        getLabel(e) {
            let t = e;
            return !V(t) && me.textTracks && this.captions.toggled && (t = Ye.getCurrentTrack.call(this)),
                V(t) ? W(t.label) ? W(t.language) ? He.get("enabled", this.config) : e.language.toUpperCase() : t.label : He.get("disabled", this.config)
        },
        updateCues(e) {
            if (!this.supported.ui)
                return;
            if (!H(this.elements.captions))
                return void this.debug.warn("No captions element to render to");
            if (!I(e) && !Array.isArray(e))
                return void this.debug.warn("updateCues: Invalid input", e);
            let t = e;
            if (!t) {
                const e = Ye.getCurrentTrack.call(this);
                t = Array.from((e || {}).activeCues || []).map((e => e.getCueAsHTML())).map(qe)
            }
            const i = t.map((e => e.trim())).join("\n");
            if (i !== this.elements.captions.innerHTML) {
                ie(this.elements.captions);
                const e = Z("span", ne(this.config.selectors.caption));
                e.innerHTML = i,
                    this.elements.captions.appendChild(e),
                    ve.call(this, this.media, "cuechange")
            }
        }
    }
        , Qe = {
            enabled: !0,
            title: "",
            debug: !1,
            autoplay: !1,
            autopause: !0,
            playsinline: !0,
            seekTime: 10,
            volume: 1,
            muted: !1,
            duration: null,
            displayDuration: !0,
            invertTime: !0,
            toggleInvert: !0,
            ratio: null,
            clickToPlay: !0,
            hideControls: !0,
            resetOnEnd: !1,
            disableContextMenu: !0,
            loadSprite: !0,
            iconPrefix: "plyr",
            iconUrl: "https://cdn.plyr.io/3.6.9/plyr.svg",
            blankVideo: "https://cdn.plyr.io/static/blank.mp4",
            quality: {
                default: 576,
                options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],
                forced: !1,
                onChange: null
            },
            loop: {
                active: !1
            },
            speed: {
                selected: 1,
                options: [.5, .75, 1, 1.25, 1.5, 1.75, 2, 4]
            },
            keyboard: {
                focused: !0,
                global: !1
            },
            tooltips: {
                controls: !1,
                seek: !0
            },
            captions: {
                active: !1,
                language: "auto",
                update: !1
            },
            fullscreen: {
                enabled: !0,
                fallback: !0,
                iosNative: !1
            },
            storage: {
                enabled: !0,
                key: "plyr"
            },
            controls: ["play-large", "play", "progress", "current-time", "mute", "volume", "captions", "settings", "pip", "airplay", "fullscreen"],
            settings: ["captions", "quality", "speed"],
            i18n: {
                restart: "Restart",
                rewind: "Rewind {seektime}s",
                play: "Play",
                pause: "Pause",
                fastForward: "Forward {seektime}s",
                seek: "Seek",
                seekLabel: "{currentTime} of {duration}",
                played: "Played",
                buffered: "Buffered",
                currentTime: "Current time",
                duration: "Duration",
                volume: "Volume",
                mute: "Mute",
                unmute: "Unmute",
                enableCaptions: "Enable captions",
                disableCaptions: "Disable captions",
                download: "Download",
                enterFullscreen: "Enter fullscreen",
                exitFullscreen: "Exit fullscreen",
                frameTitle: "Player for {title}",
                captions: "Captions",
                settings: "Settings",
                pip: "PIP",
                menuBack: "Go back to previous menu",
                speed: "Speed",
                normal: "Normal",
                quality: "Quality",
                loop: "Loop",
                start: "Start",
                end: "End",
                all: "All",
                reset: "Reset",
                disabled: "Disabled",
                enabled: "Enabled",
                advertisement: "Ad",
                qualityBadge: {
                    2160: "4K",
                    1440: "HD",
                    1080: "HD",
                    720: "HD",
                    576: "SD",
                    480: "SD"
                }
            },
            urls: {
                download: null,
                vimeo: {
                    sdk: "https://player.vimeo.com/api/player.js",
                    iframe: "https://player.vimeo.com/video/{0}?{1}",
                    api: "https://vimeo.com/api/oembed.json?url={0}"
                },
                youtube: {
                    sdk: "https://www.youtube.com/iframe_api",
                    api: "https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}"
                },
                googleIMA: {
                    sdk: "https://imasdk.googleapis.com/js/sdkloader/ima3.js"
                }
            },
            listeners: {
                seek: null,
                play: null,
                pause: null,
                restart: null,
                rewind: null,
                fastForward: null,
                mute: null,
                volume: null,
                captions: null,
                download: null,
                fullscreen: null,
                pip: null,
                airplay: null,
                speed: null,
                quality: null,
                loop: null,
                language: null
            },
            events: ["ended", "progress", "stalled", "playing", "waiting", "canplay", "canplaythrough", "loadstart", "loadeddata", "loadedmetadata", "timeupdate", "volumechange", "play", "pause", "error", "seeking", "seeked", "emptied", "ratechange", "cuechange", "download", "enterfullscreen", "exitfullscreen", "captionsenabled", "captionsdisabled", "languagechange", "controlshidden", "controlsshown", "ready", "statechange", "qualitychange", "adsloaded", "adscontentpause", "adscontentresume", "adstarted", "adsmidpoint", "adscomplete", "adsallcomplete", "adsimpression", "adsclick"],
            selectors: {
                editable: "input, textarea, select, [contenteditable]",
                container: ".plyr",
                controls: {
                    container: null,
                    wrapper: ".plyr__controls"
                },
                labels: "[data-plyr]",
                buttons: {
                    play: '[data-plyr="play"]',
                    pause: '[data-plyr="pause"]',
                    restart: '[data-plyr="restart"]',
                    rewind: '[data-plyr="rewind"]',
                    fastForward: '[data-plyr="fast-forward"]',
                    mute: '[data-plyr="mute"]',
                    captions: '[data-plyr="captions"]',
                    download: '[data-plyr="download"]',
                    fullscreen: '[data-plyr="fullscreen"]',
                    pip: '[data-plyr="pip"]',
                    airplay: '[data-plyr="airplay"]',
                    settings: '[data-plyr="settings"]',
                    loop: '[data-plyr="loop"]'
                },
                inputs: {
                    seek: '[data-plyr="seek"]',
                    volume: '[data-plyr="volume"]',
                    speed: '[data-plyr="speed"]',
                    language: '[data-plyr="language"]',
                    quality: '[data-plyr="quality"]'
                },
                display: {
                    currentTime: ".plyr__time--current",
                    duration: ".plyr__time--duration",
                    buffer: ".plyr__progress__buffer",
                    loop: ".plyr__progress__loop",
                    volume: ".plyr__volume--display"
                },
                progress: ".plyr__progress",
                captions: ".plyr__captions",
                caption: ".plyr__caption"
            },
            classNames: {
                type: "plyr--{0}",
                provider: "plyr--{0}",
                video: "plyr__video-wrapper",
                embed: "plyr__video-embed",
                videoFixedRatio: "plyr__video-wrapper--fixed-ratio",
                embedContainer: "plyr__video-embed__container",
                poster: "plyr__poster",
                posterEnabled: "plyr__poster-enabled",
                ads: "plyr__ads",
                control: "plyr__control",
                controlPressed: "plyr__control--pressed",
                playing: "plyr--playing",
                paused: "plyr--paused",
                stopped: "plyr--stopped",
                loading: "plyr--loading",
                hover: "plyr--hover",
                tooltip: "plyr__tooltip",
                cues: "plyr__cues",
                hidden: "plyr__sr-only",
                hideControls: "plyr--hide-controls",
                isIos: "plyr--is-ios",
                isTouch: "plyr--is-touch",
                uiSupported: "plyr--full-ui",
                noTransition: "plyr--no-transition",
                display: {
                    time: "plyr__time"
                },
                menu: {
                    value: "plyr__menu__value",
                    badge: "plyr__badge",
                    open: "plyr--menu-open"
                },
                captions: {
                    enabled: "plyr--captions-enabled",
                    active: "plyr--captions-active"
                },
                fullscreen: {
                    enabled: "plyr--fullscreen-enabled",
                    fallback: "plyr--fullscreen-fallback"
                },
                pip: {
                    supported: "plyr--pip-supported",
                    active: "plyr--pip-active"
                },
                airplay: {
                    supported: "plyr--airplay-supported",
                    active: "plyr--airplay-active"
                },
                tabFocus: "plyr__tab-focus",
                previewThumbnails: {
                    thumbContainer: "plyr__preview-thumb",
                    thumbContainerShown: "plyr__preview-thumb--is-shown",
                    imageContainer: "plyr__preview-thumb__image-container",
                    timeContainer: "plyr__preview-thumb__time-container",
                    scrubbingContainer: "plyr__preview-scrubbing",
                    scrubbingContainerShown: "plyr__preview-scrubbing--is-shown"
                }
            },
            attributes: {
                embed: {
                    provider: "data-plyr-provider",
                    id: "data-plyr-embed-id",
                    hash: "data-plyr-embed-hash"
                }
            },
            ads: {
                enabled: !1,
                publisherId: "",
                tagUrl: ""
            },
            previewThumbnails: {
                enabled: !1,
                src: ""
            },
            vimeo: {
                byline: !1,
                portrait: !1,
                title: !1,
                speed: !0,
                transparent: !1,
                customControls: !0,
                referrerPolicy: null,
                premium: !1
            },
            youtube: {
                rel: 0,
                showinfo: 0,
                iv_load_policy: 3,
                modestbranding: 1,
                customControls: !0,
                noCookie: !1
            }
        }
        , Xe = "picture-in-picture"
        , Je = "inline"
        , Ge = {
            html5: "html5",
            youtube: "youtube",
            vimeo: "vimeo"
        }
        , Ze = "audio"
        , et = "video";
    const tt = () => { }
        ;
    class it {
        constructor(e = !1) {
            this.enabled = window.console && e,
                this.enabled && this.log("Debugging enabled")
        }
        get log() {
            return this.enabled ? Function.prototype.bind.call(console.log, console) : tt
        }
        get warn() {
            return this.enabled ? Function.prototype.bind.call(console.warn, console) : tt
        }
        get error() {
            return this.enabled ? Function.prototype.bind.call(console.error, console) : tt
        }
    }
    class st {
        constructor(t) {
            e(this, "onChange", (() => {
                if (!this.enabled)
                    return;
                const e = this.player.elements.buttons.fullscreen;
                H(e) && (e.pressed = this.active);
                const t = this.target === this.player.media ? this.target : this.player.elements.container;
                ve.call(this.player, t, this.active ? "enterfullscreen" : "exitfullscreen", !0)
            }
            )),
                e(this, "toggleFallback", ((e = !1) => {
                    if (e ? this.scrollPosition = {
                        x: window.scrollX || 0,
                        y: window.scrollY || 0
                    } : window.scrollTo(this.scrollPosition.x, this.scrollPosition.y),
                        document.body.style.overflow = e ? "hidden" : "",
                        le(this.target, this.player.config.classNames.fullscreen.fallback, e),
                        Y.isIos) {
                        let t = document.head.querySelector('meta[name="viewport"]');
                        const i = "viewport-fit=cover";
                        t || (t = document.createElement("meta"),
                            t.setAttribute("name", "viewport"));
                        const s = _(t.content) && t.content.includes(i);
                        e ? (this.cleanupViewport = !s,
                            s || (t.content += `,${i}`)) : this.cleanupViewport && (t.content = t.content.split(",").filter((e => e.trim() !== i)).join(","))
                    }
                    this.onChange()
                }
                )),
                e(this, "trapFocus", (e => {
                    if (Y.isIos || !this.active || "Tab" !== e.key || 9 !== e.keyCode)
                        return;
                    const t = document.activeElement
                        , i = ce.call(this.player, "a[href], button:not(:disabled), input:not(:disabled), [tabindex]")
                        , [s] = i
                        , n = i[i.length - 1];
                    t !== n || e.shiftKey ? t === s && e.shiftKey && (n.focus(),
                        e.preventDefault()) : (s.focus(),
                            e.preventDefault())
                }
                )),
                e(this, "update", (() => {
                    if (this.enabled) {
                        let e;
                        e = this.forceFallback ? "Fallback (forced)" : st.native ? "Native" : "Fallback",
                            this.player.debug.log(`${e} fullscreen enabled`)
                    } else
                        this.player.debug.log("Fullscreen not supported and fallback disabled");
                    le(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled)
                }
                )),
                e(this, "enter", (() => {
                    this.enabled && (Y.isIos && this.player.config.fullscreen.iosNative ? this.player.isVimeo ? this.player.embed.requestFullscreen() : this.target.webkitEnterFullscreen() : !st.native || this.forceFallback ? this.toggleFallback(!0) : this.prefix ? W(this.prefix) || this.target[`${this.prefix}Request ${this.property}`]() : this.target.requestFullscreen({
                        navigationUI: "hide"
                    }))
                }
                )),
                e(this, "exit", (() => {
                    if (this.enabled)
                        if (Y.isIos && this.player.config.fullscreen.iosNative)
                            this.target.webkitExitFullscreen(),
                                ke(this.player.play());
                        else if (!st.native || this.forceFallback)
                            this.toggleFallback(!1);
                        else if (this.prefix) {
                            if (!W(this.prefix)) {
                                const e = "moz" === this.prefix ? "Cancel" : "Exit";
                                document[`${this.prefix}${e}${this.property}`]()
                            }
                        } else
                            (document.cancelFullScreen || document.exitFullscreen).call(document)
                }
                )),
                e(this, "toggle", (() => {
                    this.active ? this.exit() : this.enter()
                }
                )),
                this.player = t,
                this.prefix = st.prefix,
                this.property = st.property,
                this.scrollPosition = {
                    x: 0,
                    y: 0
                },
                this.forceFallback = "force" === t.config.fullscreen.fallback,
                this.player.elements.fullscreen = t.config.fullscreen.container && function (e, t) {
                    const { prototype: i } = Element;
                    return (i.closest || function () {
                        let e = this;
                        do {
                            if (re.matches(e, t))
                                return e;
                            e = e.parentElement || e.parentNode
                        } while (null !== e && 1 === e.nodeType);
                        return null
                    }
                    ).call(e, t)
                }(this.player.elements.container, t.config.fullscreen.container),
                fe.call(this.player, document, "ms" === this.prefix ? "MSFullscreenChange" : `${this.prefix}fullscreenchange`, (() => {
                    this.onChange()
                }
                )),
                fe.call(this.player, this.player.elements.container, "dblclick", (e => {
                    H(this.player.elements.controls) && this.player.elements.controls.contains(e.target) || this.player.listeners.proxy(e, this.toggle, "fullscreen")
                }
                )),
                fe.call(this, this.player.elements.container, "keydown", (e => this.trapFocus(e))),
                this.update()
        }
        static get native() {
            return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)
        }
        get usingNative() {
            return st.native && !this.forceFallback
        }
        static get prefix() {
            if (j(document.exitFullscreen))
                return "";
            let e = "";
            return ["webkit", "moz", "ms"].some((t => !(!j(document[`${t}ExitFullscreen`]) && !j(document[`${t}CancelFullScreen`])) && (e = t,
                !0))),
                e
        }
        static get property() {
            return "moz" === this.prefix ? "FullScreen" : "Fullscreen"
        }
        get enabled() {
            return (st.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo
        }
        get active() {
            if (!this.enabled)
                return !1;
            if (!st.native || this.forceFallback)
                return oe(this.target, this.player.config.classNames.fullscreen.fallback);
            const e = this.prefix ? this.target.getRootNode()[`${this.prefix}${this.property}Element`] : this.target.getRootNode().fullscreenElement;
            return e && e.shadowRoot ? e === this.target.getRootNode().host : e === this.target
        }
        get target() {
            return Y.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container
        }
    }
    function nt(e, t = 1) {
        return new Promise(((i, s) => {
            const n = new Image
                , a = () => {
                    delete n.onload,
                        delete n.onerror,
                        (n.naturalWidth >= t ? i : s)(n)
                }
                ;
            Object.assign(n, {
                onload: a,
                onerror: a,
                src: e
            })
        }
        ))
    }
    const at = {
        addStyleHook() {
            le(this.elements.container, this.config.selectors.container.replace(".", ""), !0),
                le(this.elements.container, this.config.classNames.uiSupported, this.supported.ui)
        },
        toggleNativeControls(e = !1) {
            e && this.isHTML5 ? this.media.setAttribute("controls", "") : this.media.removeAttribute("controls")
        },
        build() {
            if (this.listeners.media(),
                !this.supported.ui)
                return this.debug.warn(`Basic support only for ${this.provider} ${this.type}`),
                    void at.toggleNativeControls.call(this, !0);
            H(this.elements.controls) || (We.inject.call(this),
                this.listeners.controls()),
                at.toggleNativeControls.call(this),
                this.isHTML5 && Ye.setup.call(this),
                this.volume = null,
                this.muted = null,
                this.loop = null,
                this.quality = null,
                this.speed = null,
                We.updateVolume.call(this),
                We.timeUpdate.call(this),
                We.durationUpdate.call(this),
                at.checkPlaying.call(this),
                le(this.elements.container, this.config.classNames.pip.supported, me.pip && this.isHTML5 && this.isVideo),
                le(this.elements.container, this.config.classNames.airplay.supported, me.airplay && this.isHTML5),
                le(this.elements.container, this.config.classNames.isIos, Y.isIos),
                le(this.elements.container, this.config.classNames.isTouch, this.touch),
                this.ready = !0,
                setTimeout((() => {
                    ve.call(this, this.media, "ready")
                }
                ), 0),
                at.setTitle.call(this),
                this.poster && at.setPoster.call(this, this.poster, !1).catch((() => { }
                )),
                this.config.duration && We.durationUpdate.call(this)
        },
        setTitle() {
            let e = He.get("play", this.config);
            if (_(this.config.title) && !W(this.config.title) && (e += `, ${this.config.title}`),
                Array.from(this.elements.buttons.play || []).forEach((t => {
                    t.setAttribute("aria-label", e)
                }
                )),
                this.isEmbed) {
                const e = he.call(this, "iframe");
                if (!H(e))
                    return;
                const t = W(this.config.title) ? "video" : this.config.title
                    , i = He.get("frameTitle", this.config);
                e.setAttribute("title", i.replace("{title}", t))
            }
        },
        togglePoster(e) {
            le(this.elements.container, this.config.classNames.posterEnabled, e)
        },
        setPoster(e, t = !0) {
            return t && this.poster ? Promise.reject(new Error("Poster already set")) : (this.media.setAttribute("data-poster", e),
                this.elements.poster.removeAttribute("hidden"),
                Te.call(this).then((() => nt(e))).catch((t => {
                    throw e === this.poster && at.togglePoster.call(this, !1),
                    t
                }
                )).then((() => {
                    if (e !== this.poster)
                        throw new Error("setPoster cancelled by later call to setPoster")
                }
                )).then((() => (Object.assign(this.elements.poster.style, {
                    backgroundImage: `url('${e}')`,
                    backgroundSize: ""
                }),
                    at.togglePoster.call(this, !0),
                    e))))
        },
        checkPlaying(e) {
            le(this.elements.container, this.config.classNames.playing, this.playing),
                le(this.elements.container, this.config.classNames.paused, this.paused),
                le(this.elements.container, this.config.classNames.stopped, this.stopped),
                Array.from(this.elements.buttons.play || []).forEach((e => {
                    Object.assign(e, {
                        pressed: this.playing
                    }),
                        e.setAttribute("aria-label", He.get(this.playing ? "pause" : "play", this.config))
                }
                )),
                F(e) && "timeupdate" === e.type || at.toggleControls.call(this)
        },
        checkLoading(e) {
            this.loading = ["stalled", "waiting"].includes(e.type),
                clearTimeout(this.timers.loading),
                this.timers.loading = setTimeout((() => {
                    le(this.elements.container, this.config.classNames.loading, this.loading),
                        at.toggleControls.call(this)
                }
                ), this.loading ? 250 : 0)
        },
        toggleControls(e) {
            const { controls: t } = this.elements;
            if (t && this.config.hideControls) {
                const i = this.touch && this.lastSeekTime + 2e3 > Date.now();
                this.toggleControls(Boolean(e || this.loading || this.paused || t.pressed || t.hover || i))
            }
        },
        migrateStyles() {
            Object.values({
                ...this.media.style
            }).filter((e => !W(e) && _(e) && e.startsWith("--plyr"))).forEach((e => {
                this.elements.container.style.setProperty(e, this.media.style.getPropertyValue(e)),
                    this.media.style.removeProperty(e)
            }
            )),
                W(this.media.style) && this.media.removeAttribute("style")
        }
    };
    class lt {
        constructor(t) {
            e(this, "firstTouch", (() => {
                const { player: e } = this
                    , { elements: t } = e;
                e.touch = !0,
                    le(t.container, e.config.classNames.isTouch, !0)
            }
            )),
                e(this, "setTabFocus", (e => {
                    const { player: t } = this
                        , { elements: i } = t;
                    if (clearTimeout(this.focusTimer),
                        "keydown" === e.type && 9 !== e.which)
                        return;
                    "keydown" === e.type && (this.lastKeyDown = e.timeStamp);
                    const s = e.timeStamp - this.lastKeyDown <= 20;
                    ("focus" !== e.type || s) && ((() => {
                        const e = t.config.classNames.tabFocus;
                        le(ce.call(t, `.${e}`), e, !1)
                    }
                    )(),
                        "focusout" !== e.type && (this.focusTimer = setTimeout((() => {
                            const e = document.activeElement;
                            i.container.contains(e) && le(document.activeElement, t.config.classNames.tabFocus, !0)
                        }
                        ), 10)))
                }
                )),
                e(this, "global", ((e = !0) => {
                    const { player: t } = this;
                    t.config.keyboard.global && ge.call(t, window, "keydown keyup", this.handleKey, e, !1),
                        ge.call(t, document.body, "click", this.toggleMenu, e),
                        ye.call(t, document.body, "touchstart", this.firstTouch),
                        ge.call(t, document.body, "keydown focus blur focusout", this.setTabFocus, e, !1, !0)
                }
                )),
                e(this, "container", (() => {
                    const { player: e } = this
                        , { config: t, elements: i, timers: s } = e;
                    !t.keyboard.global && t.keyboard.focused && fe.call(e, i.container, "keydown keyup", this.handleKey, !1),
                        fe.call(e, i.container, "mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen", (t => {
                            const { controls: n } = i;
                            n && "enterfullscreen" === t.type && (n.pressed = !1,
                                n.hover = !1);
                            let a = 0;
                            ["touchstart", "touchmove", "mousemove"].includes(t.type) && (at.toggleControls.call(e, !0),
                                a = e.touch ? 3e3 : 2e3),
                                clearTimeout(s.controls),
                                s.controls = setTimeout((() => at.toggleControls.call(e, !1)), a)
                        }
                        ));
                    const n = () => {
                        if (!e.isVimeo || e.config.vimeo.premium)
                            return;
                        const t = i.wrapper
                            , { active: s } = e.fullscreen
                            , [n, a] = xe.call(e)
                            , l = Se(`aspect-ratio: ${n} / ${a}`);
                        if (!s)
                            return void (l ? (t.style.width = null,
                                t.style.height = null) : (t.style.maxWidth = null,
                                    t.style.margin = null));
                        const [o, r] = [Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)]
                            , c = o / r > n / a;
                        l ? (t.style.width = c ? "auto" : "100%",
                            t.style.height = c ? "100%" : "auto") : (t.style.maxWidth = c ? r / a * n + "px" : null,
                                t.style.margin = c ? "0 auto" : null)
                    }
                        , a = () => {
                            clearTimeout(s.resized),
                                s.resized = setTimeout(n, 50)
                        }
                        ;
                    fe.call(e, i.container, "enterfullscreen exitfullscreen", (t => {
                        const { target: s } = e.fullscreen;
                        if (s !== i.container)
                            return;
                        if (!e.isEmbed && W(e.config.ratio))
                            return;
                        n();
                        ("enterfullscreen" === t.type ? fe : be).call(e, window, "resize", a)
                    }
                    ))
                }
                )),
                e(this, "media", (() => {
                    const { player: e } = this
                        , { elements: t } = e;
                    if (fe.call(e, e.media, "timeupdate seeking seeked", (t => We.timeUpdate.call(e, t))),
                        fe.call(e, e.media, "durationchange loadeddata loadedmetadata", (t => We.durationUpdate.call(e, t))),
                        fe.call(e, e.media, "ended", (() => {
                            e.isHTML5 && e.isVideo && e.config.resetOnEnd && (e.restart(),
                                e.pause())
                        }
                        )),
                        fe.call(e, e.media, "progress playing seeking seeked", (t => We.updateProgress.call(e, t))),
                        fe.call(e, e.media, "volumechange", (t => We.updateVolume.call(e, t))),
                        fe.call(e, e.media, "playing play pause ended emptied timeupdate", (t => at.checkPlaying.call(e, t))),
                        fe.call(e, e.media, "waiting canplay seeked playing", (t => at.checkLoading.call(e, t))),
                        e.supported.ui && e.config.clickToPlay && !e.isAudio) {
                        const i = he.call(e, `.${e.config.classNames.video}`);
                        if (!H(i))
                            return;
                        fe.call(e, t.container, "click", (s => {
                            ([t.container, i].includes(s.target) || i.contains(s.target)) && (e.touch && e.config.hideControls || (e.ended ? (this.proxy(s, e.restart, "restart"),
                                this.proxy(s, (() => {
                                    ke(e.play())
                                }
                                ), "play")) : this.proxy(s, (() => {
                                    ke(e.togglePlay())
                                }
                                ), "play")))
                        }
                        ))
                    }
                    e.supported.ui && e.config.disableContextMenu && fe.call(e, t.wrapper, "contextmenu", (e => {
                        e.preventDefault()
                    }
                    ), !1),
                        fe.call(e, e.media, "volumechange", (() => {
                            e.storage.set({
                                volume: e.volume,
                                muted: e.muted
                            })
                        }
                        )),
                        fe.call(e, e.media, "ratechange", (() => {
                            We.updateSetting.call(e, "speed"),
                                e.storage.set({
                                    speed: e.speed
                                })
                        }
                        )),
                        fe.call(e, e.media, "qualitychange", (t => {
                            We.updateSetting.call(e, "quality", null, t.detail.quality)
                        }
                        )),
                        fe.call(e, e.media, "ready qualitychange", (() => {
                            We.setDownloadUrl.call(e)
                        }
                        ));
                    const i = e.config.events.concat(["keyup", "keydown"]).join(" ");
                    fe.call(e, e.media, i, (i => {
                        let { detail: s = {} } = i;
                        "error" === i.type && (s = e.media.error),
                            ve.call(e, t.container, i.type, !0, s)
                    }
                    ))
                }
                )),
                e(this, "proxy", ((e, t, i) => {
                    const { player: s } = this
                        , n = s.config.listeners[i];
                    let a = !0;
                    j(n) && (a = n.call(s, e)),
                        !1 !== a && j(t) && t.call(s, e)
                }
                )),
                e(this, "bind", ((e, t, i, s, n = !0) => {
                    const { player: a } = this
                        , l = a.config.listeners[s]
                        , o = j(l);
                    fe.call(a, e, t, (e => this.proxy(e, i, s)), n && !o)
                }
                )),
                e(this, "controls", (() => {
                    const { player: e } = this
                        , { elements: t } = e
                        , i = Y.isIE ? "change" : "input";
                    if (t.buttons.play && Array.from(t.buttons.play).forEach((t => {
                        this.bind(t, "click", (() => {
                            ke(e.togglePlay())
                        }
                        ), "play")
                    }
                    )),
                        this.bind(t.buttons.restart, "click", e.restart, "restart"),
                        this.bind(t.buttons.rewind, "click", (() => {
                            e.lastSeekTime = Date.now(),
                                e.rewind()
                        }
                        ), "rewind"),
                        this.bind(t.buttons.fastForward, "click", (() => {
                            e.lastSeekTime = Date.now(),
                                e.forward()
                        }
                        ), "fastForward"),
                        this.bind(t.buttons.mute, "click", (() => {
                            e.muted = !e.muted
                        }
                        ), "mute"),
                        this.bind(t.buttons.captions, "click", (() => e.toggleCaptions())),
                        this.bind(t.buttons.download, "click", (() => {
                            ve.call(e, e.media, "download")
                        }
                        ), "download"),
                        this.bind(t.buttons.fullscreen, "click", (() => {
                            e.fullscreen.toggle()
                        }
                        ), "fullscreen"),
                        this.bind(t.buttons.pip, "click", (() => {
                            e.pip = "toggle"
                        }
                        ), "pip"),
                        this.bind(t.buttons.airplay, "click", e.airplay, "airplay"),
                        this.bind(t.buttons.settings, "click", (t => {
                            t.stopPropagation(),
                                t.preventDefault(),
                                We.toggleMenu.call(e, t)
                        }
                        ), null, !1),
                        this.bind(t.buttons.settings, "keyup", (t => {
                            const i = t.which;
                            [13, 32].includes(i) && (13 !== i ? (t.preventDefault(),
                                t.stopPropagation(),
                                We.toggleMenu.call(e, t)) : We.focusFirstMenuItem.call(e, null, !0))
                        }
                        ), null, !1),
                        this.bind(t.settings.menu, "keydown", (t => {
                            27 === t.which && We.toggleMenu.call(e, t)
                        }
                        )),
                        this.bind(t.inputs.seek, "mousedown mousemove", (e => {
                            const i = t.progress.getBoundingClientRect()
                                , s = 100 / i.width * (e.pageX - i.left);
                            e.currentTarget.setAttribute("seek-value", s)
                        }
                        )),
                        this.bind(t.inputs.seek, "mousedown mouseup keydown keyup touchstart touchend", (t => {
                            const i = t.currentTarget
                                , s = t.keyCode ? t.keyCode : t.which
                                , n = "play-on-seeked";
                            if (R(t) && 39 !== s && 37 !== s)
                                return;
                            e.lastSeekTime = Date.now();
                            const a = i.hasAttribute(n)
                                , l = ["mouseup", "touchend", "keyup"].includes(t.type);
                            a && l ? (i.removeAttribute(n),
                                ke(e.play())) : !l && e.playing && (i.setAttribute(n, ""),
                                    e.pause())
                        }
                        )),
                        Y.isIos) {
                        const t = ce.call(e, 'input[type="range"]');
                        Array.from(t).forEach((e => this.bind(e, i, (e => K(e.target)))))
                    }
                    this.bind(t.inputs.seek, i, (t => {
                        const i = t.currentTarget;
                        let s = i.getAttribute("seek-value");
                        W(s) && (s = i.value),
                            i.removeAttribute("seek-value"),
                            e.currentTime = s / i.max * e.duration
                    }
                    ), "seek"),
                        this.bind(t.progress, "mouseenter mouseleave mousemove", (t => We.updateSeekTooltip.call(e, t))),
                        this.bind(t.progress, "mousemove touchmove", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.startMove(t)
                        }
                        )),
                        this.bind(t.progress, "mouseleave touchend click", (() => {
                            const { previewThumbnails: t } = e;
                            t && t.loaded && t.endMove(!1, !0)
                        }
                        )),
                        this.bind(t.progress, "mousedown touchstart", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.startScrubbing(t)
                        }
                        )),
                        this.bind(t.progress, "mouseup touchend", (t => {
                            const { previewThumbnails: i } = e;
                            i && i.loaded && i.endScrubbing(t)
                        }
                        )),
                        Y.isWebkit && Array.from(ce.call(e, 'input[type="range"]')).forEach((t => {
                            this.bind(t, "input", (t => We.updateRangeFill.call(e, t.target)))
                        }
                        )),
                        e.config.toggleInvert && !H(t.display.duration) && this.bind(t.display.currentTime, "click", (() => {
                            0 !== e.currentTime && (e.config.invertTime = !e.config.invertTime,
                                We.timeUpdate.call(e))
                        }
                        )),
                        this.bind(t.inputs.volume, i, (t => {
                            e.volume = t.target.value
                        }
                        ), "volume"),
                        this.bind(t.controls, "mouseenter mouseleave", (i => {
                            t.controls.hover = !e.touch && "mouseenter" === i.type
                        }
                        )),
                        t.fullscreen && Array.from(t.fullscreen.children).filter((e => !e.contains(t.container))).forEach((i => {
                            this.bind(i, "mouseenter mouseleave", (i => {
                                t.controls && (t.controls.hover = !e.touch && "mouseenter" === i.type)
                            }
                            ))
                        }
                        )),
                        this.bind(t.controls, "mousedown mouseup touchstart touchend touchcancel", (e => {
                            t.controls.pressed = ["mousedown", "touchstart"].includes(e.type)
                        }
                        )),
                        this.bind(t.controls, "focusin", (() => {
                            const { config: i, timers: s } = e;
                            le(t.controls, i.classNames.noTransition, !0),
                                at.toggleControls.call(e, !0),
                                setTimeout((() => {
                                    le(t.controls, i.classNames.noTransition, !1)
                                }
                                ), 0);
                            const n = this.touch ? 3e3 : 4e3;
                            clearTimeout(s.controls),
                                s.controls = setTimeout((() => at.toggleControls.call(e, !1)), n)
                        }
                        )),
                        this.bind(t.inputs.volume, "wheel", (t => {
                            const i = t.webkitDirectionInvertedFromDevice
                                , [s, n] = [t.deltaX, -t.deltaY].map((e => i ? -e : e))
                                , a = Math.sign(Math.abs(s) > Math.abs(n) ? s : n);
                            e.increaseVolume(a / 50);
                            const { volume: l } = e.media;
                            (1 === a && l < 1 || -1 === a && l > 0) && t.preventDefault()
                        }
                        ), "volume", !1)
                }
                )),
                this.player = t,
                this.lastKey = null,
                this.focusTimer = null,
                this.lastKeyDown = null,
                this.handleKey = this.handleKey.bind(this),
                this.toggleMenu = this.toggleMenu.bind(this),
                this.setTabFocus = this.setTabFocus.bind(this),
                this.firstTouch = this.firstTouch.bind(this)
        }
        handleKey(e) {
            const { player: t } = this
                , { elements: i } = t
                , s = e.keyCode ? e.keyCode : e.which
                , n = "keydown" === e.type
                , a = n && s === this.lastKey;
            if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey)
                return;
            if (!$(s))
                return;
            if (n) {
                const n = document.activeElement;
                if (H(n)) {
                    const { editable: s } = t.config.selectors
                        , { seek: a } = i.inputs;
                    if (n !== a && re(n, s))
                        return;
                    if (32 === e.which && re(n, 'button, [role^="menuitem"]'))
                        return
                }
                switch ([32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79].includes(s) && (e.preventDefault(),
                    e.stopPropagation()),
                s) {
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                        a || (t.currentTime = t.duration / 10 * (s - 48));
                        break;
                    case 32:
                    case 75:
                        a || ke(t.togglePlay());
                        break;
                    case 38:
                        t.increaseVolume(.1);
                        break;
                    case 40:
                        t.decreaseVolume(.1);
                        break;
                    case 77:
                        a || (t.muted = !t.muted);
                        break;
                    case 39:
                        t.forward();
                        break;
                    case 37:
                        t.rewind();
                        break;
                    case 70:
                        t.fullscreen.toggle();
                        break;
                    case 67:
                        a || t.toggleCaptions();
                        break;
                    case 76:
                        t.loop = !t.loop
                }
                27 === s && !t.fullscreen.usingNative && t.fullscreen.active && t.fullscreen.toggle(),
                    this.lastKey = s
            } else
                this.lastKey = null
        }
        toggleMenu(e) {
            We.toggleMenu.call(this.player, e)
        }
    }
    "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
    var ot = function (e, t) {
        return e(t = {
            exports: {}
        }, t.exports),
            t.exports
    }((function (e, t) {
        e.exports = function () {
            var e = function () { }
                , t = {}
                , i = {}
                , s = {};
            function n(e, t) {
                e = e.push ? e : [e];
                var n, a, l, o = [], r = e.length, c = r;
                for (n = function (e, i) {
                    i.length && o.push(e),
                        --c || t(o)
                }
                    ; r--;)
                    a = e[r],
                        (l = i[a]) ? n(a, l) : (s[a] = s[a] || []).push(n)
            }
            function a(e, t) {
                if (e) {
                    var n = s[e];
                    if (i[e] = t,
                        n)
                        for (; n.length;)
                            n[0](e, t),
                                n.splice(0, 1)
                }
            }
            function l(t, i) {
                t.call && (t = {
                    success: t
                }),
                    i.length ? (t.error || e)(i) : (t.success || e)(t)
            }
            function o(t, i, s, n) {
                var a, l, r = document, c = s.async, h = (s.numRetries || 0) + 1, u = s.before || e, d = t.replace(/[\?|#].*$/, ""), m = t.replace(/^(css|img)!/, "");
                n = n || 0,
                    /(^css!|\.css$)/.test(d) ? ((l = r.createElement("link")).rel = "stylesheet",
                        l.href = m,
                        (a = "hideFocus" in l) && l.relList && (a = 0,
                            l.rel = "preload",
                            l.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(d) ? (l = r.createElement("img")).src = m : ((l = r.createElement("script")).src = t,
                                l.async = void 0 === c || c),
                    l.onload = l.onerror = l.onbeforeload = function (e) {
                        var r = e.type[0];
                        if (a)
                            try {
                                l.sheet.cssText.length || (r = "e")
                            } catch (e) {
                                18 != e.code && (r = "e")
                            }
                        if ("e" == r) {
                            if ((n += 1) < h)
                                return o(t, i, s, n)
                        } else if ("preload" == l.rel && "style" == l.as)
                            return l.rel = "stylesheet";
                        i(t, r, e.defaultPrevented)
                    }
                    ,
                    !1 !== u(t, l) && r.head.appendChild(l)
            }
            function r(e, t, i) {
                var s, n, a = (e = e.push ? e : [e]).length, l = a, r = [];
                for (s = function (e, i, s) {
                    if ("e" == i && r.push(e),
                        "b" == i) {
                        if (!s)
                            return;
                        r.push(e)
                    }
                    --a || t(r)
                }
                    ,
                    n = 0; n < l; n++)
                    o(e[n], s, i)
            }
            function c(e, i, s) {
                var n, o;
                if (i && i.trim && (n = i),
                    o = (n ? s : i) || {},
                    n) {
                    if (n in t)
                        throw "LoadJS";
                    t[n] = !0
                }
                function c(t, i) {
                    r(e, (function (e) {
                        l(o, e),
                            t && l({
                                success: t,
                                error: i
                            }, e),
                            a(n, e)
                    }
                    ), o)
                }
                if (o.returnPromise)
                    return new Promise(c);
                c()
            }
            return c.ready = function (e, t) {
                return n(e, (function (e) {
                    l(t, e)
                }
                )),
                    c
            }
                ,
                c.done = function (e) {
                    a(e, [])
                }
                ,
                c.reset = function () {
                    t = {},
                        i = {},
                        s = {}
                }
                ,
                c.isDefined = function (e) {
                    return e in t
                }
                ,
                c
        }()
    }
    ));
    function rt(e) {
        return new Promise(((t, i) => {
            ot(e, {
                success: t,
                error: i
            })
        }
        ))
    }
    function ct(e) {
        e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
            this.media.paused === e && (this.media.paused = !e,
                ve.call(this, this.media, e ? "play" : "pause"))
    }
    const ht = {
        setup() {
            const e = this;
            le(e.elements.wrapper, e.config.classNames.embed, !0),
                e.options.speed = e.config.speed.options,
                Me.call(e),
                L(window.Vimeo) ? ht.ready.call(e) : rt(e.config.urls.vimeo.sdk).then((() => {
                    ht.ready.call(e)
                }
                )).catch((t => {
                    e.debug.warn("Vimeo SDK (player.js) failed to load", t)
                }
                ))
        },
        ready() {
            const e = this
                , t = e.config.vimeo
                , { premium: i, referrerPolicy: s, ...n } = t;
            let a = e.media.getAttribute("src")
                , l = "";
            W(a) ? (a = e.media.getAttribute(e.config.attributes.embed.id),
                l = e.media.getAttribute(e.config.attributes.embed.hash)) : l = function (e) {
                    const t = e.match(/^.*(?:vimeo.com\/|video\/)(?:\d+)(?:\?.*&*h=|\/)+(?<hash>[\d,a-f]+)/);
                    return t ? t.groups.hash : null
                }(a);
            const o = l ? {
                h: l
            } : {};
            i && Object.assign(n, {
                controls: !1,
                sidedock: !1
            });
            const r = Ke({
                loop: e.config.loop.active,
                autoplay: e.autoplay,
                muted: e.muted,
                gesture: "media",
                playsinline: !this.config.fullscreen.iosNative,
                ...o,
                ...n
            })
                , c = W(h = a) ? null : $(Number(h)) ? h : h.match(/^.*(vimeo.com\/|video\/)(\d+).*/) ? RegExp.$2 : h;
            var h;
            const u = Z("iframe")
                , d = $e(e.config.urls.vimeo.iframe, c, r);
            if (u.setAttribute("src", d),
                u.setAttribute("allowfullscreen", ""),
                u.setAttribute("allow", ["autoplay", "fullscreen", "picture-in-picture", "encrypted-media", "accelerometer", "gyroscope"].join("; ")),
                W(s) || u.setAttribute("referrerPolicy", s),
                i || !t.customControls)
                u.setAttribute("data-poster", e.poster),
                    e.media = se(u, e.media);
            else {
                const t = Z("div", {
                    class: e.config.classNames.embedContainer,
                    "data-poster": e.poster
                });
                t.appendChild(u),
                    e.media = se(t, e.media)
            }
            t.customControls || Re($e(e.config.urls.vimeo.api, d)).then((t => {
                !W(t) && t.thumbnail_url && at.setPoster.call(e, t.thumbnail_url).catch((() => { }
                ))
            }
            )),
                e.embed = new window.Vimeo.Player(u, {
                    autopause: e.config.autopause,
                    muted: e.muted
                }),
                e.media.paused = !0,
                e.media.currentTime = 0,
                e.supported.ui && e.embed.disableTextTrack(),
                e.media.play = () => (ct.call(e, !0),
                    e.embed.play()),
                e.media.pause = () => (ct.call(e, !1),
                    e.embed.pause()),
                e.media.stop = () => {
                    e.pause(),
                        e.currentTime = 0
                }
                ;
            let { currentTime: m } = e.media;
            Object.defineProperty(e.media, "currentTime", {
                get: () => m,
                set(t) {
                    const { embed: i, media: s, paused: n, volume: a } = e
                        , l = n && !i.hasPlayed;
                    s.seeking = !0,
                        ve.call(e, s, "seeking"),
                        Promise.resolve(l && i.setVolume(0)).then((() => i.setCurrentTime(t))).then((() => l && i.pause())).then((() => l && i.setVolume(a))).catch((() => { }
                        ))
                }
            });
            let p = e.config.speed.selected;
            Object.defineProperty(e.media, "playbackRate", {
                get: () => p,
                set(t) {
                    e.embed.setPlaybackRate(t).then((() => {
                        p = t,
                            ve.call(e, e.media, "ratechange")
                    }
                    )).catch((() => {
                        e.options.speed = [1]
                    }
                    ))
                }
            });
            let { volume: g } = e.config;
            Object.defineProperty(e.media, "volume", {
                get: () => g,
                set(t) {
                    e.embed.setVolume(t).then((() => {
                        g = t,
                            ve.call(e, e.media, "volumechange")
                    }
                    ))
                }
            });
            let { muted: f } = e.config;
            Object.defineProperty(e.media, "muted", {
                get: () => f,
                set(t) {
                    const i = !!O(t) && t;
                    e.embed.setVolume(i ? 0 : e.config.volume).then((() => {
                        f = i,
                            ve.call(e, e.media, "volumechange")
                    }
                    ))
                }
            });
            let b, { loop: y } = e.config;
            Object.defineProperty(e.media, "loop", {
                get: () => y,
                set(t) {
                    const i = O(t) ? t : e.config.loop.active;
                    e.embed.setLoop(i).then((() => {
                        y = i
                    }
                    ))
                }
            }),
                e.embed.getVideoUrl().then((t => {
                    b = t,
                        We.setDownloadUrl.call(e)
                }
                )).catch((e => {
                    this.debug.warn(e)
                }
                )),
                Object.defineProperty(e.media, "currentSrc", {
                    get: () => b
                }),
                Object.defineProperty(e.media, "ended", {
                    get: () => e.currentTime === e.duration
                }),
                Promise.all([e.embed.getVideoWidth(), e.embed.getVideoHeight()]).then((t => {
                    const [i, s] = t;
                    e.embed.ratio = Ie(i, s),
                        Me.call(this)
                }
                )),
                e.embed.setAutopause(e.config.autopause).then((t => {
                    e.config.autopause = t
                }
                )),
                e.embed.getVideoTitle().then((t => {
                    e.config.title = t,
                        at.setTitle.call(this)
                }
                )),
                e.embed.getCurrentTime().then((t => {
                    m = t,
                        ve.call(e, e.media, "timeupdate")
                }
                )),
                e.embed.getDuration().then((t => {
                    e.media.duration = t,
                        ve.call(e, e.media, "durationchange")
                }
                )),
                e.embed.getTextTracks().then((t => {
                    e.media.textTracks = t,
                        Ye.setup.call(e)
                }
                )),
                e.embed.on("cuechange", (({ cues: t = [] }) => {
                    const i = t.map((e => function (e) {
                        const t = document.createDocumentFragment()
                            , i = document.createElement("div");
                        return t.appendChild(i),
                            i.innerHTML = e,
                            t.firstChild.innerText
                    }(e.text)));
                    Ye.updateCues.call(e, i)
                }
                )),
                e.embed.on("loaded", (() => {
                    if (e.embed.getPaused().then((t => {
                        ct.call(e, !t),
                            t || ve.call(e, e.media, "playing")
                    }
                    )),
                        H(e.embed.element) && e.supported.ui) {
                        e.embed.element.setAttribute("tabindex", -1)
                    }
                }
                )),
                e.embed.on("bufferstart", (() => {
                    ve.call(e, e.media, "waiting")
                }
                )),
                e.embed.on("bufferend", (() => {
                    ve.call(e, e.media, "playing")
                }
                )),
                e.embed.on("play", (() => {
                    ct.call(e, !0),
                        ve.call(e, e.media, "playing")
                }
                )),
                e.embed.on("pause", (() => {
                    ct.call(e, !1)
                }
                )),
                e.embed.on("timeupdate", (t => {
                    e.media.seeking = !1,
                        m = t.seconds,
                        ve.call(e, e.media, "timeupdate")
                }
                )),
                e.embed.on("progress", (t => {
                    e.media.buffered = t.percent,
                        ve.call(e, e.media, "progress"),
                        1 === parseInt(t.percent, 10) && ve.call(e, e.media, "canplaythrough"),
                        e.embed.getDuration().then((t => {
                            t !== e.media.duration && (e.media.duration = t,
                                ve.call(e, e.media, "durationchange"))
                        }
                        ))
                }
                )),
                e.embed.on("seeked", (() => {
                    e.media.seeking = !1,
                        ve.call(e, e.media, "seeked")
                }
                )),
                e.embed.on("ended", (() => {
                    e.media.paused = !0,
                        ve.call(e, e.media, "ended")
                }
                )),
                e.embed.on("error", (t => {
                    e.media.error = t,
                        ve.call(e, e.media, "error")
                }
                )),
                t.customControls && setTimeout((() => at.build.call(e)), 0)
        }
    };
    function ut(e) {
        e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
            this.media.paused === e && (this.media.paused = !e,
                ve.call(this, this.media, e ? "play" : "pause"))
    }
    function dt(e) {
        return e.noCookie ? "https://www.youtube-nocookie.com" : "http:" === window.location.protocol ? "http://www.youtube.com" : void 0
    }
    const mt = {
        setup() {
            if (le(this.elements.wrapper, this.config.classNames.embed, !0),
                L(window.YT) && j(window.YT.Player))
                mt.ready.call(this);
            else {
                const e = window.onYouTubeIframeAPIReady;
                window.onYouTubeIframeAPIReady = () => {
                    j(e) && e(),
                        mt.ready.call(this)
                }
                    ,
                    rt(this.config.urls.youtube.sdk).catch((e => {
                        this.debug.warn("YouTube API failed to load", e)
                    }
                    ))
            }
        },
        getTitle(e) {
            Re($e(this.config.urls.youtube.api, e)).then((e => {
                if (L(e)) {
                    const { title: t, height: i, width: s } = e;
                    this.config.title = t,
                        at.setTitle.call(this),
                        this.embed.ratio = Ie(s, i)
                }
                Me.call(this)
            }
            )).catch((() => {
                Me.call(this)
            }
            ))
        },
        ready() {
            const e = this
                , t = e.config.youtube
                , i = e.media && e.media.getAttribute("id");
            if (!W(i) && i.startsWith("youtube-"))
                return;
            let s = e.media.getAttribute("src");
            W(s) && (s = e.media.getAttribute(this.config.attributes.embed.id));
            const n = W(a = s) ? null : a.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/) ? RegExp.$2 : a;
            var a;
            const l = Z("div", {
                id: `${e.provider}-${Math.floor(1e4 * Math.random())}`,
                "data-poster": t.customControls ? e.poster : void 0
            });
            if (e.media = se(l, e.media),
                t.customControls) {
                const t = e => `https://i.ytimg.com/vi/${n}/${e}default.jpg`;
                nt(t("maxres"), 121).catch((() => nt(t("sd"), 121))).catch((() => nt(t("hq")))).then((t => at.setPoster.call(e, t.src))).then((t => {
                    t.includes("maxres") || (e.elements.poster.style.backgroundSize = "cover")
                }
                )).catch((() => { }
                ))
            }
            e.embed = new window.YT.Player(e.media, {
                videoId: n,
                host: dt(t),
                playerVars: X({}, {
                    autoplay: e.config.autoplay ? 1 : 0,
                    hl: e.config.hl,
                    controls: e.supported.ui && t.customControls ? 0 : 1,
                    disablekb: 1,
                    playsinline: e.config.fullscreen.iosNative ? 0 : 1,
                    cc_load_policy: e.captions.active ? 1 : 0,
                    cc_lang_pref: e.config.captions.language,
                    widget_referrer: window ? window.location.href : null
                }, t),
                events: {
                    onError(t) {
                        if (!e.media.error) {
                            const i = t.data
                                , s = {
                                    2: "The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.",
                                    5: "The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.",
                                    100: "The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.",
                                    101: "The owner of the requested video does not allow it to be played in embedded players.",
                                    150: "The owner of the requested video does not allow it to be played in embedded players."
                                }[i] || "An unknown error occured";
                            e.media.error = {
                                code: i,
                                message: s
                            },
                                ve.call(e, e.media, "error")
                        }
                    },
                    onPlaybackRateChange(t) {
                        const i = t.target;
                        e.media.playbackRate = i.getPlaybackRate(),
                            ve.call(e, e.media, "ratechange")
                    },
                    onReady(i) {
                        if (j(e.media.play))
                            return;
                        const s = i.target;
                        mt.getTitle.call(e, n),
                            e.media.play = () => {
                                ut.call(e, !0),
                                    s.playVideo()
                            }
                            ,
                            e.media.pause = () => {
                                ut.call(e, !1),
                                    s.pauseVideo()
                            }
                            ,
                            e.media.stop = () => {
                                s.stopVideo()
                            }
                            ,
                            e.media.duration = s.getDuration(),
                            e.media.paused = !0,
                            e.media.currentTime = 0,
                            Object.defineProperty(e.media, "currentTime", {
                                get: () => Number(s.getCurrentTime()),
                                set(t) {
                                    e.paused && !e.embed.hasPlayed && e.embed.mute(),
                                        e.media.seeking = !0,
                                        ve.call(e, e.media, "seeking"),
                                        s.seekTo(t)
                                }
                            }),
                            Object.defineProperty(e.media, "playbackRate", {
                                get: () => s.getPlaybackRate(),
                                set(e) {
                                    s.setPlaybackRate(e)
                                }
                            });
                        let { volume: a } = e.config;
                        Object.defineProperty(e.media, "volume", {
                            get: () => a,
                            set(t) {
                                a = t,
                                    s.setVolume(100 * a),
                                    ve.call(e, e.media, "volumechange")
                            }
                        });
                        let { muted: l } = e.config;
                        Object.defineProperty(e.media, "muted", {
                            get: () => l,
                            set(t) {
                                const i = O(t) ? t : l;
                                l = i,
                                    s[i ? "mute" : "unMute"](),
                                    s.setVolume(100 * a),
                                    ve.call(e, e.media, "volumechange")
                            }
                        }),
                            Object.defineProperty(e.media, "currentSrc", {
                                get: () => s.getVideoUrl()
                            }),
                            Object.defineProperty(e.media, "ended", {
                                get: () => e.currentTime === e.duration
                            });
                        const o = s.getAvailablePlaybackRates();
                        e.options.speed = o.filter((t => e.config.speed.options.includes(t))),
                            e.supported.ui && t.customControls && e.media.setAttribute("tabindex", -1),
                            ve.call(e, e.media, "timeupdate"),
                            ve.call(e, e.media, "durationchange"),
                            clearInterval(e.timers.buffering),
                            e.timers.buffering = setInterval((() => {
                                e.media.buffered = s.getVideoLoadedFraction(),
                                    (null === e.media.lastBuffered || e.media.lastBuffered < e.media.buffered) && ve.call(e, e.media, "progress"),
                                    e.media.lastBuffered = e.media.buffered,
                                    1 === e.media.buffered && (clearInterval(e.timers.buffering),
                                        ve.call(e, e.media, "canplaythrough"))
                            }
                            ), 200),
                            t.customControls && setTimeout((() => at.build.call(e)), 50)
                    },
                    onStateChange(i) {
                        const s = i.target;
                        clearInterval(e.timers.playing);
                        switch (e.media.seeking && [1, 2].includes(i.data) && (e.media.seeking = !1,
                            ve.call(e, e.media, "seeked")),
                        i.data) {
                            case -1:
                                ve.call(e, e.media, "timeupdate"),
                                    e.media.buffered = s.getVideoLoadedFraction(),
                                    ve.call(e, e.media, "progress");
                                break;
                            case 0:
                                ut.call(e, !1),
                                    e.media.loop ? (s.stopVideo(),
                                        s.playVideo()) : ve.call(e, e.media, "ended");
                                break;
                            case 1:
                                t.customControls && !e.config.autoplay && e.media.paused && !e.embed.hasPlayed ? e.media.pause() : (ut.call(e, !0),
                                    ve.call(e, e.media, "playing"),
                                    e.timers.playing = setInterval((() => {
                                        ve.call(e, e.media, "timeupdate")
                                    }
                                    ), 50),
                                    e.media.duration !== s.getDuration() && (e.media.duration = s.getDuration(),
                                        ve.call(e, e.media, "durationchange")));
                                break;
                            case 2:
                                e.muted || e.embed.unMute(),
                                    ut.call(e, !1);
                                break;
                            case 3:
                                ve.call(e, e.media, "waiting")
                        }
                        ve.call(e, e.elements.container, "statechange", !1, {
                            code: i.data
                        })
                    }
                }
            })
        }
    }
        , pt = {
            setup() {
                this.media ? (le(this.elements.container, this.config.classNames.type.replace("{0}", this.type), !0),
                    le(this.elements.container, this.config.classNames.provider.replace("{0}", this.provider), !0),
                    this.isEmbed && le(this.elements.container, this.config.classNames.type.replace("{0}", "video"), !0),
                    this.isVideo && (this.elements.wrapper = Z("div", {
                        class: this.config.classNames.video
                    }),
                        J(this.media, this.elements.wrapper),
                        this.elements.poster = Z("div", {
                            class: this.config.classNames.poster
                        }),
                        this.elements.wrapper.appendChild(this.elements.poster)),
                    this.isHTML5 ? Le.setup.call(this) : this.isYouTube ? mt.setup.call(this) : this.isVimeo && ht.setup.call(this)) : this.debug.warn("No media element found!")
            }
        };
    class gt {
        constructor(t) {
            e(this, "load", (() => {
                this.enabled && (L(window.google) && L(window.google.ima) ? this.ready() : rt(this.player.config.urls.googleIMA.sdk).then((() => {
                    this.ready()
                }
                )).catch((() => {
                    this.trigger("error", new Error("Google IMA SDK failed to load"))
                }
                )))
            }
            )),
                e(this, "ready", (() => {
                    var e;
                    this.enabled || ((e = this).manager && e.manager.destroy(),
                        e.elements.displayContainer && e.elements.displayContainer.destroy(),
                        e.elements.container.remove()),
                        this.startSafetyTimer(12e3, "ready()"),
                        this.managerPromise.then((() => {
                            this.clearSafetyTimer("onAdsManagerLoaded()")
                        }
                        )),
                        this.listeners(),
                        this.setupIMA()
                }
                )),
                e(this, "setupIMA", (() => {
                    this.elements.container = Z("div", {
                        class: this.player.config.classNames.ads
                    }),
                        this.player.elements.container.appendChild(this.elements.container),
                        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED),
                        google.ima.settings.setLocale(this.player.config.ads.language),
                        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline),
                        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media),
                        this.loader = new google.ima.AdsLoader(this.elements.displayContainer),
                        this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, (e => this.onAdsManagerLoaded(e)), !1),
                        this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (e => this.onAdError(e)), !1),
                        this.requestAds()
                }
                )),
                e(this, "requestAds", (() => {
                    const { container: e } = this.player.elements;
                    try {
                        const t = new google.ima.AdsRequest;
                        t.adTagUrl = this.tagUrl,
                            t.linearAdSlotWidth = e.offsetWidth,
                            t.linearAdSlotHeight = e.offsetHeight,
                            t.nonLinearAdSlotWidth = e.offsetWidth,
                            t.nonLinearAdSlotHeight = e.offsetHeight,
                            t.forceNonLinearFullSlot = !1,
                            t.setAdWillPlayMuted(!this.player.muted),
                            this.loader.requestAds(t)
                    } catch (e) {
                        this.onAdError(e)
                    }
                }
                )),
                e(this, "pollCountdown", ((e = !1) => {
                    if (!e)
                        return clearInterval(this.countdownTimer),
                            void this.elements.container.removeAttribute("data-badge-text");
                    this.countdownTimer = setInterval((() => {
                        const e = Ue(Math.max(this.manager.getRemainingTime(), 0))
                            , t = `${He.get("advertisement", this.player.config)} - ${e}`;
                        this.elements.container.setAttribute("data-badge-text", t)
                    }
                    ), 100)
                }
                )),
                e(this, "onAdsManagerLoaded", (e => {
                    if (!this.enabled)
                        return;
                    const t = new google.ima.AdsRenderingSettings;
                    t.restoreCustomPlaybackStateOnAdBreakComplete = !0,
                        t.enablePreloading = !0,
                        this.manager = e.getAdsManager(this.player, t),
                        this.cuePoints = this.manager.getCuePoints(),
                        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (e => this.onAdError(e))),
                        Object.keys(google.ima.AdEvent.Type).forEach((e => {
                            this.manager.addEventListener(google.ima.AdEvent.Type[e], (e => this.onAdEvent(e)))
                        }
                        )),
                        this.trigger("loaded")
                }
                )),
                e(this, "addCuePoints", (() => {
                    W(this.cuePoints) || this.cuePoints.forEach((e => {
                        if (0 !== e && -1 !== e && e < this.player.duration) {
                            const t = this.player.elements.progress;
                            if (H(t)) {
                                const i = 100 / this.player.duration * e
                                    , s = Z("span", {
                                        class: this.player.config.classNames.cues
                                    });
                                s.style.left = `${i.toString()}%`,
                                    t.appendChild(s)
                            }
                        }
                    }
                    ))
                }
                )),
                e(this, "onAdEvent", (e => {
                    const { container: t } = this.player.elements
                        , i = e.getAd()
                        , s = e.getAdData();
                    switch ((e => {
                        ve.call(this.player, this.player.media, `ads ${e.replace(/_/g, "").toLowerCase()}`)
                    }
                    )(e.type),
                    e.type) {
                        case google.ima.AdEvent.Type.LOADED:
                            this.trigger("loaded"),
                                this.pollCountdown(!0),
                                i.isLinear() || (i.width = t.offsetWidth,
                                    i.height = t.offsetHeight);
                            break;
                        case google.ima.AdEvent.Type.STARTED:
                            this.manager.setVolume(this.player.volume);
                            break;
                        case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                            this.player.ended ? this.loadAds() : this.loader.contentComplete();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:
                            this.pauseContent();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:
                            this.pollCountdown(),
                                this.resumeContent();
                            break;
                        case google.ima.AdEvent.Type.LOG:
                            s.adError && this.player.debug.warn(`Non-fatal ad error: ${s.adError.getMessage()}`)
                    }
                }
                )),
                e(this, "onAdError", (e => {
                    this.cancel(),
                        this.player.debug.warn("Ads error", e)
                }
                )),
                e(this, "listeners", (() => {
                    const { container: e } = this.player.elements;
                    let t;
                    this.player.on("canplay", (() => {
                        this.addCuePoints()
                    }
                    )),
                        this.player.on("ended", (() => {
                            this.loader.contentComplete()
                        }
                        )),
                        this.player.on("timeupdate", (() => {
                            t = this.player.currentTime
                        }
                        )),
                        this.player.on("seeked", (() => {
                            const e = this.player.currentTime;
                            W(this.cuePoints) || this.cuePoints.forEach(((i, s) => {
                                t < i && i < e && (this.manager.discardAdBreak(),
                                    this.cuePoints.splice(s, 1))
                            }
                            ))
                        }
                        )),
                        window.addEventListener("resize", (() => {
                            this.manager && this.manager.resize(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL)
                        }
                        ))
                }
                )),
                e(this, "play", (() => {
                    const { container: e } = this.player.elements;
                    this.managerPromise || this.resumeContent(),
                        this.managerPromise.then((() => {
                            this.manager.setVolume(this.player.volume),
                                this.elements.displayContainer.initialize();
                            try {
                                this.initialized || (this.manager.init(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL),
                                    this.manager.start()),
                                    this.initialized = !0
                            } catch (e) {
                                this.onAdError(e)
                            }
                        }
                        )).catch((() => { }
                        ))
                }
                )),
                e(this, "resumeContent", (() => {
                    this.elements.container.style.zIndex = "",
                        this.playing = !1,
                        ke(this.player.media.play())
                }
                )),
                e(this, "pauseContent", (() => {
                    this.elements.container.style.zIndex = 3,
                        this.playing = !0,
                        this.player.media.pause()
                }
                )),
                e(this, "cancel", (() => {
                    this.initialized && this.resumeContent(),
                        this.trigger("error"),
                        this.loadAds()
                }
                )),
                e(this, "loadAds", (() => {
                    this.managerPromise.then((() => {
                        this.manager && this.manager.destroy(),
                            this.managerPromise = new Promise((e => {
                                this.on("loaded", e),
                                    this.player.debug.log(this.manager)
                            }
                            )),
                            this.initialized = !1,
                            this.requestAds()
                    }
                    )).catch((() => { }
                    ))
                }
                )),
                e(this, "trigger", ((e, ...t) => {
                    const i = this.events[e];
                    q(i) && i.forEach((e => {
                        j(e) && e.apply(this, t)
                    }
                    ))
                }
                )),
                e(this, "on", ((e, t) => (q(this.events[e]) || (this.events[e] = []),
                    this.events[e].push(t),
                    this))),
                e(this, "startSafetyTimer", ((e, t) => {
                    this.player.debug.log(`Safety timer invoked from: ${t}`),
                        this.safetyTimer = setTimeout((() => {
                            this.cancel(),
                                this.clearSafetyTimer("startSafetyTimer()")
                        }
                        ), e)
                }
                )),
                e(this, "clearSafetyTimer", (e => {
                    I(this.safetyTimer) || (this.player.debug.log(`Safety timer cleared from: ${e}`),
                        clearTimeout(this.safetyTimer),
                        this.safetyTimer = null)
                }
                )),
                this.player = t,
                this.config = t.config.ads,
                this.playing = !1,
                this.initialized = !1,
                this.elements = {
                    container: null,
                    displayContainer: null
                },
                this.manager = null,
                this.loader = null,
                this.cuePoints = null,
                this.events = {},
                this.safetyTimer = null,
                this.countdownTimer = null,
                this.managerPromise = new Promise(((e, t) => {
                    this.on("loaded", e),
                        this.on("error", t)
                }
                )),
                this.load()
        }
        get enabled() {
            const { config: e } = this;
            return this.player.isHTML5 && this.player.isVideo && e.enabled && (!W(e.publisherId) || U(e.tagUrl))
        }
        get tagUrl() {
            const { config: e } = this;
            if (U(e.tagUrl))
                return e.tagUrl;
            return `https://go.aniview.com/api/adserver6/vast/?${Ke({
                AV_PUBLISHERID: "58c25bb0073ef448b1087ad6",
                AV_CHANNELID: "5a0458dc28a06145e4519d21",
                AV_URL: window.location.hostname,
                cb: Date.now(),
                AV_WIDTH: 640,
                AV_HEIGHT: 480,
                AV_CDIM2: e.publisherId
            })}`
        }
    }
    const ft = e => {
        const t = [];
        return e.split(/\r\n\r\n|\n\n|\r\r/).forEach((e => {
            const i = {};
            e.split(/\r\n|\n|\r/).forEach((e => {
                if ($(i.startTime)) {
                    if (!W(e.trim()) && W(i.text)) {
                        const t = e.trim().split("#xywh=");
                        [i.text] = t,
                            t[1] && ([i.x, i.y, i.w, i.h] = t[1].split(","))
                    }
                } else {
                    const t = e.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/);
                    t && (i.startTime = 60 * Number(t[1] || 0) * 60 + 60 * Number(t[2]) + Number(t[3]) + Number(`0.${t[4]}`),
                        i.endTime = 60 * Number(t[6] || 0) * 60 + 60 * Number(t[7]) + Number(t[8]) + Number(`0.${t[9]}`))
                }
            }
            )),
                i.text && t.push(i)
        }
        )),
            t
    }
        , bt = (e, t) => {
            const i = {};
            return e > t.width / t.height ? (i.width = t.width,
                i.height = 1 / e * t.width) : (i.height = t.height,
                    i.width = e * t.height),
                i
        }
        ;
    class yt {
        constructor(t) {
            e(this, "load", (() => {
                this.player.elements.display.seekTooltip && (this.player.elements.display.seekTooltip.hidden = this.enabled),
                    this.enabled && this.getThumbnails().then((() => {
                        this.enabled && (this.render(),
                            this.determineContainerAutoSizing(),
                            this.loaded = !0)
                    }
                    ))
            }
            )),
                e(this, "getThumbnails", (() => new Promise((e => {
                    const { src: t } = this.player.config.previewThumbnails;
                    if (W(t))
                        throw new Error("Missing previewThumbnails.src config attribute");
                    const i = () => {
                        this.thumbnails.sort(((e, t) => e.height - t.height)),
                            this.player.debug.log("Preview thumbnails", this.thumbnails),
                            e()
                    }
                        ;
                    if (j(t))
                        t((e => {
                            this.thumbnails = e,
                                i()
                        }
                        ));
                    else {
                        const e = (_(t) ? [t] : t).map((e => this.getThumbnail(e)));
                        Promise.all(e).then(i)
                    }
                }
                )))),
                e(this, "getThumbnail", (e => new Promise((t => {
                    Re(e).then((i => {
                        const s = {
                            frames: ft(i),
                            height: null,
                            urlPrefix: ""
                        };
                        s.frames[0].text.startsWith("/") || s.frames[0].text.startsWith("http://") || s.frames[0].text.startsWith("https://") || (s.urlPrefix = e.substring(0, e.lastIndexOf("/") + 1));
                        const n = new Image;
                        n.onload = () => {
                            s.height = n.naturalHeight,
                                s.width = n.naturalWidth,
                                this.thumbnails.push(s),
                                t()
                        }
                            ,
                            n.src = s.urlPrefix + s.frames[0].text
                    }
                    ))
                }
                )))),
                e(this, "startMove", (e => {
                    if (this.loaded && F(e) && ["touchmove", "mousemove"].includes(e.type) && this.player.media.duration) {
                        if ("touchmove" === e.type)
                            this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);
                        else {
                            const t = this.player.elements.progress.getBoundingClientRect()
                                , i = 100 / t.width * (e.pageX - t.left);
                            this.seekTime = this.player.media.duration * (i / 100),
                                this.seekTime < 0 && (this.seekTime = 0),
                                this.seekTime > this.player.media.duration - 1 && (this.seekTime = this.player.media.duration - 1),
                                this.mousePosX = e.pageX,
                                this.elements.thumb.time.innerText = Ue(this.seekTime)
                        }
                        this.showImageAtCurrentTime()
                    }
                }
                )),
                e(this, "endMove", (() => {
                    this.toggleThumbContainer(!1, !0)
                }
                )),
                e(this, "startScrubbing", (e => {
                    (I(e.button) || !1 === e.button || 0 === e.button) && (this.mouseDown = !0,
                        this.player.media.duration && (this.toggleScrubbingContainer(!0),
                            this.toggleThumbContainer(!1, !0),
                            this.showImageAtCurrentTime()))
                }
                )),
                e(this, "endScrubbing", (() => {
                    this.mouseDown = !1,
                        Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime) ? this.toggleScrubbingContainer(!1) : ye.call(this.player, this.player.media, "timeupdate", (() => {
                            this.mouseDown || this.toggleScrubbingContainer(!1)
                        }
                        ))
                }
                )),
                e(this, "listeners", (() => {
                    this.player.on("play", (() => {
                        this.toggleThumbContainer(!1, !0)
                    }
                    )),
                        this.player.on("seeked", (() => {
                            this.toggleThumbContainer(!1)
                        }
                        )),
                        this.player.on("timeupdate", (() => {
                            this.lastTime = this.player.media.currentTime
                        }
                        ))
                }
                )),
                e(this, "render", (() => {
                    this.elements.thumb.container = Z("div", {
                        class: this.player.config.classNames.previewThumbnails.thumbContainer
                    }),
                        this.elements.thumb.imageContainer = Z("div", {
                            class: this.player.config.classNames.previewThumbnails.imageContainer
                        }),
                        this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);
                    const e = Z("div", {
                        class: this.player.config.classNames.previewThumbnails.timeContainer
                    });
                    this.elements.thumb.time = Z("span", {}, "00:00"),
                        e.appendChild(this.elements.thumb.time),
                        this.elements.thumb.container.appendChild(e),
                        H(this.player.elements.progress) && this.player.elements.progress.appendChild(this.elements.thumb.container),
                        this.elements.scrubbing.container = Z("div", {
                            class: this.player.config.classNames.previewThumbnails.scrubbingContainer
                        }),
                        this.player.elements.wrapper.appendChild(this.elements.scrubbing.container)
                }
                )),
                e(this, "destroy", (() => {
                    this.elements.thumb.container && this.elements.thumb.container.remove(),
                        this.elements.scrubbing.container && this.elements.scrubbing.container.remove()
                }
                )),
                e(this, "showImageAtCurrentTime", (() => {
                    this.mouseDown ? this.setScrubbingContainerSize() : this.setThumbContainerSizeAndPos();
                    const e = this.thumbnails[0].frames.findIndex((e => this.seekTime >= e.startTime && this.seekTime <= e.endTime))
                        , t = e >= 0;
                    let i = 0;
                    this.mouseDown || this.toggleThumbContainer(t),
                        t && (this.thumbnails.forEach(((t, s) => {
                            this.loadedImages.includes(t.frames[e].text) && (i = s)
                        }
                        )),
                            e !== this.showingThumb && (this.showingThumb = e,
                                this.loadImage(i)))
                }
                )),
                e(this, "loadImage", ((e = 0) => {
                    const t = this.showingThumb
                        , i = this.thumbnails[e]
                        , { urlPrefix: s } = i
                        , n = i.frames[t]
                        , a = i.frames[t].text
                        , l = s + a;
                    if (this.currentImageElement && this.currentImageElement.dataset.filename === a)
                        this.showImage(this.currentImageElement, n, e, t, a, !1),
                            this.currentImageElement.dataset.index = t,
                            this.removeOldImages(this.currentImageElement);
                    else {
                        this.loadingImage && this.usingSprites && (this.loadingImage.onload = null);
                        const i = new Image;
                        i.src = l,
                            i.dataset.index = t,
                            i.dataset.filename = a,
                            this.showingThumbFilename = a,
                            this.player.debug.log(`Loading image: ${l}`),
                            i.onload = () => this.showImage(i, n, e, t, a, !0),
                            this.loadingImage = i,
                            this.removeOldImages(i)
                    }
                }
                )),
                e(this, "showImage", ((e, t, i, s, n, a = !0) => {
                    this.player.debug.log(`Showing thumb: ${n}. num: ${s}. qual: ${i}. newimg: ${a}`),
                        this.setImageSizeAndOffset(e, t),
                        a && (this.currentImageContainer.appendChild(e),
                            this.currentImageElement = e,
                            this.loadedImages.includes(n) || this.loadedImages.push(n)),
                        this.preloadNearby(s, !0).then(this.preloadNearby(s, !1)).then(this.getHigherQuality(i, e, t, n))
                }
                )),
                e(this, "removeOldImages", (e => {
                    Array.from(this.currentImageContainer.children).forEach((t => {
                        if ("img" !== t.tagName.toLowerCase())
                            return;
                        const i = this.usingSprites ? 500 : 1e3;
                        if (t.dataset.index !== e.dataset.index && !t.dataset.deleting) {
                            t.dataset.deleting = !0;
                            const { currentImageContainer: e } = this;
                            setTimeout((() => {
                                e.removeChild(t),
                                    this.player.debug.log(`Removing thumb: ${t.dataset.filename}`)
                            }
                            ), i)
                        }
                    }
                    ))
                }
                )),
                e(this, "preloadNearby", ((e, t = !0) => new Promise((i => {
                    setTimeout((() => {
                        const s = this.thumbnails[0].frames[e].text;
                        if (this.showingThumbFilename === s) {
                            let n;
                            n = t ? this.thumbnails[0].frames.slice(e) : this.thumbnails[0].frames.slice(0, e).reverse();
                            let a = !1;
                            n.forEach((e => {
                                const t = e.text;
                                if (t !== s && !this.loadedImages.includes(t)) {
                                    a = !0,
                                        this.player.debug.log(`Preloading thumb filename: ${t}`);
                                    const { urlPrefix: e } = this.thumbnails[0]
                                        , s = e + t
                                        , n = new Image;
                                    n.src = s,
                                        n.onload = () => {
                                            this.player.debug.log(`Preloaded thumb filename: ${t}`),
                                                this.loadedImages.includes(t) || this.loadedImages.push(t),
                                                i()
                                        }
                                }
                            }
                            )),
                                a || i()
                        }
                    }
                    ), 300)
                }
                )))),
                e(this, "getHigherQuality", ((e, t, i, s) => {
                    if (e < this.thumbnails.length - 1) {
                        let n = t.naturalHeight;
                        this.usingSprites && (n = i.h),
                            n < this.thumbContainerHeight && setTimeout((() => {
                                this.showingThumbFilename === s && (this.player.debug.log(`Showing higher quality thumb for: ${s}`),
                                    this.loadImage(e + 1))
                            }
                            ), 300)
                    }
                }
                )),
                e(this, "toggleThumbContainer", ((e = !1, t = !1) => {
                    const i = this.player.config.classNames.previewThumbnails.thumbContainerShown;
                    this.elements.thumb.container.classList.toggle(i, e),
                        !e && t && (this.showingThumb = null,
                            this.showingThumbFilename = null)
                }
                )),
                e(this, "toggleScrubbingContainer", ((e = !1) => {
                    const t = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;
                    this.elements.scrubbing.container.classList.toggle(t, e),
                        e || (this.showingThumb = null,
                            this.showingThumbFilename = null)
                }
                )),
                e(this, "determineContainerAutoSizing", (() => {
                    (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) && (this.sizeSpecifiedInCSS = !0)
                }
                )),
                e(this, "setThumbContainerSizeAndPos", (() => {
                    if (this.sizeSpecifiedInCSS) {
                        if (this.elements.thumb.imageContainer.clientHeight > 20 && this.elements.thumb.imageContainer.clientWidth < 20) {
                            const e = Math.floor(this.elements.thumb.imageContainer.clientHeight * this.thumbAspectRatio);
                            this.elements.thumb.imageContainer.style.width = `${e}px`
                        } else if (this.elements.thumb.imageContainer.clientHeight < 20 && this.elements.thumb.imageContainer.clientWidth > 20) {
                            const e = Math.floor(this.elements.thumb.imageContainer.clientWidth / this.thumbAspectRatio);
                            this.elements.thumb.imageContainer.style.height = `${e}px`
                        }
                    } else {
                        const e = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);
                        this.elements.thumb.imageContainer.style.height = `${this.thumbContainerHeight}px`,
                            this.elements.thumb.imageContainer.style.width = `${e}px`
                    }
                    this.setThumbContainerPos()
                }
                )),
                e(this, "setThumbContainerPos", (() => {
                    const e = this.player.elements.progress.getBoundingClientRect()
                        , t = this.player.elements.container.getBoundingClientRect()
                        , { container: i } = this.elements.thumb
                        , s = t.left - e.left + 10
                        , n = t.right - e.left - i.clientWidth - 10;
                    let a = this.mousePosX - e.left - i.clientWidth / 2;
                    a < s && (a = s),
                        a > n && (a = n),
                        i.style.left = `${a}px`
                }
                )),
                e(this, "setScrubbingContainerSize", (() => {
                    const { width: e, height: t } = bt(this.thumbAspectRatio, {
                        width: this.player.media.clientWidth,
                        height: this.player.media.clientHeight
                    });
                    this.elements.scrubbing.container.style.width = `${e}px`,
                        this.elements.scrubbing.container.style.height = `${t}px`
                }
                )),
                e(this, "setImageSizeAndOffset", ((e, t) => {
                    if (!this.usingSprites)
                        return;
                    const i = this.thumbContainerHeight / t.h;
                    e.style.height = e.naturalHeight * i + "px",
                        e.style.width = e.naturalWidth * i + "px",
                        e.style.left = `-${t.x * i}px`,
                        e.style.top = `-${t.y * i}px`
                }
                )),
                this.player = t,
                this.thumbnails = [],
                this.loaded = !1,
                this.lastMouseMoveTime = Date.now(),
                this.mouseDown = !1,
                this.loadedImages = [],
                this.elements = {
                    thumb: {},
                    scrubbing: {}
                },
                this.load()
        }
        get enabled() {
            return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled
        }
        get currentImageContainer() {
            return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer
        }
        get usingSprites() {
            return Object.keys(this.thumbnails[0].frames[0]).includes("w")
        }
        get thumbAspectRatio() {
            return this.usingSprites ? this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h : this.thumbnails[0].width / this.thumbnails[0].height
        }
        get thumbContainerHeight() {
            if (this.mouseDown) {
                const { height: e } = bt(this.thumbAspectRatio, {
                    width: this.player.media.clientWidth,
                    height: this.player.media.clientHeight
                });
                return e
            }
            return this.sizeSpecifiedInCSS ? this.elements.thumb.imageContainer.clientHeight : Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4)
        }
        get currentImageElement() {
            return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement
        }
        set currentImageElement(e) {
            this.mouseDown ? this.currentScrubbingImageElement = e : this.currentThumbnailImageElement = e
        }
    }
    const vt = {
        insertElements(e, t) {
            _(t) ? ee(e, this.media, {
                src: t
            }) : q(t) && t.forEach((t => {
                ee(e, this.media, t)
            }
            ))
        },
        change(e) {
            Q(e, "sources.length") ? (Le.cancelRequests.call(this),
                this.destroy.call(this, (() => {
                    this.options.quality = [],
                        te(this.media),
                        this.media = null,
                        H(this.elements.container) && this.elements.container.removeAttribute("class");
                    const { sources: t, type: i } = e
                        , [{ provider: s = Ge.html5, src: n }] = t
                        , a = "html5" === s ? i : "div"
                        , l = "html5" === s ? {} : {
                            src: n
                        };
                    Object.assign(this, {
                        provider: s,
                        type: i,
                        supported: me.check(i, s, this.config.playsinline),
                        media: Z(a, l)
                    }),
                        this.elements.container.appendChild(this.media),
                        O(e.autoplay) && (this.config.autoplay = e.autoplay),
                        this.isHTML5 && (this.config.crossorigin && this.media.setAttribute("crossorigin", ""),
                            this.config.autoplay && this.media.setAttribute("autoplay", ""),
                            W(e.poster) || (this.poster = e.poster),
                            this.config.loop.active && this.media.setAttribute("loop", ""),
                            this.config.muted && this.media.setAttribute("muted", ""),
                            this.config.playsinline && this.media.setAttribute("playsinline", "")),
                        at.addStyleHook.call(this),
                        this.isHTML5 && vt.insertElements.call(this, "source", t),
                        this.config.title = e.title,
                        pt.setup.call(this),
                        this.isHTML5 && Object.keys(e).includes("tracks") && vt.insertElements.call(this, "track", e.tracks),
                        (this.isHTML5 || this.isEmbed && !this.supported.ui) && at.build.call(this),
                        this.isHTML5 && this.media.load(),
                        W(e.previewThumbnails) || (Object.assign(this.config.previewThumbnails, e.previewThumbnails),
                            this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(),
                                this.previewThumbnails = null),
                            this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))),
                        this.fullscreen.update()
                }
                ), !0)) : this.debug.warn("Invalid source format")
        }
    };
    class wt {
        constructor(t, i) {
            if (e(this, "play", (() => j(this.media.play) ? (this.ads && this.ads.enabled && this.ads.managerPromise.then((() => this.ads.play())).catch((() => ke(this.media.play()))),
                this.media.play()) : null)),
                e(this, "pause", (() => this.playing && j(this.media.pause) ? this.media.pause() : null)),
                e(this, "togglePlay", (e => (O(e) ? e : !this.playing) ? this.play() : this.pause())),
                e(this, "stop", (() => {
                    this.isHTML5 ? (this.pause(),
                        this.restart()) : j(this.media.stop) && this.media.stop()
                }
                )),
                e(this, "restart", (() => {
                    this.currentTime = 0
                }
                )),
                e(this, "rewind", (e => {
                    this.currentTime -= $(e) ? e : this.config.seekTime
                }
                )),
                e(this, "forward", (e => {
                    this.currentTime += $(e) ? e : this.config.seekTime
                }
                )),
                e(this, "increaseVolume", (e => {
                    const t = this.media.muted ? 0 : this.volume;
                    this.volume = t + ($(e) ? e : 0)
                }
                )),
                e(this, "decreaseVolume", (e => {
                    this.increaseVolume(-e)
                }
                )),
                e(this, "airplay", (() => {
                    me.airplay && this.media.webkitShowPlaybackTargetPicker()
                }
                )),
                e(this, "toggleControls", (e => {
                    if (this.supported.ui && !this.isAudio) {
                        const t = oe(this.elements.container, this.config.classNames.hideControls)
                            , i = void 0 === e ? void 0 : !e
                            , s = le(this.elements.container, this.config.classNames.hideControls, i);
                        if (s && q(this.config.controls) && this.config.controls.includes("settings") && !W(this.config.settings) && We.toggleMenu.call(this, !1),
                            s !== t) {
                            const e = s ? "controlshidden" : "controlsshown";
                            ve.call(this, this.media, e)
                        }
                        return !s
                    }
                    return !1
                }
                )),
                e(this, "on", ((e, t) => {
                    fe.call(this, this.elements.container, e, t)
                }
                )),
                e(this, "once", ((e, t) => {
                    ye.call(this, this.elements.container, e, t)
                }
                )),
                e(this, "off", ((e, t) => {
                    be(this.elements.container, e, t)
                }
                )),
                e(this, "destroy", ((e, t = !1) => {
                    if (!this.ready)
                        return;
                    const i = () => {
                        document.body.style.overflow = "",
                            this.embed = null,
                            t ? (Object.keys(this.elements).length && (te(this.elements.buttons.play),
                                te(this.elements.captions),
                                te(this.elements.controls),
                                te(this.elements.wrapper),
                                this.elements.buttons.play = null,
                                this.elements.captions = null,
                                this.elements.controls = null,
                                this.elements.wrapper = null),
                                j(e) && e()) : (we.call(this),
                                    Le.cancelRequests.call(this),
                                    se(this.elements.original, this.elements.container),
                                    ve.call(this, this.elements.original, "destroyed", !0),
                                    j(e) && e.call(this.elements.original),
                                    this.ready = !1,
                                    setTimeout((() => {
                                        this.elements = null,
                                            this.media = null
                                    }
                                    ), 200))
                    }
                        ;
                    this.stop(),
                        clearTimeout(this.timers.loading),
                        clearTimeout(this.timers.controls),
                        clearTimeout(this.timers.resized),
                        this.isHTML5 ? (at.toggleNativeControls.call(this, !0),
                            i()) : this.isYouTube ? (clearInterval(this.timers.buffering),
                                clearInterval(this.timers.playing),
                                null !== this.embed && j(this.embed.destroy) && this.embed.destroy(),
                                i()) : this.isVimeo && (null !== this.embed && this.embed.unload().then(i),
                                    setTimeout(i, 200))
                }
                )),
                e(this, "supports", (e => me.mime.call(this, e))),
                this.timers = {},
                this.ready = !1,
                this.loading = !1,
                this.failed = !1,
                this.touch = me.touch,
                this.media = t,
                _(this.media) && (this.media = document.querySelectorAll(this.media)),
                (window.jQuery && this.media instanceof jQuery || D(this.media) || q(this.media)) && (this.media = this.media[0]),
                this.config = X({}, Qe, wt.defaults, i || {}, (() => {
                    try {
                        return JSON.parse(this.media.getAttribute("data-plyr-config"))
                    } catch (e) {
                        return {}
                    }
                }
                )()),
                this.elements = {
                    container: null,
                    fullscreen: null,
                    captions: null,
                    buttons: {},
                    display: {},
                    progress: {},
                    inputs: {},
                    settings: {
                        popup: null,
                        menu: null,
                        panels: {},
                        buttons: {}
                    }
                },
                this.captions = {
                    active: null,
                    currentTrack: -1,
                    meta: new WeakMap
                },
                this.fullscreen = {
                    active: !1
                },
                this.options = {
                    speed: [],
                    quality: []
                },
                this.debug = new it(this.config.debug),
                this.debug.log("Config", this.config),
                this.debug.log("Support", me),
                I(this.media) || !H(this.media))
                return void this.debug.error("Setup failed: no suitable element passed");
            if (this.media.plyr)
                return void this.debug.warn("Target already setup");
            if (!this.config.enabled)
                return void this.debug.error("Setup failed: disabled by config");
            if (!me.check().api)
                return void this.debug.error("Setup failed: no support");
            const s = this.media.cloneNode(!0);
            s.autoplay = !1,
                this.elements.original = s;
            const n = this.media.tagName.toLowerCase();
            let a = null
                , l = null;
            switch (n) {
                case "div":
                    if (a = this.media.querySelector("iframe"),
                        H(a)) {
                        if (l = ze(a.getAttribute("src")),
                            this.provider = function (e) {
                                return /^(https?:\/\/)?(www\.)?(youtube\.com|youtube-nocookie\.com|youtu\.?be)\/.+$/.test(e) ? Ge.youtube : /^https?:\/\/player.vimeo.com\/video\/\d{0,9}(?=\b|\/)/.test(e) ? Ge.vimeo : null
                            }(l.toString()),
                            this.elements.container = this.media,
                            this.media = a,
                            this.elements.container.className = "",
                            l.search.length) {
                            const e = ["1", "true"];
                            e.includes(l.searchParams.get("autoplay")) && (this.config.autoplay = !0),
                                e.includes(l.searchParams.get("loop")) && (this.config.loop.active = !0),
                                this.isYouTube ? (this.config.playsinline = e.includes(l.searchParams.get("playsinline")),
                                    this.config.youtube.hl = l.searchParams.get("hl")) : this.config.playsinline = !0
                        }
                    } else
                        this.provider = this.media.getAttribute(this.config.attributes.embed.provider),
                            this.media.removeAttribute(this.config.attributes.embed.provider);
                    if (W(this.provider) || !Object.values(Ge).includes(this.provider))
                        return void this.debug.error("Setup failed: Invalid provider");
                    this.type = et;
                    break;
                case "video":
                case "audio":
                    this.type = n,
                        this.provider = Ge.html5,
                        this.media.hasAttribute("crossorigin") && (this.config.crossorigin = !0),
                        this.media.hasAttribute("autoplay") && (this.config.autoplay = !0),
                        (this.media.hasAttribute("playsinline") || this.media.hasAttribute("webkit-playsinline")) && (this.config.playsinline = !0),
                        this.media.hasAttribute("muted") && (this.config.muted = !0),
                        this.media.hasAttribute("loop") && (this.config.loop.active = !0);
                    break;
                default:
                    return void this.debug.error("Setup failed: unsupported type")
            }
            this.supported = me.check(this.type, this.provider, this.config.playsinline),
                this.supported.api ? (this.eventListeners = [],
                    this.listeners = new lt(this),
                    this.storage = new Fe(this),
                    this.media.plyr = this,
                    H(this.elements.container) || (this.elements.container = Z("div", {
                        tabindex: 0
                    }),
                        J(this.media, this.elements.container)),
                    at.migrateStyles.call(this),
                    at.addStyleHook.call(this),
                    pt.setup.call(this),
                    this.config.debug && fe.call(this, this.elements.container, this.config.events.join(" "), (e => {
                        this.debug.log(`event: ${e.type}`)
                    }
                    )),
                    this.fullscreen = new st(this),
                    (this.isHTML5 || this.isEmbed && !this.supported.ui) && at.build.call(this),
                    this.listeners.container(),
                    this.listeners.global(),
                    this.config.ads.enabled && (this.ads = new gt(this)),
                    this.isHTML5 && this.config.autoplay && this.once("canplay", (() => ke(this.play()))),
                    this.lastSeekTime = 0,
                    this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))) : this.debug.error("Setup failed: no support")
        }
        get isHTML5() {
            return this.provider === Ge.html5
        }
        get isEmbed() {
            return this.isYouTube || this.isVimeo
        }
        get isYouTube() {
            return this.provider === Ge.youtube
        }
        get isVimeo() {
            return this.provider === Ge.vimeo
        }
        get isVideo() {
            return this.type === et
        }
        get isAudio() {
            return this.type === Ze
        }
        get playing() {
            return Boolean(this.ready && !this.paused && !this.ended)
        }
        get paused() {
            return Boolean(this.media.paused)
        }
        get stopped() {
            return Boolean(this.paused && 0 === this.currentTime)
        }
        get ended() {
            return Boolean(this.media.ended)
        }
        set currentTime(e) {
            if (!this.duration)
                return;
            const t = $(e) && e > 0;
            this.media.currentTime = t ? Math.min(e, this.duration) : 0,
                this.debug.log(`Seeking to ${this.currentTime} seconds`)
        }
        get currentTime() {
            return Number(this.media.currentTime)
        }
        get buffered() {
            const { buffered: e } = this.media;
            return $(e) ? e : e && e.length && this.duration > 0 ? e.end(0) / this.duration : 0
        }
        get seeking() {
            return Boolean(this.media.seeking)
        }
        get duration() {
            const e = parseFloat(this.config.duration)
                , t = (this.media || {}).duration
                , i = $(t) && t !== 1 / 0 ? t : 0;
            return e || i
        }
        set volume(e) {
            let t = e;
            _(t) && (t = Number(t)),
                $(t) || (t = this.storage.get("volume")),
                $(t) || ({ volume: t } = this.config),
                t > 1 && (t = 1),
                t < 0 && (t = 0),
                this.config.volume = t,
                this.media.volume = t,
                !W(e) && this.muted && t > 0 && (this.muted = !1)
        }
        get volume() {
            return Number(this.media.volume)
        }
        set muted(e) {
            let t = e;
            O(t) || (t = this.storage.get("muted")),
                O(t) || (t = this.config.muted),
                this.config.muted = t,
                this.media.muted = t
        }
        get muted() {
            return Boolean(this.media.muted)
        }
        get hasAudio() {
            return !this.isHTML5 || (!!this.isAudio || (Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length)))
        }
        set speed(e) {
            let t = null;
            $(e) && (t = e),
                $(t) || (t = this.storage.get("speed")),
                $(t) || (t = this.config.speed.selected);
            const { minimumSpeed: i, maximumSpeed: s } = this;
            t = function (e = 0, t = 0, i = 255) {
                return Math.min(Math.max(e, t), i)
            }(t, i, s),
                this.config.speed.selected = t,
                setTimeout((() => {
                    this.media && (this.media.playbackRate = t)
                }
                ), 0)
        }
        get speed() {
            return Number(this.media.playbackRate)
        }
        get minimumSpeed() {
            return this.isYouTube ? Math.min(...this.options.speed) : this.isVimeo ? .5 : .0625
        }
        get maximumSpeed() {
            return this.isYouTube ? Math.max(...this.options.speed) : this.isVimeo ? 2 : 16
        }
        set quality(e) {
            const t = this.config.quality
                , i = this.options.quality;
            if (!i.length)
                return;
            let s = [!W(e) && Number(e), this.storage.get("quality"), t.selected, t.default].find($)
                , n = !0;
            if (!i.includes(s)) {
                const e = Ae(i, s);
                this.debug.warn(`Unsupported quality option: ${s}, using ${e} instead`),
                    s = e,
                    n = !1
            }
            t.selected = s,
                this.media.quality = s,
                n && this.storage.set({
                    quality: s
                })
        }
        get quality() {
            return this.media.quality
        }
        set loop(e) {
            const t = O(e) ? e : this.config.loop.active;
            this.config.loop.active = t,
                this.media.loop = t
        }
        get loop() {
            return Boolean(this.media.loop)
        }
        set source(e) {
            vt.change.call(this, e)
        }
        get source() {
            return this.media.currentSrc
        }
        get download() {
            const { download: e } = this.config.urls;
            return U(e) ? e : this.source
        }
        set download(e) {
            U(e) && (this.config.urls.download = e,
                We.setDownloadUrl.call(this))
        }
        set poster(e) {
            this.isVideo ? at.setPoster.call(this, e, !1).catch((() => { }
            )) : this.debug.warn("Poster can only be set for video")
        }
        get poster() {
            return this.isVideo ? this.media.getAttribute("poster") || this.media.getAttribute("data-poster") : null
        }
        get ratio() {
            if (!this.isVideo)
                return null;
            const e = Ne(xe.call(this));
            return q(e) ? e.join(":") : e
        }
        set ratio(e) {
            this.isVideo ? _(e) && Pe(e) ? (this.config.ratio = Ne(e),
                Me.call(this)) : this.debug.error(`Invalid aspect ratio specified (${e})`) : this.debug.warn("Aspect ratio can only be set for video")
        }
        set autoplay(e) {
            const t = O(e) ? e : this.config.autoplay;
            this.config.autoplay = t
        }
        get autoplay() {
            return Boolean(this.config.autoplay)
        }
        toggleCaptions(e) {
            Ye.toggle.call(this, e, !1)
        }
        set currentTrack(e) {
            Ye.set.call(this, e, !1),
                Ye.setup()
        }
        get currentTrack() {
            const { toggled: e, currentTrack: t } = this.captions;
            return e ? t : -1
        }
        set language(e) {
            Ye.setLanguage.call(this, e, !1)
        }
        get language() {
            return (Ye.getCurrentTrack.call(this) || {}).language
        }
        set pip(e) {
            if (!me.pip)
                return;
            const t = O(e) ? e : !this.pip;
            j(this.media.webkitSetPresentationMode) && this.media.webkitSetPresentationMode(t ? Xe : Je),
                j(this.media.requestPictureInPicture) && (!this.pip && t ? this.media.requestPictureInPicture() : this.pip && !t && document.exitPictureInPicture())
        }
        get pip() {
            return me.pip ? W(this.media.webkitPresentationMode) ? this.media === document.pictureInPictureElement : this.media.webkitPresentationMode === Xe : null
        }
        setPreviewThumbnails(e) {
            this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(),
                this.previewThumbnails = null),
                Object.assign(this.config.previewThumbnails, e),
                this.config.previewThumbnails.enabled && (this.previewThumbnails = new yt(this))
        }
        static supported(e, t, i) {
            return me.check(e, t, i)
        }
        static loadSprite(e, t) {
            return Ve(e, t)
        }
        static setup(e, t = {}) {
            let i = null;
            return _(e) ? i = Array.from(document.querySelectorAll(e)) : D(e) ? i = Array.from(e) : q(e) && (i = e.filter(H)),
                W(i) ? null : i.map((e => new wt(e, t)))
        }
    }
    var Tt;
    return wt.defaults = (Tt = Qe,
        JSON.parse(JSON.stringify(Tt))),
        wt
}
));

/*!
 * OverlayScrollbars
 * https://github.com/KingSora/OverlayScrollbars
 *
 * Version: 1.13.0
 *
 * Copyright KingSora | Rene Haas.
 * https://github.com/KingSora
 *
 * Released under the MIT license.
 * Date: 02.08.2020
 */
!function (n, t) {
    "function" == typeof define && define.amd ? define(function () {
        return t(n, n.document, undefined)
    }) : "object" == typeof module && "object" == typeof module.exports ? module.exports = t(n, n.document, undefined) : t(n, n.document, undefined)
}("undefined" != typeof window ? window : this, function (vi, hi, di) {
    "use strict";
    var o, l, a, u, pi = "object", bi = "function", mi = "array", gi = "string", wi = "boolean", yi = "number", f = "undefined", n = "null", xi = {
        c: "class",
        s: "style",
        i: "id",
        l: "length",
        p: "prototype",
        ti: "tabindex",
        oH: "offsetHeight",
        cH: "clientHeight",
        sH: "scrollHeight",
        oW: "offsetWidth",
        cW: "clientWidth",
        sW: "scrollWidth",
        hOP: "hasOwnProperty",
        bCR: "getBoundingClientRect"
    }, _i = (o = {},
        l = {},
    {
        e: a = ["-webkit-", "-moz-", "-o-", "-ms-"],
        u: u = ["WebKit", "Moz", "O", "MS"],
        v: function (n) {
            var t = l[n];
            if (l[xi.hOP](n))
                return t;
            for (var r, e, i, o = c(n), u = hi.createElement("div")[xi.s], f = 0; f < a.length; f++)
                for (i = a[f].replace(/-/g, ""),
                    r = [n, a[f] + n, i + o, c(i) + o],
                    e = 0; e < r[xi.l]; e++)
                    if (u[r[e]] !== di) {
                        t = r[e];
                        break
                    }
            return l[n] = t
        },
        d: function (n, t, r) {
            var e = n + " " + t
                , i = l[e];
            if (l[xi.hOP](e))
                return i;
            for (var o, u = hi.createElement("div")[xi.s], f = t.split(" "), a = r || "", c = 0, s = -1; c < f[xi.l]; c++)
                for (; s < _i.e[xi.l]; s++)
                    if (o = s < 0 ? f[c] : _i.e[s] + f[c],
                        u.cssText = n + ":" + o + a,
                        u[xi.l]) {
                        i = o;
                        break
                    }
            return l[e] = i
        },
        m: function (n, t, r) {
            var e = 0
                , i = o[n];
            if (!o[xi.hOP](n)) {
                for (i = vi[n]; e < u[xi.l]; e++)
                    i = i || vi[(t ? u[e] : u[e].toLowerCase()) + c(n)];
                o[n] = i
            }
            return i || r
        }
    });
    function c(n) {
        return n.charAt(0).toUpperCase() + n.slice(1)
    }
    var Oi = {
        wW: r(t, 0, !0),
        wH: r(t, 0),
        mO: r(_i.m, 0, "MutationObserver", !0),
        rO: r(_i.m, 0, "ResizeObserver", !0),
        rAF: r(_i.m, 0, "requestAnimationFrame", !1, function (n) {
            return vi.setTimeout(n, 1e3 / 60)
        }),
        cAF: r(_i.m, 0, "cancelAnimationFrame", !1, function (n) {
            return vi.clearTimeout(n)
        }),
        now: function () {
            return Date.now && Date.now() || (new Date).getTime()
        },
        stpP: function (n) {
            n.stopPropagation ? n.stopPropagation() : n.cancelBubble = !0
        },
        prvD: function (n) {
            n.preventDefault && n.cancelable ? n.preventDefault() : n.returnValue = !1
        },
        page: function (n) {
            var t = ((n = n.originalEvent || n).target || n.srcElement || hi).ownerDocument || hi
                , r = t.documentElement
                , e = t.body;
            if (n.touches === di)
                return !n.pageX && n.clientX && null != n.clientX ? {
                    x: n.clientX + (r && r.scrollLeft || e && e.scrollLeft || 0) - (r && r.clientLeft || e && e.clientLeft || 0),
                    y: n.clientY + (r && r.scrollTop || e && e.scrollTop || 0) - (r && r.clientTop || e && e.clientTop || 0)
                } : {
                    x: n.pageX,
                    y: n.pageY
                };
            var i = n.touches[0];
            return {
                x: i.pageX,
                y: i.pageY
            }
        },
        mBtn: function (n) {
            var t = n.button;
            return n.which || t === di ? n.which : 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0
        },
        inA: function (n, t) {
            for (var r = 0; r < t[xi.l]; r++)
                try {
                    if (t[r] === n)
                        return r
                } catch (e) { }
            return -1
        },
        isA: function (n) {
            var t = Array.isArray;
            return t ? t(n) : this.type(n) == mi
        },
        type: function (n) {
            return n === di || null === n ? n + "" : Object[xi.p].toString.call(n).replace(/^\[object (.+)\]$/, "$1").toLowerCase()
        },
        bind: r
    };
    function t(n) {
        return n ? vi.innerWidth || hi.documentElement[xi.cW] || hi.body[xi.cW] : vi.innerHeight || hi.documentElement[xi.cH] || hi.body[xi.cH]
    }
    function r(n, t) {
        if (typeof n != bi)
            throw "Can't bind function!";
        var r = xi.p
            , e = Array[r].slice.call(arguments, 2)
            , i = function () { }
            , o = function () {
                return n.apply(this instanceof i ? this : t, e.concat(Array[r].slice.call(arguments)))
            };
        return n[r] && (i[r] = n[r]),
            o[r] = new i,
            o
    }
    var s, v, h, k, I, T, d, p, Si = Math, zi = vi.jQuery, A = (s = {
        p: Si.PI,
        c: Si.cos,
        s: Si.sin,
        w: Si.pow,
        t: Si.sqrt,
        n: Si.asin,
        a: Si.abs,
        o: 1.70158
    },
    {
        swing: function (n, t, r, e, i) {
            return .5 - s.c(n * s.p) / 2
        },
        linear: function (n, t, r, e, i) {
            return n
        },
        easeInQuad: function (n, t, r, e, i) {
            return e * (t /= i) * t + r
        },
        easeOutQuad: function (n, t, r, e, i) {
            return -e * (t /= i) * (t - 2) + r
        },
        easeInOutQuad: function (n, t, r, e, i) {
            return (t /= i / 2) < 1 ? e / 2 * t * t + r : -e / 2 * (--t * (t - 2) - 1) + r
        },
        easeInCubic: function (n, t, r, e, i) {
            return e * (t /= i) * t * t + r
        },
        easeOutCubic: function (n, t, r, e, i) {
            return e * ((t = t / i - 1) * t * t + 1) + r
        },
        easeInOutCubic: function (n, t, r, e, i) {
            return (t /= i / 2) < 1 ? e / 2 * t * t * t + r : e / 2 * ((t -= 2) * t * t + 2) + r
        },
        easeInQuart: function (n, t, r, e, i) {
            return e * (t /= i) * t * t * t + r
        },
        easeOutQuart: function (n, t, r, e, i) {
            return -e * ((t = t / i - 1) * t * t * t - 1) + r
        },
        easeInOutQuart: function (n, t, r, e, i) {
            return (t /= i / 2) < 1 ? e / 2 * t * t * t * t + r : -e / 2 * ((t -= 2) * t * t * t - 2) + r
        },
        easeInQuint: function (n, t, r, e, i) {
            return e * (t /= i) * t * t * t * t + r
        },
        easeOutQuint: function (n, t, r, e, i) {
            return e * ((t = t / i - 1) * t * t * t * t + 1) + r
        },
        easeInOutQuint: function (n, t, r, e, i) {
            return (t /= i / 2) < 1 ? e / 2 * t * t * t * t * t + r : e / 2 * ((t -= 2) * t * t * t * t + 2) + r
        },
        easeInSine: function (n, t, r, e, i) {
            return -e * s.c(t / i * (s.p / 2)) + e + r
        },
        easeOutSine: function (n, t, r, e, i) {
            return e * s.s(t / i * (s.p / 2)) + r
        },
        easeInOutSine: function (n, t, r, e, i) {
            return -e / 2 * (s.c(s.p * t / i) - 1) + r
        },
        easeInExpo: function (n, t, r, e, i) {
            return 0 == t ? r : e * s.w(2, 10 * (t / i - 1)) + r
        },
        easeOutExpo: function (n, t, r, e, i) {
            return t == i ? r + e : e * (1 - s.w(2, -10 * t / i)) + r
        },
        easeInOutExpo: function (n, t, r, e, i) {
            return 0 == t ? r : t == i ? r + e : (t /= i / 2) < 1 ? e / 2 * s.w(2, 10 * (t - 1)) + r : e / 2 * (2 - s.w(2, -10 * --t)) + r
        },
        easeInCirc: function (n, t, r, e, i) {
            return -e * (s.t(1 - (t /= i) * t) - 1) + r
        },
        easeOutCirc: function (n, t, r, e, i) {
            return e * s.t(1 - (t = t / i - 1) * t) + r
        },
        easeInOutCirc: function (n, t, r, e, i) {
            return (t /= i / 2) < 1 ? -e / 2 * (s.t(1 - t * t) - 1) + r : e / 2 * (s.t(1 - (t -= 2) * t) + 1) + r
        },
        easeInElastic: function (n, t, r, e, i) {
            var o = s.o
                , u = 0
                , f = e;
            return 0 == t ? r : 1 == (t /= i) ? r + e : (u = u || .3 * i,
                o = f < s.a(e) ? (f = e,
                    u / 4) : u / (2 * s.p) * s.n(e / f),
                -(f * s.w(2, 10 * --t) * s.s((t * i - o) * (2 * s.p) / u)) + r)
        },
        easeOutElastic: function (n, t, r, e, i) {
            var o = s.o
                , u = 0
                , f = e;
            return 0 == t ? r : 1 == (t /= i) ? r + e : (u = u || .3 * i,
                o = f < s.a(e) ? (f = e,
                    u / 4) : u / (2 * s.p) * s.n(e / f),
                f * s.w(2, -10 * t) * s.s((t * i - o) * (2 * s.p) / u) + e + r)
        },
        easeInOutElastic: function (n, t, r, e, i) {
            var o = s.o
                , u = 0
                , f = e;
            return 0 == t ? r : 2 == (t /= i / 2) ? r + e : (u = u || i * (.3 * 1.5),
                o = f < s.a(e) ? (f = e,
                    u / 4) : u / (2 * s.p) * s.n(e / f),
                t < 1 ? f * s.w(2, 10 * --t) * s.s((t * i - o) * (2 * s.p) / u) * -.5 + r : f * s.w(2, -10 * --t) * s.s((t * i - o) * (2 * s.p) / u) * .5 + e + r)
        },
        easeInBack: function (n, t, r, e, i, o) {
            return e * (t /= i) * t * (((o = o || s.o) + 1) * t - o) + r
        },
        easeOutBack: function (n, t, r, e, i, o) {
            return e * ((t = t / i - 1) * t * (((o = o || s.o) + 1) * t + o) + 1) + r
        },
        easeInOutBack: function (n, t, r, e, i, o) {
            return o = o || s.o,
                (t /= i / 2) < 1 ? e / 2 * (t * t * ((1 + (o *= 1.525)) * t - o)) + r : e / 2 * ((t -= 2) * t * ((1 + (o *= 1.525)) * t + o) + 2) + r
        },
        easeInBounce: function (n, t, r, e, i) {
            return e - this.easeOutBounce(n, i - t, 0, e, i) + r
        },
        easeOutBounce: function (n, t, r, e, i) {
            var o = 7.5625;
            return (t /= i) < 1 / 2.75 ? e * (o * t * t) + r : t < 2 / 2.75 ? e * (o * (t -= 1.5 / 2.75) * t + .75) + r : t < 2.5 / 2.75 ? e * (o * (t -= 2.25 / 2.75) * t + .9375) + r : e * (o * (t -= 2.625 / 2.75) * t + .984375) + r
        },
        easeInOutBounce: function (n, t, r, e, i) {
            return t < i / 2 ? .5 * this.easeInBounce(n, 2 * t, 0, e, i) + r : .5 * this.easeOutBounce(n, 2 * t - i, 0, e, i) + .5 * e + r
        }
    }), Ci = (v = /[^\x20\t\r\n\f]+/g,
        h = " ",
        k = "scrollLeft",
        I = "scrollTop",
        T = [],
        d = Oi.type,
        p = {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        M[xi.p] = {
            on: function (t, r) {
                var e, i = (t = (t || "").match(v) || [""])[xi.l], o = 0;
                return this.each(function () {
                    e = this;
                    try {
                        if (e.addEventListener)
                            for (; o < i; o++)
                                e.addEventListener(t[o], r);
                        else if (e.detachEvent)
                            for (; o < i; o++)
                                e.attachEvent("on" + t[o], r)
                    } catch (n) { }
                })
            },
            off: function (t, r) {
                var e, i = (t = (t || "").match(v) || [""])[xi.l], o = 0;
                return this.each(function () {
                    e = this;
                    try {
                        if (e.removeEventListener)
                            for (; o < i; o++)
                                e.removeEventListener(t[o], r);
                        else if (e.detachEvent)
                            for (; o < i; o++)
                                e.detachEvent("on" + t[o], r)
                    } catch (n) { }
                })
            },
            one: function (n, i) {
                return n = (n || "").match(v) || [""],
                    this.each(function () {
                        var e = M(this);
                        M.each(n, function (n, t) {
                            var r = function (n) {
                                i.call(this, n),
                                    e.off(t, r)
                            };
                            e.on(t, r)
                        })
                    })
            },
            trigger: function (n) {
                var t, r;
                return this.each(function () {
                    t = this,
                        hi.createEvent ? ((r = hi.createEvent("HTMLEvents")).initEvent(n, !0, !1),
                            t.dispatchEvent(r)) : t.fireEvent("on" + n)
                })
            },
            append: function (n) {
                return this.each(function () {
                    i(this, "beforeend", n)
                })
            },
            prepend: function (n) {
                return this.each(function () {
                    i(this, "afterbegin", n)
                })
            },
            before: function (n) {
                return this.each(function () {
                    i(this, "beforebegin", n)
                })
            },
            after: function (n) {
                return this.each(function () {
                    i(this, "afterend", n)
                })
            },
            remove: function () {
                return this.each(function () {
                    var n = this.parentNode;
                    null != n && n.removeChild(this)
                })
            },
            unwrap: function () {
                var n, t, r, e = [];
                for (this.each(function () {
                    -1 === H(r = this.parentNode, e) && e.push(r)
                }),
                    n = 0; n < e[xi.l]; n++) {
                    for (t = e[n],
                        r = t.parentNode; t.firstChild;)
                        r.insertBefore(t.firstChild, t);
                    r.removeChild(t)
                }
                return this
            },
            wrapAll: function (n) {
                for (var t, r = this, e = M(n)[0], i = e, o = r[0].parentNode, u = r[0].previousSibling; 0 < i.childNodes[xi.l];)
                    i = i.childNodes[0];
                for (t = 0; r[xi.l] - t; i.firstChild === r[0] && t++)
                    i.appendChild(r[t]);
                var f = u ? u.nextSibling : o.firstChild;
                return o.insertBefore(e, f),
                    this
            },
            wrapInner: function (r) {
                return this.each(function () {
                    var n = M(this)
                        , t = n.contents();
                    t[xi.l] ? t.wrapAll(r) : n.append(r)
                })
            },
            wrap: function (n) {
                return this.each(function () {
                    M(this).wrapAll(n)
                })
            },
            css: function (n, t) {
                var r, e, i, o = vi.getComputedStyle;
                return d(n) == gi ? t === di ? (r = this[0],
                    i = o ? o(r, null) : r.currentStyle[n],
                    o ? null != i ? i.getPropertyValue(n) : r[xi.s][n] : i) : this.each(function () {
                        y(this, n, t)
                    }) : this.each(function () {
                        for (e in n)
                            y(this, e, n[e])
                    })
            },
            hasClass: function (n) {
                for (var t, r, e = 0, i = h + n + h; t = this[e++];) {
                    if ((r = t.classList) && r.contains(n))
                        return !0;
                    if (1 === t.nodeType && -1 < (h + g(t.className + "") + h).indexOf(i))
                        return !0
                }
                return !1
            },
            addClass: function (n) {
                var t, r, e, i, o, u, f, a, c = 0, s = 0;
                if (n)
                    for (t = n.match(v) || []; r = this[c++];)
                        if (a = r.classList,
                            f === di && (f = a !== di),
                            f)
                            for (; o = t[s++];)
                                a.add(o);
                        else if (i = r.className + "",
                            e = 1 === r.nodeType && h + g(i) + h) {
                            for (; o = t[s++];)
                                e.indexOf(h + o + h) < 0 && (e += o + h);
                            i !== (u = g(e)) && (r.className = u)
                        }
                return this
            },
            removeClass: function (n) {
                var t, r, e, i, o, u, f, a, c = 0, s = 0;
                if (n)
                    for (t = n.match(v) || []; r = this[c++];)
                        if (a = r.classList,
                            f === di && (f = a !== di),
                            f)
                            for (; o = t[s++];)
                                a.remove(o);
                        else if (i = r.className + "",
                            e = 1 === r.nodeType && h + g(i) + h) {
                            for (; o = t[s++];)
                                for (; -1 < e.indexOf(h + o + h);)
                                    e = e.replace(h + o + h, h);
                            i !== (u = g(e)) && (r.className = u)
                        }
                return this
            },
            hide: function () {
                return this.each(function () {
                    this[xi.s].display = "none"
                })
            },
            show: function () {
                return this.each(function () {
                    this[xi.s].display = "block"
                })
            },
            attr: function (n, t) {
                for (var r, e = 0; r = this[e++];) {
                    if (t === di)
                        return r.getAttribute(n);
                    r.setAttribute(n, t)
                }
                return this
            },
            removeAttr: function (n) {
                return this.each(function () {
                    this.removeAttribute(n)
                })
            },
            offset: function () {
                var n = this[0][xi.bCR]()
                    , t = vi.pageXOffset || hi.documentElement[k]
                    , r = vi.pageYOffset || hi.documentElement[I];
                return {
                    top: n.top + r,
                    left: n.left + t
                }
            },
            position: function () {
                var n = this[0];
                return {
                    top: n.offsetTop,
                    left: n.offsetLeft
                }
            },
            scrollLeft: function (n) {
                for (var t, r = 0; t = this[r++];) {
                    if (n === di)
                        return t[k];
                    t[k] = n
                }
                return this
            },
            scrollTop: function (n) {
                for (var t, r = 0; t = this[r++];) {
                    if (n === di)
                        return t[I];
                    t[I] = n
                }
                return this
            },
            val: function (n) {
                var t = this[0];
                return n ? (t.value = n,
                    this) : t.value
            },
            first: function () {
                return this.eq(0)
            },
            last: function () {
                return this.eq(-1)
            },
            eq: function (n) {
                return M(this[0 <= n ? n : this[xi.l] + n])
            },
            find: function (t) {
                var r, e = [];
                return this.each(function () {
                    var n = this.querySelectorAll(t);
                    for (r = 0; r < n[xi.l]; r++)
                        e.push(n[r])
                }),
                    M(e)
            },
            children: function (n) {
                var t, r, e, i = [];
                return this.each(function () {
                    for (r = this.children,
                        e = 0; e < r[xi.l]; e++)
                        t = r[e],
                            (!n || t.matches && t.matches(n) || w(t, n)) && i.push(t)
                }),
                    M(i)
            },
            parent: function (n) {
                var t, r = [];
                return this.each(function () {
                    t = this.parentNode,
                        n && !M(t).is(n) || r.push(t)
                }),
                    M(r)
            },
            is: function (n) {
                var t, r;
                for (r = 0; r < this[xi.l]; r++) {
                    if (t = this[r],
                        ":visible" === n)
                        return _(t);
                    if (":hidden" === n)
                        return !_(t);
                    if (t.matches && t.matches(n) || w(t, n))
                        return !0
                }
                return !1
            },
            contents: function () {
                var n, t, r = [];
                return this.each(function () {
                    for (n = this.childNodes,
                        t = 0; t < n[xi.l]; t++)
                        r.push(n[t])
                }),
                    M(r)
            },
            each: function (n) {
                return e(this, n)
            },
            animate: function (n, t, r, e) {
                return this.each(function () {
                    x(this, n, t, r, e)
                })
            },
            stop: function (n, t) {
                return this.each(function () {
                    !function f(n, t, r) {
                        for (var e, i, o, u = 0; u < T[xi.l]; u++)
                            if ((e = T[u]).el === n) {
                                if (0 < e.q[xi.l]) {
                                    if ((i = e.q[0]).stop = !0,
                                        Oi.cAF()(i.frame),
                                        e.q.splice(0, 1),
                                        r)
                                        for (o in i.props)
                                            W(n, o, i.props[o]);
                                    t ? e.q = [] : N(e, !1)
                                }
                                break
                            }
                    }(this, n, t)
                })
            }
        },
        b(M, {
            extend: b,
            inArray: H,
            isEmptyObject: L,
            isPlainObject: R,
            each: e
        }),
        M);
    function b() {
        var n, t, r, e, i, o, u = arguments[0] || {}, f = 1, a = arguments[xi.l], c = !1;
        for (d(u) == wi && (c = u,
            u = arguments[1] || {},
            f = 2),
            d(u) != pi && !d(u) == bi && (u = {}),
            a === f && (u = M,
                --f); f < a; f++)
            if (null != (i = arguments[f]))
                for (e in i)
                    n = u[e],
                        u !== (r = i[e]) && (c && r && (R(r) || (t = Oi.isA(r))) ? (o = t ? (t = !1,
                            n && Oi.isA(n) ? n : []) : n && R(n) ? n : {},
                            u[e] = b(c, o, r)) : r !== di && (u[e] = r));
        return u
    }
    function H(n, t, r) {
        for (var e = r || 0; e < t[xi.l]; e++)
            if (t[e] === n)
                return e;
        return -1
    }
    function E(n) {
        return d(n) == bi
    }
    function L(n) {
        for (var t in n)
            return !1;
        return !0
    }
    function R(n) {
        if (!n || d(n) != pi)
            return !1;
        var t, r = xi.p, e = Object[r].hasOwnProperty, i = e.call(n, "constructor"), o = n.constructor && n.constructor[r] && e.call(n.constructor[r], "isPrototypeOf");
        if (n.constructor && !i && !o)
            return !1;
        for (t in n)
            ;
        return d(t) == f || e.call(n, t)
    }
    function e(n, t) {
        var r = 0;
        if (m(n))
            for (; r < n[xi.l] && !1 !== t.call(n[r], r, n[r]); r++)
                ;
        else
            for (r in n)
                if (!1 === t.call(n[r], r, n[r]))
                    break;
        return n
    }
    function m(n) {
        var t = !!n && [xi.l] in n && n[xi.l]
            , r = d(n);
        return !E(r) && (r == mi || 0 === t || d(t) == yi && 0 < t && t - 1 in n)
    }
    function g(n) {
        return (n.match(v) || []).join(h)
    }
    function w(n, t) {
        for (var r = (n.parentNode || hi).querySelectorAll(t) || [], e = r[xi.l]; e--;)
            if (r[e] == n)
                return 1
    }
    function i(n, t, r) {
        if (Oi.isA(r))
            for (var e = 0; e < r[xi.l]; e++)
                i(n, t, r[e]);
        else
            d(r) == gi ? n.insertAdjacentHTML(t, r) : n.insertAdjacentElement(t, r.nodeType ? r : r[0])
    }
    function y(n, t, r) {
        try {
            n[xi.s][t] !== di && (n[xi.s][t] = function e(n, t) {
                p[n.toLowerCase()] || d(t) != yi || (t += "px");
                return t
            }(t, r))
        } catch (i) { }
    }
    function N(n, t) {
        var r, e;
        !1 !== t && n.q.splice(0, 1),
            0 < n.q[xi.l] ? (e = n.q[0],
                x(n.el, e.props, e.duration, e.easing, e.complete, !0)) : -1 < (r = H(n, T)) && T.splice(r, 1)
    }
    function W(n, t, r) {
        t === k || t === I ? n[t] = r : y(n, t, r)
    }
    function x(n, t, r, e, i, o) {
        var u, f, a, c, s, l, v = R(r), h = {}, d = {}, p = 0;
        for (l = v ? (e = r.easing,
            r.start,
            a = r.progress,
            c = r.step,
            s = r.specialEasing,
            i = r.complete,
            r.duration) : r,
            s = s || {},
            l = l || 400,
            e = e || "swing",
            o = o || !1; p < T[xi.l]; p++)
            if (T[p].el === n) {
                f = T[p];
                break
            }
        for (u in f || (f = {
            el: n,
            q: []
        },
            T.push(f)),
            t)
            h[u] = u === k || u === I ? n[u] : M(n).css(u);
        for (u in h)
            h[u] !== t[u] && t[u] !== di && (d[u] = t[u]);
        if (L(d))
            o && N(f);
        else {
            var b, m, g, w, y, x, _, O, S, z = o ? 0 : H(C, f.q), C = {
                props: d,
                duration: v ? r : l,
                easing: e,
                complete: i
            };
            if (-1 === z && (z = f.q[xi.l],
                f.q.push(C)),
                0 === z)
                if (0 < l)
                    _ = Oi.now(),
                        O = function () {
                            for (u in b = Oi.now(),
                                S = b - _,
                                m = C.stop || l <= S,
                                g = 1 - (Si.max(0, _ + l - b) / l || 0),
                                d)
                                w = parseFloat(h[u]),
                                    y = parseFloat(d[u]),
                                    x = (y - w) * A[s[u] || e](g, g * l, 0, 1, l) + w,
                                    W(n, u, x),
                                    E(c) && c(x, {
                                        elem: n,
                                        prop: u,
                                        start: w,
                                        now: x,
                                        end: y,
                                        pos: g,
                                        options: {
                                            easing: e,
                                            speacialEasing: s,
                                            duration: l,
                                            complete: i,
                                            step: c
                                        },
                                        startTime: _
                                    });
                            E(a) && a({}, g, Si.max(0, l - S)),
                                m ? (N(f),
                                    E(i) && i()) : C.frame = Oi.rAF()(O)
                        }
                        ,
                        C.frame = Oi.rAF()(O);
                else {
                    for (u in d)
                        W(n, u, d[u]);
                    N(f)
                }
        }
    }
    function _(n) {
        return !!(n[xi.oW] || n[xi.oH] || n.getClientRects()[xi.l])
    }
    function M(n) {
        if (0 === arguments[xi.l])
            return this;
        var t, r, e = new M, i = n, o = 0;
        if (d(n) == gi)
            for (i = [],
                t = "<" === n.charAt(0) ? ((r = hi.createElement("div")).innerHTML = n,
                    r.children) : hi.querySelectorAll(n); o < t[xi.l]; o++)
                i.push(t[o]);
        if (i) {
            for (d(i) == gi || m(i) && i !== vi && i !== i.self || (i = [i]),
                o = 0; o < i[xi.l]; o++)
                e[o] = i[o];
            e[xi.l] = i[xi.l]
        }
        return e
    }
    var O, S, ki, z, C, D, F, P, j, B, Q, U, V, $, Ii, Ti = (O = [],
        S = "__overlayScrollbars__",
        function (n, t) {
            var r = arguments[xi.l];
            if (r < 1)
                return O;
            if (t)
                n[S] = t,
                    O.push(n);
            else {
                var e = Oi.inA(n, O);
                if (-1 < e) {
                    if (!(1 < r))
                        return O[e][S];
                    delete n[S],
                        O.splice(e, 1)
                }
            }
        }
    ), q = ($ = [],
        D = Oi.type,
        U = {
            className: ["os-theme-dark", [n, gi]],
            resize: ["none", "n:none b:both h:horizontal v:vertical"],
            sizeAutoCapable: P = [!0, wi],
            clipAlways: P,
            normalizeRTL: P,
            paddingAbsolute: j = [!(F = [wi, yi, gi, mi, pi, bi, n]), wi],
            autoUpdate: [null, [n, wi]],
            autoUpdateInterval: [33, yi],
            updateOnLoad: [["img"], [gi, mi, n]],
            nativeScrollbarsOverlaid: {
                showNativeScrollbars: j,
                initialize: P
            },
            overflowBehavior: {
                x: ["scroll", Q = "v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden"],
                y: ["scroll", Q]
            },
            scrollbars: {
                visibility: ["auto", "v:visible h:hidden a:auto"],
                autoHide: ["never", "n:never s:scroll l:leave m:move"],
                autoHideDelay: [800, yi],
                dragScrolling: P,
                clickScrolling: j,
                touchSupport: P,
                snapHandle: j
            },
            textarea: {
                dynWidth: j,
                dynHeight: j,
                inheritedAttrs: [["style", "class"], [gi, mi, n]]
            },
            callbacks: {
                onInitialized: B = [null, [n, bi]],
                onInitializationWithdrawn: B,
                onDestroyed: B,
                onScrollStart: B,
                onScroll: B,
                onScrollStop: B,
                onOverflowChanged: B,
                onOverflowAmountChanged: B,
                onDirectionChanged: B,
                onContentSizeChanged: B,
                onHostSizeChanged: B,
                onUpdated: B
            }
        },
        Ii = {
            g: (V = function (i) {
                var o = function (n) {
                    var t, r, e;
                    for (t in n)
                        n[xi.hOP](t) && (r = n[t],
                            (e = D(r)) == mi ? n[t] = r[i ? 1 : 0] : e == pi && (n[t] = o(r)));
                    return n
                };
                return o(Ci.extend(!0, {}, U))
            }
            )(),
            _: V(!0),
            O: function (n, t, I, r) {
                var e = {}
                    , i = {}
                    , o = Ci.extend(!0, {}, n)
                    , T = Ci.inArray
                    , A = Ci.isEmptyObject
                    , H = function (n, t, r, e, i, o) {
                        for (var u in t)
                            if (t[xi.hOP](u) && n[xi.hOP](u)) {
                                var f, a, c, s, l, v, h, d, p = !1, b = !1, m = t[u], g = D(m), w = g == pi, y = Oi.isA(m) ? m : [m], x = r[u], _ = n[u], O = D(_), S = o ? o + "." : "", z = 'The option "' + S + u + "\" wasn't set, because", C = [], k = [];
                                if (x = x === di ? {} : x,
                                    w && O == pi)
                                    e[u] = {},
                                        i[u] = {},
                                        H(_, m, x, e[u], i[u], S + u),
                                        Ci.each([n, e, i], function (n, t) {
                                            A(t[u]) && delete t[u]
                                        });
                                else if (!w) {
                                    for (v = 0; v < y[xi.l]; v++)
                                        if (l = y[v],
                                            c = (g = D(l)) == gi && -1 === T(l, F))
                                            for (C.push(gi),
                                                f = l.split(" "),
                                                k = k.concat(f),
                                                h = 0; h < f[xi.l]; h++) {
                                                for (s = (a = f[h].split(":"))[0],
                                                    d = 0; d < a[xi.l]; d++)
                                                    if (_ === a[d]) {
                                                        p = !0;
                                                        break
                                                    }
                                                if (p)
                                                    break
                                            }
                                        else if (C.push(l),
                                            O === l) {
                                            p = !0;
                                            break
                                        }
                                    p ? ((b = _ !== x) && (e[u] = _),
                                        (c ? T(x, a) < 0 : b) && (i[u] = c ? s : _)) : I && console.warn(z + " it doesn't accept the type [ " + O.toUpperCase() + ' ] with the value of "' + _ + '".\r\nAccepted types are: [ ' + C.join(", ").toUpperCase() + " ]." + (0 < k[length] ? "\r\nValid strings are: [ " + k.join(", ").split(":").join(", ") + " ]." : "")),
                                        delete n[u]
                                }
                            }
                    };
                return H(o, t, r || {}, e, i),
                    !A(o) && I && console.warn("The following options are discarded due to invalidity:\r\n" + vi.JSON.stringify(o, null, 2)),
                {
                    S: e,
                    z: i
                }
            }
        },
        (ki = vi.OverlayScrollbars = function (n, r, e) {
            if (0 === arguments[xi.l])
                return this;
            var i, t, o = [], u = Ci.isPlainObject(r);
            return n ? (n = n[xi.l] != di ? n : [n[0] || n],
                X(),
                0 < n[xi.l] && (u ? Ci.each(n, function (n, t) {
                    (i = t) !== di && o.push(K(i, r, e, z, C))
                }) : Ci.each(n, function (n, t) {
                    i = Ti(t),
                        ("!" === r && ki.valid(i) || Oi.type(r) == bi && r(t, i) || r === di) && o.push(i)
                }),
                    t = 1 === o[xi.l] ? o[0] : o),
                t) : u || !r ? t : o
        }
        ).globals = function () {
            X();
            var n = Ci.extend(!0, {}, z);
            return delete n.msie,
                n
        }
        ,
        ki.defaultOptions = function (n) {
            X();
            var t = z.defaultOptions;
            if (n === di)
                return Ci.extend(!0, {}, t);
            z.defaultOptions = Ci.extend(!0, {}, t, Ii.O(n, Ii._, !0, t).S)
        }
        ,
        ki.valid = function (n) {
            return n instanceof ki && !n.getState().destroyed
        }
        ,
        ki.extension = function (n, t, r) {
            var e = Oi.type(n) == gi
                , i = arguments[xi.l]
                , o = 0;
            if (i < 1 || !e)
                return Ci.extend(!0, {
                    length: $[xi.l]
                }, $);
            if (e)
                if (Oi.type(t) == bi)
                    $.push({
                        name: n,
                        extensionFactory: t,
                        defaultOptions: r
                    });
                else
                    for (; o < $[xi.l]; o++)
                        if ($[o].name === n) {
                            if (!(1 < i))
                                return Ci.extend(!0, {}, $[o]);
                            $.splice(o, 1)
                        }
        }
        ,
        ki);
    function X() {
        z = z || new Y(Ii.g),
            C = C || new G(z)
    }
    function Y(n) {
        var _ = this
            , i = "overflow"
            , O = Ci("body")
            , S = Ci('<div id="os-dummy-scrollbar-size"><div></div></div>')
            , o = S[0]
            , e = Ci(S.children("div").eq(0));
        O.append(S),
            S.hide().show();
        var t, r, u, f, a, c, s, l, v, h = z(o), d = {
            x: 0 === h.x,
            y: 0 === h.y
        }, p = (r = vi.navigator.userAgent,
            f = "substring",
            a = r[u = "indexOf"]("MSIE "),
            c = r[u]("Trident/"),
            s = r[u]("Edge/"),
            l = r[u]("rv:"),
            v = parseInt,
            0 < a ? t = v(r[f](a + 5, r[u](".", a)), 10) : 0 < c ? t = v(r[f](l + 3, r[u](".", l)), 10) : 0 < s && (t = v(r[f](s + 5, r[u](".", s)), 10)),
            t);
        function z(n) {
            return {
                x: n[xi.oH] - n[xi.cH],
                y: n[xi.oW] - n[xi.cW]
            }
        }
        Ci.extend(_, {
            defaultOptions: n,
            msie: p,
            autoUpdateLoop: !1,
            autoUpdateRecommended: !Oi.mO(),
            nativeScrollbarSize: h,
            nativeScrollbarIsOverlaid: d,
            nativeScrollbarStyling: function () {
                var n = !1;
                S.addClass("os-viewport-native-scrollbars-invisible");
                try {
                    n = "none" === S.css("scrollbar-width") && (9 < p || !p) || "none" === vi.getComputedStyle(o, "::-webkit-scrollbar").getPropertyValue("display")
                } catch (t) { }
                return n
            }(),
            overlayScrollbarDummySize: {
                x: 30,
                y: 30
            },
            cssCalc: _i.d("width", "calc", "(1px)") || null,
            restrictedMeasuring: function () {
                S.css(i, "hidden");
                var n = o[xi.sW]
                    , t = o[xi.sH];
                S.css(i, "visible");
                var r = o[xi.sW]
                    , e = o[xi.sH];
                return n - r != 0 || t - e != 0
            }(),
            rtlScrollBehavior: function () {
                S.css({
                    "overflow-y": "hidden",
                    "overflow-x": "scroll",
                    direction: "rtl"
                }).scrollLeft(0);
                var n = S.offset()
                    , t = e.offset();
                S.scrollLeft(-999);
                var r = e.offset();
                return {
                    i: n.left === t.left,
                    n: t.left !== r.left
                }
            }(),
            supportTransform: !!_i.v("transform"),
            supportTransition: !!_i.v("transition"),
            supportPassiveEvents: function () {
                var n = !1;
                try {
                    vi.addEventListener("test", null, Object.defineProperty({}, "passive", {
                        get: function () {
                            n = !0
                        }
                    }))
                } catch (t) { }
                return n
            }(),
            supportResizeObserver: !!Oi.rO(),
            supportMutationObserver: !!Oi.mO()
        }),
            S.removeAttr(xi.s).remove(),
            function () {
                if (!d.x || !d.y) {
                    var m = Si.abs
                        , g = Oi.wW()
                        , w = Oi.wH()
                        , y = x();
                    Ci(vi).on("resize", function () {
                        if (0 < Ti().length) {
                            var n = Oi.wW()
                                , t = Oi.wH()
                                , r = n - g
                                , e = t - w;
                            if (0 == r && 0 == e)
                                return;
                            var i, o = Si.round(n / (g / 100)), u = Si.round(t / (w / 100)), f = m(r), a = m(e), c = m(o), s = m(u), l = x(), v = 2 < f && 2 < a, h = !function b(n, t) {
                                var r = m(n)
                                    , e = m(t);
                                return r !== e && r + 1 !== e && r - 1 !== e
                            }(c, s), d = v && h && (l !== y && 0 < y), p = _.nativeScrollbarSize;
                            d && (O.append(S),
                                i = _.nativeScrollbarSize = z(S[0]),
                                S.remove(),
                                p.x === i.x && p.y === i.y || Ci.each(Ti(), function () {
                                    Ti(this) && Ti(this).update("zoom")
                                })),
                                g = n,
                                w = t,
                                y = l
                        }
                    })
                }
                function x() {
                    var n = vi.screen.deviceXDPI || 0
                        , t = vi.screen.logicalXDPI || 1;
                    return vi.devicePixelRatio || n / t
                }
            }()
    }
    function G(r) {
        var c, e = Ci.inArray, s = Oi.now, l = "autoUpdate", v = xi.l, h = [], d = [], p = !1, b = 33, m = s(), g = function () {
            if (0 < h[v] && p) {
                c = Oi.rAF()(function () {
                    g()
                });
                var n, t, r, e, i, o, u = s(), f = u - m;
                if (b < f) {
                    m = u - f % b,
                        n = 33;
                    for (var a = 0; a < h[v]; a++)
                        (t = h[a]) !== di && (e = (r = t.options())[l],
                            i = Si.max(1, r.autoUpdateInterval),
                            o = s(),
                            (!0 === e || null === e) && o - d[a] > i && (t.update("auto"),
                                d[a] = new Date(o += i)),
                            n = Si.max(1, Si.min(n, i)));
                    b = n
                }
            } else
                b = 33
        };
        this.add = function (n) {
            -1 === e(n, h) && (h.push(n),
                d.push(s()),
                0 < h[v] && !p && (p = !0,
                    r.autoUpdateLoop = p,
                    g()))
        }
            ,
            this.remove = function (n) {
                var t = e(n, h);
                -1 < t && (d.splice(t, 1),
                    h.splice(t, 1),
                    0 === h[v] && p && (p = !1,
                        r.autoUpdateLoop = p,
                        c !== di && (Oi.cAF()(c),
                            c = -1)))
            }
    }
    function K(r, n, t, xt, _t) {
        var cn = Oi.type
            , sn = Ci.inArray
            , h = Ci.each
            , Ot = new ki
            , e = Ci[xi.p];
        if (ht(r)) {
            if (Ti(r)) {
                var i = Ti(r);
                return i.options(n),
                    i
            }
            var St, zt, Ct, kt, D, It, Tt, At, F, ln, w, T, d, Ht, Et, Lt, Rt, y, p, Nt, Wt, Mt, Dt, Ft, Pt, jt, Bt, Qt, Ut, o, u, Vt, $t, qt, f, P, c, j, Xt, Yt, Gt, Kt, Jt, Zt, nr, tr, rr, er, ir, a, s, l, v, b, m, x, A, or, ur, fr, H, ar, cr, sr, lr, vr, hr, dr, pr, br, mr, gr, wr, yr, xr, _r, E, Or, Sr, zr, Cr, kr, Ir, Tr, Ar, g, _, Hr, Er, Lr, Rr, Nr, Wr, Mr, Dr, Fr, Pr, jr, Br, Qr, Ur, O, S, z, C, Vr, $r, k, I, qr, Xr, Yr, Gr, Kr, B, Q, Jr, Zr, ne, te, re = {}, vn = {}, hn = {}, ee = {}, ie = {}, L = "-hidden", oe = "margin-", ue = "padding-", fe = "border-", ae = "top", ce = "right", se = "bottom", le = "left", ve = "min-", he = "max-", de = "width", pe = "height", be = "float", me = "", ge = "auto", dn = "sync", we = "scroll", ye = "100%", pn = "x", bn = "y", R = ".", xe = " ", N = "scrollbar", W = "-horizontal", M = "-vertical", _e = we + "Left", Oe = we + "Top", U = "mousedown touchstart", V = "mouseup touchend touchcancel", $ = "mousemove touchmove", q = "mouseenter", X = "mouseleave", Y = "keydown", G = "keyup", K = "selectstart", J = "transitionend webkitTransitionEnd oTransitionEnd", Z = "__overlayScrollbarsRO__", nn = "os-", tn = "os-html", rn = "os-host", en = rn + "-foreign", on = rn + "-textarea", un = rn + "-" + N + W + L, fn = rn + "-" + N + M + L, an = rn + "-transition", Se = rn + "-rtl", ze = rn + "-resize-disabled", Ce = rn + "-scrolling", ke = rn + "-overflow", Ie = (ke = rn + "-overflow") + "-x", Te = ke + "-y", mn = "os-textarea", gn = mn + "-cover", wn = "os-padding", yn = "os-viewport", Ae = yn + "-native-scrollbars-invisible", xn = yn + "-native-scrollbars-overlaid", _n = "os-content", He = "os-content-arrange", Ee = "os-content-glue", Le = "os-size-auto-observer", On = "os-resize-observer", Sn = "os-resize-observer-item", zn = Sn + "-final", Cn = "os-text-inherit", kn = nn + N, In = kn + "-track", Tn = In + "-off", An = kn + "-handle", Hn = An + "-off", En = kn + "-unusable", Ln = kn + "-" + ge + L, Rn = kn + "-corner", Re = Rn + "-resize", Ne = Re + "-both", We = Re + W, Me = Re + M, Nn = kn + W, Wn = kn + M, Mn = "os-dragging", De = "os-theme-none", Dn = [Ae, xn, Tn, Hn, En, Ln, Re, Ne, We, Me, Mn].join(xe), Fn = [], Pn = [xi.ti], jn = {}, Fe = {}, Pe = 42, Bn = "load", Qn = [], Un = {}, Vn = ["wrap", "cols", "rows"], $n = [xi.i, xi.c, xi.s, "open"].concat(Pn), qn = [];
            return Ot.sleep = function () {
                Ut = !0
            }
                ,
                Ot.update = function (n) {
                    var t, r, e, i, o;
                    if (!Et)
                        return cn(n) == gi ? n === ge ? (t = function u() {
                            if (!Ut && !Vr) {
                                var r, e, i, o = [], n = [{
                                    C: Yt,
                                    k: $n.concat(":visible")
                                }, {
                                    C: Lt ? Xt : di,
                                    k: Vn
                                }];
                                return h(n, function (n, t) {
                                    (r = t.C) && h(t.k, function (n, t) {
                                        e = ":" === t.charAt(0) ? r.is(t) : r.attr(t),
                                            i = Un[t],
                                            fi(e, i) && o.push(t),
                                            Un[t] = e
                                    })
                                }),
                                    it(o),
                                    0 < o[xi.l]
                            }
                        }(),
                            r = function a() {
                                if (Ut)
                                    return !1;
                                var n, t, r, e, i = oi(), o = Lt && br && !Fr ? Xt.val().length : 0, u = !Vr && br && !Lt, f = {};
                                return u && (n = nr.css(be),
                                    f[be] = Qt ? ce : le,
                                    f[de] = ge,
                                    nr.css(f)),
                                    e = {
                                        w: i[xi.sW] + o,
                                        h: i[xi.sH] + o
                                    },
                                    u && (f[be] = n,
                                        f[de] = ye,
                                        nr.css(f)),
                                    t = Ve(),
                                    r = fi(e, g),
                                    g = e,
                                    r || t
                            }(),
                            (e = t || r) && qe({
                                I: r,
                                T: Ht ? di : Vt
                            })) : n === dn ? Vr ? (i = z(O.takeRecords()),
                                o = C(S.takeRecords())) : i = Ot.update(ge) : "zoom" === n && qe({
                                    A: !0,
                                    I: !0
                                }) : (n = Ut || n,
                                    Ut = !1,
                                    Ot.update(dn) && !n || qe({
                                        H: n
                                    })),
                            Xe(),
                            e || i || o
                }
                ,
                Ot.options = function (n, t) {
                    var r, e = {};
                    if (Ci.isEmptyObject(n) || !Ci.isPlainObject(n)) {
                        if (cn(n) != gi)
                            return u;
                        if (!(1 < arguments.length))
                            return bt(u, n);
                        !function a(n, t, r) {
                            for (var e = t.split(R), i = e.length, o = 0, u = {}, f = u; o < i; o++)
                                u = u[e[o]] = o + 1 < i ? {} : r;
                            Ci.extend(n, f, !0)
                        }(e, n, t),
                            r = ot(e)
                    } else
                        r = ot(n);
                    Ci.isEmptyObject(r) || qe({
                        T: r
                    })
                }
                ,
                Ot.destroy = function () {
                    if (!Et) {
                        for (var n in _t.remove(Ot),
                            Qe(),
                            je(Kt),
                            je(Gt),
                            jn)
                            Ot.removeExt(n);
                        for (; 0 < qn[xi.l];)
                            qn.pop()();
                        Ue(!0),
                            rr && gt(rr),
                            tr && gt(tr),
                            Wt && gt(Gt),
                            at(!0),
                            st(!0),
                            ut(!0);
                        for (var t = 0; t < Qn[xi.l]; t++)
                            Ci(Qn[t]).off(Bn, rt);
                        Qn = di,
                            Ut = Et = !0,
                            Ti(r, 0),
                            ti("onDestroyed")
                    }
                }
                ,
                Ot.scroll = function (n, t, r, e) {
                    if (0 === arguments.length || n === di) {
                        var i = Wr && Qt && Ct.i
                            , o = Wr && Qt && Ct.n
                            , u = vn.L
                            , f = vn.R
                            , a = vn.N;
                        return f = i ? 1 - f : f,
                            u = i ? a - u : u,
                            a *= o ? -1 : 1,
                        {
                            position: {
                                x: u *= o ? -1 : 1,
                                y: hn.L
                            },
                            ratio: {
                                x: f,
                                y: hn.R
                            },
                            max: {
                                x: a,
                                y: hn.N
                            },
                            handleOffset: {
                                x: vn.W,
                                y: hn.W
                            },
                            handleLength: {
                                x: vn.M,
                                y: hn.M
                            },
                            handleLengthRatio: {
                                x: vn.D,
                                y: hn.D
                            },
                            trackLength: {
                                x: vn.F,
                                y: hn.F
                            },
                            snappedHandleOffset: {
                                x: vn.P,
                                y: hn.P
                            },
                            isRTL: Qt,
                            isRTLNormalized: Wr
                        }
                    }
                    Ot.update(dn);
                    var c, s, l, v, h, g, w, d, p, y = Wr, b = [pn, le, "l"], m = [bn, ae, "t"], x = ["+=", "-=", "*=", "/="], _ = cn(t) == pi, O = _ ? t.complete : e, S = {}, z = {}, C = "begin", k = "nearest", I = "never", T = "ifneeded", A = xi.l, H = [pn, bn, "xy", "yx"], E = [C, "end", "center", k], L = ["always", I, T], R = n[xi.hOP]("el"), N = R ? n.el : n, W = !!(N instanceof Ci || zi) && N instanceof zi, M = !W && ht(N), D = function () {
                        s && Je(!0),
                            l && Je(!1)
                    }, F = cn(O) != bi ? di : function () {
                        D(),
                            O()
                    }
                        ;
                    function P(n, t) {
                        for (c = 0; c < t[A]; c++)
                            if (n === t[c])
                                return 1
                    }
                    function j(n, t) {
                        var r = n ? b : m;
                        if (t = cn(t) == gi || cn(t) == yi ? [t, t] : t,
                            Oi.isA(t))
                            return n ? t[0] : t[1];
                        if (cn(t) == pi)
                            for (c = 0; c < r[A]; c++)
                                if (r[c] in t)
                                    return t[r[c]]
                    }
                    function B(n, t) {
                        var r, e, i, o, u = cn(t) == gi, f = n ? vn : hn, a = f.L, c = f.N, s = Qt && n, l = s && Ct.n && !y, v = "replace", h = eval;
                        if ((e = u ? (2 < t[A] && (o = t.substr(0, 2),
                            -1 < sn(o, x) && (r = o)),
                            t = (t = r ? t.substr(2) : t)[v](/min/g, 0)[v](/</g, 0)[v](/max/g, (l ? "-" : me) + ye)[v](/>/g, (l ? "-" : me) + ye)[v](/px/g, me)[v](/%/g, " * " + c * (s && Ct.n ? -1 : 1) / 100)[v](/vw/g, " * " + ee.w)[v](/vh/g, " * " + ee.h),
                            ii(isNaN(t) ? ii(h(t), !0).toFixed() : t)) : t) !== di && !isNaN(e) && cn(e) == yi) {
                            var d = y && s
                                , p = a * (d && Ct.n ? -1 : 1)
                                , b = d && Ct.i
                                , m = d && Ct.n;
                            switch (p = b ? c - p : p,
                            r) {
                                case "+=":
                                    i = p + e;
                                    break;
                                case "-=":
                                    i = p - e;
                                    break;
                                case "*=":
                                    i = p * e;
                                    break;
                                case "/=":
                                    i = p / e;
                                    break;
                                default:
                                    i = e
                            }
                            i = b ? c - i : i,
                                i *= m ? -1 : 1,
                                i = s && Ct.n ? Si.min(0, Si.max(c, i)) : Si.max(0, Si.min(c, i))
                        }
                        return i === a ? di : i
                    }
                    function Q(n, t, r, e) {
                        var i, o, u = [r, r], f = cn(n);
                        if (f == t)
                            n = [n, n];
                        else if (f == mi) {
                            if (2 < (i = n[A]) || i < 1)
                                n = u;
                            else
                                for (1 === i && (n[1] = r),
                                    c = 0; c < i; c++)
                                    if (o = n[c],
                                        cn(o) != t || !P(o, e)) {
                                        n = u;
                                        break
                                    }
                        } else
                            n = f == pi ? [n[pn] || r, n[bn] || r] : u;
                        return {
                            x: n[0],
                            y: n[1]
                        }
                    }
                    function U(n) {
                        var t, r, e = [], i = [ae, ce, se, le];
                        for (c = 0; c < n[A] && c !== i[A]; c++)
                            t = n[c],
                                (r = cn(t)) == wi ? e.push(t ? ii(p.css(oe + i[c])) : 0) : e.push(r == yi ? t : 0);
                        return e
                    }
                    if (W || M) {
                        var V, $ = R ? n.margin : 0, q = R ? n.axis : 0, X = R ? n.scroll : 0, Y = R ? n.block : 0, G = [0, 0, 0, 0], K = cn($);
                        if (0 < (p = W ? N : Ci(N))[A]) {
                            $ = K == yi || K == wi ? U([$, $, $, $]) : K == mi ? 2 === (V = $[A]) ? U([$[0], $[1], $[0], $[1]]) : 4 <= V ? U($) : G : K == pi ? U([$[ae], $[ce], $[se], $[le]]) : G,
                                h = P(q, H) ? q : "xy",
                                g = Q(X, gi, "always", L),
                                w = Q(Y, gi, C, E),
                                d = $;
                            var J = vn.L
                                , Z = hn.L
                                , nn = Jt.offset()
                                , tn = p.offset()
                                , rn = {
                                    x: g.x == I || h == bn,
                                    y: g.y == I || h == pn
                                };
                            tn[ae] -= d[0],
                                tn[le] -= d[3];
                            var en = {
                                x: Si.round(tn[le] - nn[le] + J),
                                y: Si.round(tn[ae] - nn[ae] + Z)
                            };
                            if (Qt && (Ct.n || Ct.i || (en.x = Si.round(nn[le] - tn[le] + J)),
                                Ct.n && y && (en.x *= -1),
                                Ct.i && y && (en.x = Si.round(nn[le] - tn[le] + (vn.N - J)))),
                                w.x != C || w.y != C || g.x == T || g.y == T || Qt) {
                                var on = p[0]
                                    , un = ln ? on[xi.bCR]() : {
                                        width: on[xi.oW],
                                        height: on[xi.oH]
                                    }
                                    , fn = {
                                        w: un[de] + d[3] + d[1],
                                        h: un[pe] + d[0] + d[2]
                                    }
                                    , an = function (n) {
                                        var t = ni(n)
                                            , r = t.j
                                            , e = t.B
                                            , i = t.Q
                                            , o = w[i] == (n && Qt ? C : "end")
                                            , u = "center" == w[i]
                                            , f = w[i] == k
                                            , a = g[i] == I
                                            , c = g[i] == T
                                            , s = ee[r]
                                            , l = nn[e]
                                            , v = fn[r]
                                            , h = tn[e]
                                            , d = u ? 2 : 1
                                            , p = h + v / 2
                                            , b = l + s / 2
                                            , m = v <= s && l <= h && h + v <= l + s;
                                        a ? rn[i] = !0 : rn[i] || ((f || c) && (rn[i] = c && m,
                                            o = v < s ? b < p : p < b),
                                            en[i] -= o || u ? (s / d - v / d) * (n && Qt && y ? -1 : 1) : 0)
                                    };
                                an(!0),
                                    an(!1)
                            }
                            rn.y && delete en.y,
                                rn.x && delete en.x,
                                n = en
                        }
                    }
                    S[_e] = B(!0, j(!0, n)),
                        S[Oe] = B(!1, j(!1, n)),
                        s = S[_e] !== di,
                        l = S[Oe] !== di,
                        (s || l) && (0 < t || _) ? _ ? (t.complete = F,
                            Zt.animate(S, t)) : (v = {
                                duration: t,
                                complete: F
                            },
                                Oi.isA(r) || Ci.isPlainObject(r) ? (z[_e] = r[0] || r.x,
                                    z[Oe] = r[1] || r.y,
                                    v.specialEasing = z) : v.easing = r,
                                Zt.animate(S, v)) : (s && Zt[_e](S[_e]),
                                    l && Zt[Oe](S[Oe]),
                                    D())
                }
                ,
                Ot.scrollStop = function (n, t, r) {
                    return Zt.stop(n, t, r),
                        Ot
                }
                ,
                Ot.getElements = function (n) {
                    var t = {
                        target: or,
                        host: ur,
                        padding: ar,
                        viewport: cr,
                        content: sr,
                        scrollbarHorizontal: {
                            scrollbar: a[0],
                            track: s[0],
                            handle: l[0]
                        },
                        scrollbarVertical: {
                            scrollbar: v[0],
                            track: b[0],
                            handle: m[0]
                        },
                        scrollbarCorner: ir[0]
                    };
                    return cn(n) == gi ? bt(t, n) : t
                }
                ,
                Ot.getState = function (n) {
                    function t(n) {
                        if (!Ci.isPlainObject(n))
                            return n;
                        var r = ai({}, n)
                            , t = function (n, t) {
                                r[xi.hOP](n) && (r[t] = r[n],
                                    delete r[n])
                            };
                        return t("w", de),
                            t("h", pe),
                            delete r.c,
                            r
                    }
                    var r = {
                        destroyed: !!t(Et),
                        sleeping: !!t(Ut),
                        autoUpdate: t(!Vr),
                        widthAuto: t(br),
                        heightAuto: t(mr),
                        padding: t(wr),
                        overflowAmount: t(kr),
                        hideOverflow: t(pr),
                        hasOverflow: t(dr),
                        contentScrollSize: t(vr),
                        viewportSize: t(ee),
                        hostSize: t(lr),
                        documentMixed: t(y)
                    };
                    return cn(n) == gi ? bt(r, n) : r
                }
                ,
                Ot.ext = function (n) {
                    var t, r = "added removed on contract".split(" "), e = 0;
                    if (cn(n) == gi) {
                        if (jn[xi.hOP](n))
                            for (t = ai({}, jn[n]); e < r.length; e++)
                                delete t[r[e]]
                    } else
                        for (e in t = {},
                            jn)
                            t[e] = ai({}, Ot.ext(e));
                    return t
                }
                ,
                Ot.addExt = function (n, t) {
                    var r, e, i, o, u = ki.extension(n), f = !0;
                    if (u) {
                        if (jn[xi.hOP](n))
                            return Ot.ext(n);
                        if ((r = u.extensionFactory.call(Ot, ai({}, u.defaultOptions), Ci, Oi)) && (i = r.contract,
                            cn(i) == bi && (o = i(vi),
                                f = cn(o) == wi ? o : f),
                            f))
                            return e = (jn[n] = r).added,
                                cn(e) == bi && e(t),
                                Ot.ext(n)
                    } else
                        console.warn('A extension with the name "' + n + "\" isn't registered.")
                }
                ,
                Ot.removeExt = function (n) {
                    var t, r = jn[n];
                    return !!r && (delete jn[n],
                        t = r.removed,
                        cn(t) == bi && t(),
                        !0)
                }
                ,
                ki.valid(function yt(n, t, r) {
                    var e, i;
                    return o = xt.defaultOptions,
                        It = xt.nativeScrollbarStyling,
                        At = ai({}, xt.nativeScrollbarSize),
                        St = ai({}, xt.nativeScrollbarIsOverlaid),
                        zt = ai({}, xt.overlayScrollbarDummySize),
                        Ct = ai({}, xt.rtlScrollBehavior),
                        ot(ai({}, o, t)),
                        Tt = xt.cssCalc,
                        D = xt.msie,
                        kt = xt.autoUpdateRecommended,
                        F = xt.supportTransition,
                        ln = xt.supportTransform,
                        w = xt.supportPassiveEvents,
                        T = xt.supportResizeObserver,
                        d = xt.supportMutationObserver,
                        xt.restrictedMeasuring,
                        P = Ci(n.ownerDocument),
                        A = P[0],
                        f = Ci(A.defaultView || A.parentWindow),
                        x = f[0],
                        c = wt(P, "html"),
                        j = wt(c, "body"),
                        Xt = Ci(n),
                        or = Xt[0],
                        Lt = Xt.is("textarea"),
                        Rt = Xt.is("body"),
                        y = A !== hi,
                        p = Lt ? Xt.hasClass(mn) && Xt.parent().hasClass(_n) : Xt.hasClass(rn) && Xt.children(R + wn)[xi.l],
                        St.x && St.y && !Vt.nativeScrollbarsOverlaid.initialize ? (ti("onInitializationWithdrawn"),
                            p && (ut(!0),
                                at(!0),
                                st(!0)),
                            Ut = Et = !0) : (Rt && ((e = {}).l = Si.max(Xt[_e](), c[_e](), f[_e]()),
                                e.t = Si.max(Xt[Oe](), c[Oe](), f[Oe]()),
                                i = function () {
                                    Zt.removeAttr(xi.ti),
                                        Xn(Zt, U, i, !0, !0)
                                }
                            ),
                                ut(),
                                at(),
                                st(),
                                ft(),
                                ct(!0),
                                ct(!1),
                                function s() {
                                    var r, t = x.top !== x, e = {}, i = {}, o = {};
                                    function u(n) {
                                        if (a(n)) {
                                            var t = c(n)
                                                , r = {};
                                            (ne || Zr) && (r[de] = i.w + (t.x - e.x) * o.x),
                                                (te || Zr) && (r[pe] = i.h + (t.y - e.y) * o.y),
                                                Yt.css(r),
                                                Oi.stpP(n)
                                        } else
                                            f(n)
                                    }
                                    function f(n) {
                                        var t = n !== di;
                                        Xn(P, [K, $, V], [tt, u, f], !0),
                                            si(j, Mn),
                                            ir.releaseCapture && ir.releaseCapture(),
                                            t && (r && Be(),
                                                Ot.update(ge)),
                                            r = !1
                                    }
                                    function a(n) {
                                        var t = (n.originalEvent || n).touches !== di;
                                        return !Ut && !Et && (1 === Oi.mBtn(n) || t)
                                    }
                                    function c(n) {
                                        return D && t ? {
                                            x: n.screenX,
                                            y: n.screenY
                                        } : Oi.page(n)
                                    }
                                    Yn(ir, U, function (n) {
                                        a(n) && !Jr && (Vr && (r = !0,
                                            Qe()),
                                            e = c(n),
                                            i.w = ur[xi.oW] - (Nt ? 0 : Mt),
                                            i.h = ur[xi.oH] - (Nt ? 0 : Dt),
                                            o = vt(),
                                            Xn(P, [K, $, V], [tt, u, f]),
                                            ci(j, Mn),
                                            ir.setCapture && ir.setCapture(),
                                            Oi.prvD(n),
                                            Oi.stpP(n))
                                    })
                                }(),
                                Gn(),
                                je(Kt, Kn),
                                Rt && (Zt[_e](e.l)[Oe](e.t),
                                    hi.activeElement == n && cr.focus && (Zt.attr(xi.ti, "-1"),
                                        cr.focus(),
                                        Xn(Zt, U, i, !1, !0))),
                                Ot.update(ge),
                                Ht = !0,
                                ti("onInitialized"),
                                h(Fn, function (n, t) {
                                    ti(t.n, t.a)
                                }),
                                Fn = [],
                                cn(r) == gi && (r = [r]),
                                Oi.isA(r) ? h(r, function (n, t) {
                                    Ot.addExt(t)
                                }) : Ci.isPlainObject(r) && h(r, function (n, t) {
                                    Ot.addExt(n, t)
                                }),
                                setTimeout(function () {
                                    F && !Et && ci(Yt, an)
                                }, 333)),
                        Ot
                }(r, n, t)) && Ti(r, Ot),
                Ot
        }
        function Xn(n, t, r, e, i) {
            var o = Oi.isA(t) && Oi.isA(r)
                , u = e ? "removeEventListener" : "addEventListener"
                , f = e ? "off" : "on"
                , a = !o && t.split(xe)
                , c = 0
                , s = Ci.isPlainObject(i)
                , l = w && (s ? i.U : i) || !1
                , v = s && (i.V || !1)
                , h = w ? {
                    passive: l,
                    capture: v
                } : v;
            if (o)
                for (; c < t[xi.l]; c++)
                    Xn(n, t[c], r[c], e, i);
            else
                for (; c < a[xi.l]; c++)
                    w ? n[0][u](a[c], r, h) : n[f](a[c], r)
        }
        function Yn(n, t, r, e) {
            Xn(n, t, r, !1, e),
                qn.push(Oi.bind(Xn, 0, n, t, r, !0, e))
        }
        function je(n, t) {
            if (n) {
                var r = Oi.rO()
                    , e = "animationstart mozAnimationStart webkitAnimationStart MSAnimationStart"
                    , i = "childNodes"
                    , o = 3333333
                    , u = function () {
                        n[Oe](o)[_e](Qt ? Ct.n ? -o : Ct.i ? 0 : o : o),
                            t()
                    };
                if (t) {
                    if (T)
                        ((k = n.addClass("observed").append(ui(On)).contents()[0])[Z] = new r(u)).observe(k);
                    else if (9 < D || !kt) {
                        n.prepend(ui(On, ui({
                            c: Sn,
                            dir: "ltr"
                        }, ui(Sn, ui(zn)) + ui(Sn, ui({
                            c: zn,
                            style: "width: 200%; height: 200%"
                        })))));
                        var f, a, c, s, l = n[0][i][0][i][0], v = Ci(l[i][1]), h = Ci(l[i][0]), d = Ci(h[0][i][0]), p = l[xi.oW], b = l[xi.oH], m = xt.nativeScrollbarSize, g = function () {
                            h[_e](o)[Oe](o),
                                v[_e](o)[Oe](o)
                        }, w = function () {
                            a = 0,
                                f && (p = c,
                                    b = s,
                                    u())
                        }, y = function (n) {
                            return c = l[xi.oW],
                                s = l[xi.oH],
                                f = c != p || s != b,
                                n && f && !a ? (Oi.cAF()(a),
                                    a = Oi.rAF()(w)) : n || w(),
                                g(),
                                n && (Oi.prvD(n),
                                    Oi.stpP(n)),
                                !1
                        }, x = {}, _ = {};
                        ri(_, me, [-2 * (m.y + 1), -2 * m.x, -2 * m.y, -2 * (m.x + 1)]),
                            Ci(l).css(_),
                            h.on(we, y),
                            v.on(we, y),
                            n.on(e, function () {
                                y(!1)
                            }),
                            x[de] = o,
                            x[pe] = o,
                            d.css(x),
                            g()
                    } else {
                        var O = A.attachEvent
                            , S = D !== di;
                        if (O)
                            n.prepend(ui(On)),
                                wt(n, R + On)[0].attachEvent("onresize", u);
                        else {
                            var z = A.createElement(pi);
                            z.setAttribute(xi.ti, "-1"),
                                z.setAttribute(xi.c, On),
                                z.onload = function () {
                                    var n = this.contentDocument.defaultView;
                                    n.addEventListener("resize", u),
                                        n.document.documentElement.style.display = "none"
                                }
                                ,
                                z.type = "text/html",
                                S && n.prepend(z),
                                z.data = "about:blank",
                                S || n.prepend(z),
                                n.on(e, u)
                        }
                    }
                    if (n[0] === H) {
                        var C = function () {
                            var n = Yt.css("direction")
                                , t = {}
                                , r = 0
                                , e = !1;
                            return n !== E && (r = "ltr" === n ? (t[le] = 0,
                                t[ce] = ge,
                                o) : (t[le] = ge,
                                    t[ce] = 0,
                                    Ct.n ? -o : Ct.i ? 0 : o),
                                Kt.children().eq(0).css(t),
                                Kt[_e](r)[Oe](o),
                                E = n,
                                e = !0),
                                e
                        };
                        C(),
                            Yn(n, we, function (n) {
                                return C() && qe(),
                                    Oi.prvD(n),
                                    Oi.stpP(n),
                                    !1
                            })
                    }
                } else if (T) {
                    var k, I = (k = n.contents()[0])[Z];
                    I && (I.disconnect(),
                        delete k[Z])
                } else
                    gt(n.children(R + On).eq(0))
            }
        }
        function Gn() {
            if (d) {
                var o, u, f, a, c, s, r, e, i, l, n = Oi.mO(), v = Oi.now();
                C = function (n) {
                    var t = !1;
                    return Ht && !Ut && (h(n, function () {
                        return !(t = function o(n) {
                            var t = n.attributeName
                                , r = n.target
                                , e = n.type
                                , i = "closest";
                            if (r === sr)
                                return null === t;
                            if ("attributes" === e && (t === xi.c || t === xi.s) && !Lt) {
                                if (t === xi.c && Ci(r).hasClass(rn))
                                    return et(n.oldValue, r.className);
                                if (typeof r[i] != bi)
                                    return !0;
                                if (null !== r[i](R + On) || null !== r[i](R + kn) || null !== r[i](R + Rn))
                                    return !1
                            }
                            return !0
                        }(this))
                    }),
                        t && (e = Oi.now(),
                            i = mr || br,
                            l = function () {
                                Et || (v = e,
                                    Lt && $e(),
                                    i ? qe() : Ot.update(ge))
                            }
                            ,
                            clearTimeout(r),
                            11 < e - v || !i ? l() : r = setTimeout(l, 11))),
                        t
                }
                    ,
                    O = new n(z = function (n) {
                        var t, r = !1, e = !1, i = [];
                        return Ht && !Ut && (h(n, function () {
                            o = (t = this).target,
                                u = t.attributeName,
                                f = u === xi.c,
                                a = t.oldValue,
                                c = o.className,
                                p && f && !e && -1 < a.indexOf(en) && c.indexOf(en) < 0 && (s = lt(!0),
                                    ur.className = c.split(xe).concat(a.split(xe).filter(function (n) {
                                        return n.match(s)
                                    })).join(xe),
                                    r = e = !0),
                                r = r || (f ? et(a, c) : u !== xi.s || a !== o[xi.s].cssText),
                                i.push(u)
                        }),
                            it(i),
                            r && Ot.update(e || ge)),
                            r
                    }
                    ),
                    S = new n(C)
            }
        }
        function Be() {
            d && !Vr && (O.observe(ur, {
                attributes: !0,
                attributeOldValue: !0,
                attributeFilter: $n
            }),
                S.observe(Lt ? or : sr, {
                    attributes: !0,
                    attributeOldValue: !0,
                    subtree: !Lt,
                    childList: !Lt,
                    characterData: !Lt,
                    attributeFilter: Lt ? Vn : $n
                }),
                Vr = !0)
        }
        function Qe() {
            d && Vr && (O.disconnect(),
                S.disconnect(),
                Vr = !1)
        }
        function Kn() {
            if (!Ut) {
                var n, t = {
                    w: H[xi.sW],
                    h: H[xi.sH]
                };
                n = fi(t, _),
                    _ = t,
                    n && qe({
                        A: !0
                    })
            }
        }
        function Jn() {
            Kr && Ge(!0)
        }
        function Zn() {
            Kr && !j.hasClass(Mn) && Ge(!1)
        }
        function nt() {
            Gr && (Ge(!0),
                clearTimeout(I),
                I = setTimeout(function () {
                    Gr && !Et && Ge(!1)
                }, 100))
        }
        function tt(n) {
            return Oi.prvD(n),
                !1
        }
        function rt(n) {
            var r = Ci(n.target);
            mt(function (n, t) {
                r.is(t) && qe({
                    I: !0
                })
            })
        }
        function Ue(n) {
            n || Ue(!0),
                Xn(Yt, $.split(xe)[0], nt, !Gr || n, !0),
                Xn(Yt, [q, X], [Jn, Zn], !Kr || n, !0),
                Ht || n || Yt.one("mouseover", Jn)
        }
        function Ve() {
            var n = {};
            return Rt && tr && (n.w = ii(tr.css(ve + de)),
                n.h = ii(tr.css(ve + pe)),
                n.c = fi(n, Ur),
                n.f = !0),
                !!(Ur = n).c
        }
        function et(n, t) {
            var r, e, i = typeof t == gi ? t.split(xe) : [], o = function f(n, t) {
                var r, e, i = [], o = [];
                for (r = 0; r < n.length; r++)
                    i[n[r]] = !0;
                for (r = 0; r < t.length; r++)
                    i[t[r]] ? delete i[t[r]] : i[t[r]] = !0;
                for (e in i)
                    o.push(e);
                return o
            }(typeof n == gi ? n.split(xe) : [], i), u = sn(De, o);
            if (-1 < u && o.splice(u, 1),
                0 < o[xi.l])
                for (e = lt(!0, !0),
                    r = 0; r < o.length; r++)
                    if (!o[r].match(e))
                        return !0;
            return !1
        }
        function it(n) {
            h(n = n || Pn, function (n, t) {
                if (-1 < Oi.inA(t, Pn)) {
                    var r = Xt.attr(t);
                    cn(r) == gi ? Zt.attr(t, r) : Zt.removeAttr(t)
                }
            })
        }
        function $e() {
            if (!Ut) {
                var n, t, r, e, i = !Fr, o = ee.w, u = ee.h, f = {}, a = br || i;
                return f[ve + de] = me,
                    f[ve + pe] = me,
                    f[de] = ge,
                    Xt.css(f),
                    n = or[xi.oW],
                    t = a ? Si.max(n, or[xi.sW] - 1) : 1,
                    f[de] = br ? ge : ye,
                    f[ve + de] = ye,
                    f[pe] = ge,
                    Xt.css(f),
                    r = or[xi.oH],
                    e = Si.max(r, or[xi.sH] - 1),
                    f[de] = t,
                    f[pe] = e,
                    er.css(f),
                    f[ve + de] = o,
                    f[ve + pe] = u,
                    Xt.css(f),
                {
                    $: n,
                    X: r,
                    Y: t,
                    G: e
                }
            }
        }
        function qe(n) {
            clearTimeout(qt),
                n = n || {},
                Fe.A |= n.A,
                Fe.I |= n.I,
                Fe.H |= n.H;
            var t, r = Oi.now(), e = !!Fe.A, i = !!Fe.I, o = !!Fe.H, u = n.T, f = 0 < Pe && Ht && !Et && !o && !u && r - $t < Pe && !mr && !br;
            if (f && (qt = setTimeout(qe, Pe)),
                !(Et || f || Ut && !u || Ht && !o && (t = Yt.is(":hidden")) || "inline" === Yt.css("display"))) {
                $t = r,
                    Fe = {},
                    !It || St.x && St.y ? At = ai({}, xt.nativeScrollbarSize) : (At.x = 0,
                        At.y = 0),
                    ie = {
                        x: 3 * (At.x + (St.x ? 0 : 3)),
                        y: 3 * (At.y + (St.y ? 0 : 3))
                    },
                    u = u || {};
                var a = function () {
                    return fi.apply(this, [].slice.call(arguments).concat([o]))
                }
                    , c = {
                        x: Zt[_e](),
                        y: Zt[Oe]()
                    }
                    , s = Vt.scrollbars
                    , l = Vt.textarea
                    , v = s.visibility
                    , h = a(v, Hr)
                    , d = s.autoHide
                    , p = a(d, Er)
                    , b = s.clickScrolling
                    , m = a(b, Lr)
                    , g = s.dragScrolling
                    , w = a(g, Rr)
                    , y = Vt.className
                    , x = a(y, Mr)
                    , _ = Vt.resize
                    , O = a(_, Nr) && !Rt
                    , S = Vt.paddingAbsolute
                    , z = a(S, Or)
                    , C = Vt.clipAlways
                    , k = a(C, Sr)
                    , I = Vt.sizeAutoCapable && !Rt
                    , T = a(I, Ar)
                    , A = Vt.nativeScrollbarsOverlaid.showNativeScrollbars
                    , H = a(A, Ir)
                    , E = Vt.autoUpdate
                    , L = a(E, Tr)
                    , R = Vt.overflowBehavior
                    , N = a(R, Cr, o)
                    , W = l.dynWidth
                    , M = a(Qr, W)
                    , D = l.dynHeight
                    , F = a(Br, D);
                if (Xr = "n" === d,
                    Yr = "s" === d,
                    Gr = "m" === d,
                    Kr = "l" === d,
                    qr = s.autoHideDelay,
                    Dr = Mr,
                    Jr = "n" === _,
                    Zr = "b" === _,
                    ne = "h" === _,
                    te = "v" === _,
                    Wr = Vt.normalizeRTL,
                    A = A && St.x && St.y,
                    Hr = v,
                    Er = d,
                    Lr = b,
                    Rr = g,
                    Mr = y,
                    Nr = _,
                    Or = S,
                    Sr = C,
                    Ar = I,
                    Ir = A,
                    Tr = E,
                    Cr = ai({}, R),
                    Qr = W,
                    Br = D,
                    dr = dr || {
                        x: !1,
                        y: !1
                    },
                    x && (si(Yt, Dr + xe + De),
                        ci(Yt, y !== di && null !== y && 0 < y.length ? y : De)),
                    L && (!0 === E || null === E && kt ? (Qe(),
                        _t.add(Ot)) : (_t.remove(Ot),
                            Be())),
                    T)
                    if (I)
                        if (rr ? rr.show() : (rr = Ci(ui(Ee)),
                            Jt.before(rr)),
                            Wt)
                            Gt.show();
                        else {
                            Gt = Ci(ui(Le)),
                                fr = Gt[0],
                                rr.before(Gt);
                            var P = {
                                w: -1,
                                h: -1
                            };
                            je(Gt, function () {
                                var n = {
                                    w: fr[xi.oW],
                                    h: fr[xi.oH]
                                };
                                fi(n, P) && (Ht && mr && 0 < n.h || br && 0 < n.w || Ht && !mr && 0 === n.h || !br && 0 === n.w) && qe(),
                                    P = n
                            }),
                                Wt = !0,
                                null !== Tt && Gt.css(pe, Tt + "(100% + 1px)")
                        }
                    else
                        Wt && Gt.hide(),
                            rr && rr.hide();
                o && (Kt.find("*").trigger(we),
                    Wt && Gt.find("*").trigger(we)),
                    t = t === di ? Yt.is(":hidden") : t;
                var j, B = !!Lt && "off" !== Xt.attr("wrap"), Q = a(B, Fr), U = Yt.css("direction"), V = a(U, _r), $ = Yt.css("box-sizing"), q = a($, gr), X = ei(ue);
                try {
                    j = Wt ? fr[xi.bCR]() : null
                } catch (wt) {
                    return
                }
                Nt = "border-box" === $;
                var Y = (Qt = "rtl" === U) ? le : ce
                    , G = Qt ? ce : le
                    , K = !1
                    , J = !(!Wt || "none" === Yt.css(be)) && (0 === Si.round(j.right - j.left) && (!!S || 0 < ur[xi.cW] - Mt));
                if (I && !J) {
                    var Z = ur[xi.oW]
                        , nn = rr.css(de);
                    rr.css(de, ge);
                    var tn = ur[xi.oW];
                    rr.css(de, nn),
                        (K = Z !== tn) || (rr.css(de, Z + 1),
                            tn = ur[xi.oW],
                            rr.css(de, nn),
                            K = Z !== tn)
                }
                var rn = (J || K) && I && !t
                    , en = a(rn, br)
                    , on = !rn && br
                    , un = !(!Wt || !I || t) && 0 === Si.round(j.bottom - j.top)
                    , fn = a(un, mr)
                    , an = !un && mr
                    , cn = ei(fe, "-" + de, !(rn && Nt || !Nt), !(un && Nt || !Nt))
                    , sn = ei(oe)
                    , ln = {}
                    , vn = {}
                    , hn = function () {
                        return {
                            w: ur[xi.cW],
                            h: ur[xi.cH]
                        }
                    }
                    , dn = function () {
                        return {
                            w: ar[xi.oW] + Si.max(0, sr[xi.cW] - sr[xi.sW]),
                            h: ar[xi.oH] + Si.max(0, sr[xi.cH] - sr[xi.sH])
                        }
                    }
                    , pn = Mt = X.l + X.r
                    , bn = Dt = X.t + X.b;
                if (pn *= S ? 1 : 0,
                    bn *= S ? 1 : 0,
                    X.c = a(X, wr),
                    Ft = cn.l + cn.r,
                    Pt = cn.t + cn.b,
                    cn.c = a(cn, yr),
                    jt = sn.l + sn.r,
                    Bt = sn.t + sn.b,
                    sn.c = a(sn, xr),
                    Fr = B,
                    _r = U,
                    gr = $,
                    br = rn,
                    mr = un,
                    wr = X,
                    yr = cn,
                    xr = sn,
                    V && Wt && Gt.css(be, G),
                    X.c || V || z || en || fn || q || T) {
                    var mn = {}
                        , gn = {}
                        , wn = [X.t, X.r, X.b, X.l];
                    ri(vn, oe, [-X.t, -X.r, -X.b, -X.l]),
                        S ? (ri(mn, me, wn),
                            ri(Lt ? gn : ln, ue)) : (ri(mn, me),
                                ri(Lt ? gn : ln, ue, wn)),
                        Jt.css(mn),
                        Xt.css(gn)
                }
                ee = dn();
                var yn = !!Lt && $e()
                    , xn = Lt && a(yn, jr)
                    , _n = Lt && yn ? {
                        w: W ? yn.Y : yn.$,
                        h: D ? yn.G : yn.X
                    } : {};
                if (jr = yn,
                    un && (fn || z || q || X.c || cn.c) ? ln[pe] = ge : (fn || z) && (ln[pe] = ye),
                    rn && (en || z || q || X.c || cn.c || V) ? (ln[de] = ge,
                        vn[he + de] = ye) : (en || z) && (ln[de] = ye,
                            ln[be] = me,
                            vn[he + de] = me),
                    rn ? (vn[de] = ge,
                        ln[de] = _i.d(de, "max-content intrinsic") || ge,
                        ln[be] = G) : vn[de] = me,
                    vn[pe] = un ? _n.h || sr[xi.cH] : me,
                    I && rr.css(vn),
                    nr.css(ln),
                    ln = {},
                    vn = {},
                    e || i || xn || V || q || z || en || rn || fn || un || H || N || k || O || h || p || w || m || M || F || Q) {
                    var On = "overflow"
                        , Sn = On + "-x"
                        , zn = On + "-y";
                    if (!It) {
                        var Cn = {}
                            , kn = dr.y && pr.ys && !A ? St.y ? Zt.css(Y) : -At.y : 0
                            , In = dr.x && pr.xs && !A ? St.x ? Zt.css(se) : -At.x : 0;
                        ri(Cn, me),
                            Zt.css(Cn)
                    }
                    var Tn = oi()
                        , An = {
                            w: _n.w || Tn[xi.cW],
                            h: _n.h || Tn[xi.cH]
                        }
                        , Hn = Tn[xi.sW]
                        , En = Tn[xi.sH];
                    It || (Cn[se] = an ? me : In,
                        Cn[Y] = on ? me : kn,
                        Zt.css(Cn)),
                        ee = dn();
                    var Ln = hn()
                        , Rn = {
                            w: Ln.w - jt - Ft - (Nt ? 0 : Mt),
                            h: Ln.h - Bt - Pt - (Nt ? 0 : Dt)
                        }
                        , Nn = {
                            w: Si.max((rn ? An.w : Hn) + pn, Rn.w),
                            h: Si.max((un ? An.h : En) + bn, Rn.h)
                        };
                    if (Nn.c = a(Nn, zr),
                        zr = Nn,
                        I) {
                        (Nn.c || un || rn) && (vn[de] = Nn.w,
                            vn[pe] = Nn.h,
                            Lt || (An = {
                                w: Tn[xi.cW],
                                h: Tn[xi.cH]
                            }));
                        var Wn = {}
                            , Mn = function (n) {
                                var t = ni(n)
                                    , r = t.j
                                    , e = t.K
                                    , i = n ? rn : un
                                    , o = n ? Ft : Pt
                                    , u = n ? Mt : Dt
                                    , f = n ? jt : Bt
                                    , a = ee[r] - o - f - (Nt ? 0 : u);
                                i && (i || !cn.c) || (vn[e] = Rn[r] - 1),
                                    !(i && An[r] < a) || n && Lt && B || (Lt && (Wn[e] = ii(er.css(e)) - 1),
                                        --vn[e]),
                                    0 < An[r] && (vn[e] = Si.max(1, vn[e]))
                            };
                        Mn(!0),
                            Mn(!1),
                            Lt && er.css(Wn),
                            rr.css(vn)
                    }
                    rn && (ln[de] = ye),
                        !rn || Nt || Vr || (ln[be] = "none"),
                        nr.css(ln),
                        ln = {};
                    var Dn = {
                        w: Tn[xi.sW],
                        h: Tn[xi.sH]
                    };
                    Dn.c = i = a(Dn, vr),
                        vr = Dn,
                        ee = dn(),
                        e = a(Ln = hn(), lr),
                        lr = Ln;
                    var Fn = Lt && (0 === ee.w || 0 === ee.h)
                        , Pn = kr
                        , jn = {}
                        , Bn = {}
                        , Qn = {}
                        , Un = {}
                        , Vn = {}
                        , $n = {}
                        , qn = {}
                        , Xn = ar[xi.bCR]()
                        , Yn = function (n) {
                            var t = ni(n)
                                , r = ni(!n).Q
                                , e = t.Q
                                , i = t.j
                                , o = t.K
                                , u = we + t.J + "Max"
                                , f = Xn[o] ? Si.abs(Xn[o] - ee[i]) : 0
                                , a = Pn && 0 < Pn[e] && 0 === cr[u];
                            jn[e] = "v-s" === R[e],
                                Bn[e] = "v-h" === R[e],
                                Qn[e] = "s" === R[e],
                                Un[e] = Si.max(0, Si.round(100 * (Dn[i] - ee[i])) / 100),
                                Un[e] *= Fn || a && 0 < f && f < 1 ? 0 : 1,
                                Vn[e] = 0 < Un[e],
                                $n[e] = jn[e] || Bn[e] ? Vn[r] && !jn[r] && !Bn[r] : Vn[e],
                                $n[e + "s"] = !!$n[e] && (Qn[e] || jn[e]),
                                qn[e] = Vn[e] && $n[e + "s"]
                        };
                    if (Yn(!0),
                        Yn(!1),
                        Un.c = a(Un, kr),
                        kr = Un,
                        Vn.c = a(Vn, dr),
                        dr = Vn,
                        $n.c = a($n, pr),
                        pr = $n,
                        St.x || St.y) {
                        var Gn, Kn = {}, Jn = {}, Zn = o;
                        (Vn.x || Vn.y) && (Jn.w = St.y && Vn.y ? Dn.w + zt.y : me,
                            Jn.h = St.x && Vn.x ? Dn.h + zt.x : me,
                            Zn = a(Jn, hr),
                            hr = Jn),
                            (Vn.c || $n.c || Dn.c || V || en || fn || rn || un || H) && (ln[oe + G] = ln[fe + G] = me,
                                Gn = function (n) {
                                    var t = ni(n)
                                        , r = ni(!n)
                                        , e = t.Q
                                        , i = n ? se : Y
                                        , o = n ? un : rn;
                                    St[e] && Vn[e] && $n[e + "s"] ? (ln[oe + i] = !o || A ? me : zt[e],
                                        ln[fe + i] = n && o || A ? me : zt[e] + "px solid transparent") : (Jn[r.j] = ln[oe + i] = ln[fe + i] = me,
                                            Zn = !0)
                                }
                                ,
                                It ? li(Zt, Ae, !A) : (Gn(!0),
                                    Gn(!1))),
                            A && (Jn.w = Jn.h = me,
                                Zn = !0),
                            Zn && !It && (Kn[de] = $n.y ? Jn.w : me,
                                Kn[pe] = $n.x ? Jn.h : me,
                                tr || (tr = Ci(ui(He)),
                                    Zt.prepend(tr)),
                                tr.css(Kn)),
                            nr.css(ln)
                    }
                    var nt, tt = {};
                    mn = {};
                    if ((e || Vn.c || $n.c || Dn.c || N || q || H || V || k || fn) && (tt[G] = me,
                        (nt = function (n) {
                            var t = ni(n)
                                , r = ni(!n)
                                , e = t.Q
                                , i = t.Z
                                , o = n ? se : Y
                                , u = function () {
                                    tt[o] = me,
                                        re[r.j] = 0
                                };
                            Vn[e] && $n[e + "s"] ? (tt[On + i] = we,
                                A || It ? u() : (tt[o] = -(St[e] ? zt[e] : At[e]),
                                    re[r.j] = St[e] ? zt[r.Q] : 0)) : (tt[On + i] = me,
                                        u())
                        }
                        )(!0),
                        nt(!1),
                        !It && (ee.h < ie.x || ee.w < ie.y) && (Vn.x && $n.x && !St.x || Vn.y && $n.y && !St.y) ? (tt[ue + ae] = ie.x,
                            tt[oe + ae] = -ie.x,
                            tt[ue + G] = ie.y,
                            tt[oe + G] = -ie.y) : tt[ue + ae] = tt[oe + ae] = tt[ue + G] = tt[oe + G] = me,
                        tt[ue + Y] = tt[oe + Y] = me,
                        Vn.x && $n.x || Vn.y && $n.y || Fn ? Lt && Fn && (mn[Sn] = mn[zn] = "hidden") : (!C || Bn.x || jn.x || Bn.y || jn.y) && (Lt && (mn[Sn] = mn[zn] = me),
                            tt[Sn] = tt[zn] = "visible"),
                        Jt.css(mn),
                        Zt.css(tt),
                        tt = {},
                        (Vn.c || q || en || fn) && (!St.x || !St.y))) {
                        var rt = sr[xi.s];
                        rt.webkitTransform = "scale(1)",
                            rt.display = "run-in",
                            sr[xi.oH],
                            rt.display = me,
                            rt.webkitTransform = me
                    }
                    if (ln = {},
                        V || en || fn)
                        if (Qt && rn) {
                            var et = nr.css(be)
                                , it = Si.round(nr.css(be, me).css(le, me).position().left);
                            nr.css(be, et),
                                it !== Si.round(nr.position().left) && (ln[le] = it)
                        } else
                            ln[le] = me;
                    if (nr.css(ln),
                        Lt && i) {
                        var ot = function yt() {
                            var n = or.selectionStart;
                            if (n === di)
                                return;
                            var t, r, e = Xt.val(), i = e[xi.l], o = e.split("\n"), u = o[xi.l], f = e.substr(0, n).split("\n"), a = 0, c = 0, s = f[xi.l], l = f[f[xi.l] - 1][xi.l];
                            for (r = 0; r < o[xi.l]; r++)
                                t = o[r][xi.l],
                                    c < t && (a = r + 1,
                                        c = t);
                            return {
                                nn: s,
                                tn: l,
                                rn: u,
                                en: c,
                                "in": a,
                                un: n,
                                an: i
                            }
                        }();
                        if (ot) {
                            var ut = Pr === di || ot.rn !== Pr.rn
                                , ft = ot.nn
                                , at = ot.tn
                                , ct = ot["in"]
                                , st = ot.rn
                                , lt = ot.en
                                , vt = ot.un
                                , ht = ot.an <= vt && $r
                                , dt = {
                                    x: B || at !== lt || ft !== ct ? -1 : kr.x,
                                    y: (B ? ht || ut && Pn && c.y === Pn.y : (ht || ut) && ft === st) ? kr.y : -1
                                };
                            c.x = -1 < dt.x ? Qt && Wr && Ct.i ? 0 : dt.x : c.x,
                                c.y = -1 < dt.y ? dt.y : c.y
                        }
                        Pr = ot
                    }
                    Qt && Ct.i && St.y && Vn.x && Wr && (c.x += re.w || 0),
                        rn && Yt[_e](0),
                        un && Yt[Oe](0),
                        Zt[_e](c.x)[Oe](c.y);
                    var pt = "v" === v
                        , bt = "h" === v
                        , mt = "a" === v
                        , gt = function (n, t) {
                            t = t === di ? n : t,
                                Ye(!0, n, qn.x),
                                Ye(!1, t, qn.y)
                        };
                    li(Yt, ke, $n.x || $n.y),
                        li(Yt, Ie, $n.x),
                        li(Yt, Te, $n.y),
                        V && !Rt && li(Yt, Se, Qt),
                        Rt && ci(Yt, ze),
                        O && (li(Yt, ze, Jr),
                            li(ir, Re, !Jr),
                            li(ir, Ne, Zr),
                            li(ir, We, ne),
                            li(ir, Me, te)),
                        (h || N || $n.c || Vn.c || H) && (A ? H && (si(Yt, Ce),
                            A && gt(!1)) : mt ? gt(qn.x, qn.y) : pt ? gt(!0) : bt && gt(!1)),
                        (p || H) && (Ue(!Kr && !Gr),
                            Ge(Xr, !Xr)),
                        (e || Un.c || fn || en || O || q || z || H || V) && (Ke(!0),
                            Je(!0),
                            Ke(!1),
                            Je(!1)),
                        m && Ze(!0, b),
                        w && Ze(!1, g),
                        ti("onDirectionChanged", {
                            isRTL: Qt,
                            dir: U
                        }, V),
                        ti("onHostSizeChanged", {
                            width: lr.w,
                            height: lr.h
                        }, e),
                        ti("onContentSizeChanged", {
                            width: vr.w,
                            height: vr.h
                        }, i),
                        ti("onOverflowChanged", {
                            x: Vn.x,
                            y: Vn.y,
                            xScrollable: $n.xs,
                            yScrollable: $n.ys,
                            clipped: $n.x || $n.y
                        }, Vn.c || $n.c),
                        ti("onOverflowAmountChanged", {
                            x: Un.x,
                            y: Un.y
                        }, Un.c)
                }
                Rt && Ur && (dr.c || Ur.c) && (Ur.f || Ve(),
                    St.y && dr.x && nr.css(ve + de, Ur.w + zt.y),
                    St.x && dr.y && nr.css(ve + pe, Ur.h + zt.x),
                    Ur.c = !1),
                    Ht && u.updateOnLoad && Xe(),
                    ti("onUpdated", {
                        forced: o
                    })
            }
        }
        function Xe() {
            Lt || mt(function (n, t) {
                nr.find(t).each(function (n, t) {
                    Oi.inA(t, Qn) < 0 && (Qn.push(t),
                        Ci(t).off(Bn, rt).on(Bn, rt))
                })
            })
        }
        function ot(n) {
            var t = Ii.O(n, Ii._, !0, u);
            return u = ai({}, u, t.S),
                Vt = ai({}, Vt, t.z),
                t.z
        }
        function ut(e) {
            var n = "parent"
                , t = mn + xe + Cn
                , r = Lt ? xe + Cn : me
                , i = Vt.textarea.inheritedAttrs
                , o = {}
                , u = function () {
                    var r = e ? Xt : Yt;
                    h(o, function (n, t) {
                        cn(t) == gi && (n == xi.c ? r.addClass(t) : r.attr(n, t))
                    })
                }
                , f = [rn, en, on, ze, Se, un, fn, an, Ce, ke, Ie, Te, De, mn, Cn, Mr].join(xe)
                , a = {};
            Yt = Yt || (Lt ? p ? Xt[n]()[n]()[n]()[n]() : Ci(ui(on)) : Xt),
                nr = nr || pt(_n + r),
                Zt = Zt || pt(yn + r),
                Jt = Jt || pt(wn + r),
                Kt = Kt || pt("os-resize-observer-host"),
                er = er || (Lt ? pt(gn) : di),
                p && ci(Yt, en),
                e && si(Yt, f),
                i = cn(i) == gi ? i.split(xe) : i,
                Oi.isA(i) && Lt && h(i, function (n, t) {
                    cn(t) == gi && (o[t] = e ? Yt.attr(t) : Xt.attr(t))
                }),
                e ? (p && Ht ? (Kt.children().remove(),
                    h([Jt, Zt, nr, er], function (n, t) {
                        t && si(t.removeAttr(xi.s), Dn)
                    }),
                    ci(Yt, Lt ? on : rn)) : (gt(Kt),
                        nr.contents().unwrap().unwrap().unwrap(),
                        Lt && (Xt.unwrap(),
                            gt(Yt),
                            gt(er),
                            u())),
                    Lt && Xt.removeAttr(xi.s),
                    Rt && si(c, tn)) : (Lt && (Vt.sizeAutoCapable || (a[de] = Xt.css(de),
                        a[pe] = Xt.css(pe)),
                        p || Xt.addClass(Cn).wrap(Yt),
                        Yt = Xt[n]().css(a)),
                        p || (ci(Xt, Lt ? t : rn),
                            Yt.wrapInner(nr).wrapInner(Zt).wrapInner(Jt).prepend(Kt),
                            nr = wt(Yt, R + _n),
                            Zt = wt(Yt, R + yn),
                            Jt = wt(Yt, R + wn),
                            Lt && (nr.prepend(er),
                                u())),
                        It && ci(Zt, Ae),
                        St.x && St.y && ci(Zt, xn),
                        Rt && ci(c, tn),
                        H = Kt[0],
                        ur = Yt[0],
                        ar = Jt[0],
                        cr = Zt[0],
                        sr = nr[0],
                        it())
        }
        function ft() {
            var r, t, e = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 33, 34, 37, 38, 39, 40, 16, 17, 18, 19, 20, 144], i = [], n = "focus";
            function o(n) {
                $e(),
                    Ot.update(ge),
                    n && kt && clearInterval(r)
            }
            Lt ? (9 < D || !kt ? Yn(Xt, "input", o) : Yn(Xt, [Y, G], [function u(n) {
                var t = n.keyCode;
                sn(t, e) < 0 && (i[xi.l] || (o(),
                    r = setInterval(o, 1e3 / 60)),
                    sn(t, i) < 0 && i.push(t))
            }
                , function f(n) {
                    var t = n.keyCode
                        , r = sn(t, i);
                    sn(t, e) < 0 && (-1 < r && i.splice(r, 1),
                        i[xi.l] || o(!0))
                }
            ]),
                Yn(Xt, [we, "drop", n, n + "out"], [function a(n) {
                    return Xt[_e](Ct.i && Wr ? 9999999 : 0),
                        Xt[Oe](0),
                        Oi.prvD(n),
                        Oi.stpP(n),
                        !1
                }
                    , function c(n) {
                        setTimeout(function () {
                            Et || o()
                        }, 50)
                    }
                    , function s() {
                        $r = !0,
                            ci(Yt, n)
                    }
                    , function l() {
                        $r = !1,
                            i = [],
                            si(Yt, n),
                            o(!0)
                    }
                ])) : Yn(nr, J, function v(n) {
                    !0 !== Tr && function l(n) {
                        if (!Ht)
                            return 1;
                        var t = "flex-grow"
                            , r = "flex-shrink"
                            , e = "flex-basis"
                            , i = [de, ve + de, he + de, oe + le, oe + ce, le, ce, "font-weight", "word-spacing", t, r, e]
                            , o = [ue + le, ue + ce, fe + le + de, fe + ce + de]
                            , u = [pe, ve + pe, he + pe, oe + ae, oe + se, ae, se, "line-height", t, r, e]
                            , f = [ue + ae, ue + se, fe + ae + de, fe + se + de]
                            , a = "s" === Cr.x || "v-s" === Cr.x
                            , c = !1
                            , s = function (n, t) {
                                for (var r = 0; r < n[xi.l]; r++)
                                    if (n[r] === t)
                                        return !0;
                                return !1
                            };
                        return ("s" === Cr.y || "v-s" === Cr.y) && ((c = s(u, n)) || Nt || (c = s(f, n))),
                            a && !c && ((c = s(i, n)) || Nt || (c = s(o, n))),
                            c
                    }((n = n.originalEvent || n).propertyName) && Ot.update(ge)
                }),
                Yn(Zt, we, function h(n) {
                    Ut || (t !== di ? clearTimeout(t) : ((Yr || Gr) && Ge(!0),
                        dt() || ci(Yt, Ce),
                        ti("onScrollStart", n)),
                        Q || (Je(!0),
                            Je(!1)),
                        ti("onScroll", n),
                        t = setTimeout(function () {
                            Et || (clearTimeout(t),
                                t = di,
                                (Yr || Gr) && Ge(!1),
                                dt() || si(Yt, Ce),
                                ti("onScrollStop", n))
                        }, 175))
                }, !0)
        }
        function at(i) {
            var n, t, o = function (n) {
                var t = pt(kn + xe + (n ? Nn : Wn), !0)
                    , r = pt(In, t)
                    , e = pt(An, t);
                return p || i || (t.append(r),
                    r.append(e)),
                {
                    cn: t,
                    sn: r,
                    ln: e
                }
            };
            function r(n) {
                var t = ni(n)
                    , r = t.cn
                    , e = t.sn
                    , i = t.ln;
                p && Ht ? h([r, e, i], function (n, t) {
                    si(t.removeAttr(xi.s), Dn)
                }) : gt(r || o(n).cn)
            }
            i ? (r(!0),
                r()) : (n = o(!0),
                    t = o(),
                    a = n.cn,
                    s = n.sn,
                    l = n.ln,
                    v = t.cn,
                    b = t.sn,
                    m = t.ln,
                    p || (Jt.after(v),
                        Jt.after(a)))
        }
        function ct(S) {
            var z, i, C, k, e = ni(S), I = e.vn, t = x.top !== x, T = e.Q, r = e.Z, A = we + e.J, o = "active", u = "snapHandle", f = "click", H = 1, a = [16, 17];
            function c(n) {
                return D && t ? n["screen" + r] : Oi.page(n)[T]
            }
            function s(n) {
                return Vt.scrollbars[n]
            }
            function l() {
                H = .5
            }
            function v() {
                H = 1
            }
            function h(n) {
                Oi.stpP(n)
            }
            function E(n) {
                -1 < sn(n.keyCode, a) && l()
            }
            function L(n) {
                -1 < sn(n.keyCode, a) && v()
            }
            function R(n) {
                var t = (n.originalEvent || n).touches !== di;
                return !(Ut || Et || dt() || !Rr || t && !s("touchSupport")) && (1 === Oi.mBtn(n) || t)
            }
            function d(n) {
                if (R(n)) {
                    var t = I.F
                        , r = I.M
                        , e = I.N * ((c(n) - C) * k / (t - r));
                    e = isFinite(e) ? e : 0,
                        Qt && S && !Ct.i && (e *= -1),
                        Zt[A](Si.round(i + e)),
                        Q && Je(S, i + e),
                        w || Oi.prvD(n)
                } else
                    N(n)
            }
            function N(n) {
                if (n = n || n.originalEvent,
                    Xn(P, [$, V, Y, G, K], [d, N, E, L, tt], !0),
                    Oi.rAF()(function () {
                        Xn(P, f, h, !0, {
                            V: !0
                        })
                    }),
                    Q && Je(S, !0),
                    Q = !1,
                    si(j, Mn),
                    si(e.ln, o),
                    si(e.sn, o),
                    si(e.cn, o),
                    k = 1,
                    v(),
                    z !== (C = i = di) && (Ot.scrollStop(),
                        clearTimeout(z),
                        z = di),
                    n) {
                    var t = ur[xi.bCR]();
                    n.clientX >= t.left && n.clientX <= t.right && n.clientY >= t.top && n.clientY <= t.bottom || Zn(),
                        (Yr || Gr) && Ge(!1)
                }
            }
            function W(n) {
                i = Zt[A](),
                    i = isNaN(i) ? 0 : i,
                    (Qt && S && !Ct.n || !Qt) && (i = i < 0 ? 0 : i),
                    k = vt()[T],
                    C = c(n),
                    Q = !s(u),
                    ci(j, Mn),
                    ci(e.ln, o),
                    ci(e.cn, o),
                    Xn(P, [$, V, K], [d, N, tt]),
                    Oi.rAF()(function () {
                        Xn(P, f, h, !1, {
                            V: !0
                        })
                    }),
                    !D && y || Oi.prvD(n),
                    Oi.stpP(n)
            }
            Yn(e.ln, U, function p(n) {
                R(n) && W(n)
            }),
                Yn(e.sn, [U, q, X], [function M(n) {
                    if (R(n)) {
                        var h, t = e.vn.M / Math.round(Si.min(1, ee[e.j] / vr[e.j]) * e.vn.F), d = Si.round(ee[e.j] * t), p = 270 * t, b = 400 * t, m = e.sn.offset()[e.B], r = n.ctrlKey, g = n.shiftKey, w = g && r, y = !0, x = function (n) {
                            Q && Je(S, n)
                        }, _ = function () {
                            x(),
                                W(n)
                        }, O = function () {
                            if (!Et) {
                                var n = (C - m) * k
                                    , t = I.W
                                    , r = I.F
                                    , e = I.M
                                    , i = I.N
                                    , o = I.L
                                    , u = p * H
                                    , f = y ? Si.max(b, u) : u
                                    , a = i * ((n - e / 2) / (r - e))
                                    , c = Qt && S && (!Ct.i && !Ct.n || Wr)
                                    , s = c ? t < n : n < t
                                    , l = {}
                                    , v = {
                                        easing: "linear",
                                        step: function (n) {
                                            Q && (Zt[A](n),
                                                Je(S, n))
                                        }
                                    };
                                a = isFinite(a) ? a : 0,
                                    a = Qt && S && !Ct.i ? i - a : a,
                                    g ? (Zt[A](a),
                                        w ? (a = Zt[A](),
                                            Zt[A](o),
                                            a = c && Ct.i ? i - a : a,
                                            a = c && Ct.n ? -a : a,
                                            l[T] = a,
                                            Ot.scroll(l, ai(v, {
                                                duration: 130,
                                                complete: _
                                            }))) : _()) : (h = y ? s : h,
                                                (c ? h ? n <= t + e : t <= n : h ? t <= n : n <= t + e) ? (clearTimeout(z),
                                                    Ot.scrollStop(),
                                                    z = di,
                                                    x(!0)) : (z = setTimeout(O, f),
                                                        l[T] = (h ? "-=" : "+=") + d,
                                                        Ot.scroll(l, ai(v, {
                                                            duration: u
                                                        }))),
                                                y = !1)
                            }
                        };
                        r && l(),
                            k = vt()[T],
                            C = Oi.page(n)[T],
                            Q = !s(u),
                            ci(j, Mn),
                            ci(e.sn, o),
                            ci(e.cn, o),
                            Xn(P, [V, Y, G, K], [N, E, L, tt]),
                            O(),
                            Oi.prvD(n),
                            Oi.stpP(n)
                    }
                }
                    , function b(n) {
                        B = !0,
                            (Yr || Gr) && Ge(!0)
                    }
                    , function m(n) {
                        B = !1,
                            (Yr || Gr) && Ge(!1)
                    }
                ]),
                Yn(e.cn, U, function g(n) {
                    Oi.stpP(n)
                }),
                F && Yn(e.cn, J, function (n) {
                    n.target === e.cn[0] && (Ke(S),
                        Je(S))
                })
        }
        function Ye(n, t, r) {
            var e = n ? a : v;
            li(Yt, n ? un : fn, !t),
                li(e, En, !r)
        }
        function Ge(n, t) {
            if (clearTimeout(k),
                n)
                si(a, Ln),
                    si(v, Ln);
            else {
                var r, e = function () {
                    B || Et || (!(r = l.hasClass("active") || m.hasClass("active")) && (Yr || Gr || Kr) && ci(a, Ln),
                        !r && (Yr || Gr || Kr) && ci(v, Ln))
                };
                0 < qr && !0 !== t ? k = setTimeout(e, qr) : e()
            }
        }
        function Ke(n) {
            var t = {}
                , r = ni(n)
                , e = r.vn
                , i = Si.min(1, ee[r.j] / vr[r.j]);
            t[r.K] = Si.floor(100 * i * 1e6) / 1e6 + "%",
                dt() || r.ln.css(t),
                e.M = r.ln[0]["offset" + r.hn],
                e.D = i
        }
        function Je(n, t) {
            var r, e, i = cn(t) == wi, o = Qt && n, u = ni(n), f = u.vn, a = "translate(", c = _i.v("transform"), s = _i.v("transition"), l = n ? Zt[_e]() : Zt[Oe](), v = t === di || i ? l : t, h = f.M, d = u.sn[0]["offset" + u.hn], p = d - h, b = {}, m = (cr[we + u.hn] - cr["client" + u.hn]) * (Ct.n && o ? -1 : 1), g = function (n) {
                return isNaN(n / m) ? 0 : Si.max(0, Si.min(1, n / m))
            }, w = function (n) {
                var t = p * n;
                return t = isNaN(t) ? 0 : t,
                    t = o && !Ct.i ? d - h - t : t,
                    t = Si.max(0, t)
            }, y = g(l), x = w(g(v)), _ = w(y);
            f.N = m,
                f.L = l,
                f.R = y,
                ln ? (r = o ? -(d - h - x) : x,
                    e = n ? a + r + "px, 0)" : a + "0, " + r + "px)",
                    b[c] = e,
                    F && (b[s] = i && 1 < Si.abs(x - f.W) ? function O(n) {
                        var t = _i.v("transition")
                            , r = n.css(t);
                        if (r)
                            return r;
                        for (var e, i, o, u = "\\s*(([^,(]+(\\(.+?\\))?)+)[\\s,]*", f = new RegExp(u), a = new RegExp("^(" + u + ")+$"), c = "property duration timing-function delay".split(" "), s = [], l = 0, v = function (n) {
                            if (e = [],
                                !n.match(a))
                                return n;
                            for (; n.match(f);)
                                e.push(RegExp.$1),
                                    n = n.replace(f, me);
                            return e
                        }; l < c[xi.l]; l++)
                            for (i = v(n.css(t + "-" + c[l])),
                                o = 0; o < i[xi.l]; o++)
                                s[o] = (s[o] ? s[o] + xe : me) + i[o];
                        return s.join(", ")
                    }(u.ln) + ", " + (c + xe + 250) + "ms" : me)) : b[u.B] = x,
                dt() || (u.ln.css(b),
                    ln && F && i && u.ln.one(J, function () {
                        Et || u.ln.css(s, me)
                    })),
                f.W = x,
                f.P = _,
                f.F = d
        }
        function Ze(n, t) {
            var r = t ? "removeClass" : "addClass"
                , e = n ? b : m
                , i = n ? Tn : Hn;
            (n ? s : l)[r](i),
                e[r](i)
        }
        function ni(n) {
            return {
                K: n ? de : pe,
                hn: n ? "Width" : "Height",
                B: n ? le : ae,
                J: n ? "Left" : "Top",
                Q: n ? pn : bn,
                Z: n ? "X" : "Y",
                j: n ? "w" : "h",
                dn: n ? "l" : "t",
                sn: n ? s : b,
                ln: n ? l : m,
                cn: n ? a : v,
                vn: n ? vn : hn
            }
        }
        function st(n) {
            ir = ir || pt(Rn, !0),
                n ? p && Ht ? si(ir.removeAttr(xi.s), Dn) : gt(ir) : p || Yt.append(ir)
        }
        function ti(n, t, r) {
            if (!1 !== r)
                if (Ht) {
                    var e, i = Vt.callbacks[n], o = n;
                    "on" === o.substr(0, 2) && (o = o.substr(2, 1).toLowerCase() + o.substr(3)),
                        cn(i) == bi && i.call(Ot, t),
                        h(jn, function () {
                            cn((e = this).on) == bi && e.on(o, t)
                        })
                } else
                    Et || Fn.push({
                        n: n,
                        a: t
                    })
        }
        function ri(n, t, r) {
            r = r || [me, me, me, me],
                n[(t = t || me) + ae] = r[0],
                n[t + ce] = r[1],
                n[t + se] = r[2],
                n[t + le] = r[3]
        }
        function ei(n, t, r, e) {
            return t = t || me,
                n = n || me,
            {
                t: e ? 0 : ii(Yt.css(n + ae + t)),
                r: r ? 0 : ii(Yt.css(n + ce + t)),
                b: e ? 0 : ii(Yt.css(n + se + t)),
                l: r ? 0 : ii(Yt.css(n + le + t))
            }
        }
        function lt(n, t) {
            var r, e, i, o = function (n, t) {
                if (i = "",
                    t && typeof n == gi)
                    for (e = n.split(xe),
                        r = 0; r < e[xi.l]; r++)
                        i += "|" + e[r] + "$";
                return i
            };
            return new RegExp("(^" + rn + "([-_].+|)$)" + o(Mr, n) + o(Dr, t), "g")
        }
        function vt() {
            var n = ar[xi.bCR]();
            return {
                x: ln && 1 / (Si.round(n.width) / ar[xi.oW]) || 1,
                y: ln && 1 / (Si.round(n.height) / ar[xi.oH]) || 1
            }
        }
        function ht(n) {
            var t = "ownerDocument"
                , r = "HTMLElement"
                , e = n && n[t] && n[t].parentWindow || vi;
            return typeof e[r] == pi ? n instanceof e[r] : n && typeof n == pi && null !== n && 1 === n.nodeType && typeof n.nodeName == gi
        }
        function ii(n, t) {
            var r = t ? parseFloat(n) : parseInt(n, 10);
            return isNaN(r) ? 0 : r
        }
        function dt() {
            return Ir && St.x && St.y
        }
        function oi() {
            return Lt ? er[0] : sr
        }
        function ui(r, n) {
            return "<div " + (r ? cn(r) == gi ? 'class="' + r + '"' : function () {
                var n, t = me;
                if (Ci.isPlainObject(r))
                    for (n in r)
                        t += ("c" === n ? "class" : n) + '="' + r[n] + '" ';
                return t
            }() : me) + ">" + (n || me) + "</div>"
        }
        function pt(n, t) {
            var r = cn(t) == wi
                , e = !r && t || Yt;
            return p && !e[xi.l] ? null : p ? e[r ? "children" : "find"](R + n.replace(/\s/g, R)).eq(0) : Ci(ui(n))
        }
        function bt(n, t) {
            for (var r, e = t.split(R), i = 0; i < e.length; i++) {
                if (!n[xi.hOP](e[i]))
                    return;
                r = n[e[i]],
                    i < e.length && cn(r) == pi && (n = r)
            }
            return r
        }
        function mt(n) {
            var t = Vt.updateOnLoad;
            t = cn(t) == gi ? t.split(xe) : t,
                Oi.isA(t) && !Et && h(t, n)
        }
        function fi(n, t, r) {
            if (r)
                return r;
            if (cn(n) != pi || cn(t) != pi)
                return n !== t;
            for (var e in n)
                if ("c" !== e) {
                    if (!n[xi.hOP](e) || !t[xi.hOP](e))
                        return !0;
                    if (fi(n[e], t[e]))
                        return !0
                }
            return !1
        }
        function ai() {
            return Ci.extend.apply(this, [!0].concat([].slice.call(arguments)))
        }
        function ci(n, t) {
            return e.addClass.call(n, t)
        }
        function si(n, t) {
            return e.removeClass.call(n, t)
        }
        function li(n, t, r) {
            return (r ? ci : si)(n, t)
        }
        function gt(n) {
            return e.remove.call(n)
        }
        function wt(n, t) {
            return e.find.call(n, t).eq(0)
        }
    }
    return zi && zi.fn && (zi.fn.overlayScrollbars = function (n, t) {
        return zi.isPlainObject(n) ? (zi.each(this, function () {
            q(this, n, t)
        }),
            this) : q(this, n)
    }
    ),
        q
});
